WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.090
We're going to save our file and we're going to run an UPDATE command again.

00:00:12.170 --> 00:00:15.225
Now, we're getting an error here that says,

00:00:15.225 --> 00:00:19.620
unresolved resource dependency, PrivateSubnet1CIDR,

00:00:19.620 --> 00:00:22.705
in the resources blog of the template.

00:00:22.705 --> 00:00:26.110
So you would go there and it would say,

00:00:26.110 --> 00:00:29.060
it's telling you, I don't know what this is.

00:00:29.060 --> 00:00:34.040
This is what the error is saying, it's unresolved dependency.

00:00:34.040 --> 00:00:36.570
So we need to clear that up.

00:00:36.790 --> 00:00:39.560
In this case, this design,

00:00:39.560 --> 00:00:42.680
what it calls for is four parameters,

00:00:42.680 --> 00:00:44.750
these values needs to be passed in.

00:00:44.750 --> 00:00:47.580
So let's check our parameter section.

00:00:48.860 --> 00:00:57.090
Sure enough, we have a VPC CIDR but we don't have a CIDR block for the subnet.

00:00:57.090 --> 00:00:58.845
So let's copy that over.

00:00:58.845 --> 00:01:02.530
Let's go back to our reference document,

00:01:02.870 --> 00:01:06.960
and we should have these parameters here,

00:01:06.960 --> 00:01:09.465
that's going to be four of them.

00:01:09.465 --> 00:01:12.045
Public subnet, public subnet 2,

00:01:12.045 --> 00:01:15.585
private subnet, and private subnet 2.

00:01:15.585 --> 00:01:24.500
We're going to copy these values and I'm going to paste them over here.

00:01:26.750 --> 00:01:30.480
If you have a JSON-enabled editor and

00:01:30.480 --> 00:01:33.280
I'm missing a comma or something you would see it here,

00:01:33.280 --> 00:01:37.210
it will tell you, "Hey, this format is invalid," but it's not the case right now,

00:01:37.210 --> 00:01:40.195
so we can just go ahead and save this file.

00:01:40.195 --> 00:01:43.350
Now we have this four parameters,

00:01:43.350 --> 00:01:46.090
and let's run it again and see what happens.

00:01:49.280 --> 00:01:51.630
Now we're saying, "Hey,

00:01:51.630 --> 00:01:55.605
we have this four values that you just added to the parameter file",

00:01:55.605 --> 00:01:59.925
and they say, "Hey, it do not exist in the template."

00:01:59.925 --> 00:02:02.080
That's a very good error.

00:02:02.080 --> 00:02:03.610
This is just saying that we have

00:02:03.610 --> 00:02:08.500
these values that we intend to use but we're not using them.

00:02:08.500 --> 00:02:10.920
So let's go back to our file.

00:02:10.920 --> 00:02:14.785
It's true, we have only declared two parameters,

00:02:14.785 --> 00:02:19.435
we should be having it at least four more for the four subnets.

00:02:19.435 --> 00:02:23.200
So going back to our reference document,

00:02:23.200 --> 00:02:26.650
if we go to the Parameters section, sure enough,

00:02:26.650 --> 00:02:32.940
you see that we have these four values here that we should have in the other one as well.

00:02:36.250 --> 00:02:38.300
I have defaults here,

00:02:38.300 --> 00:02:43.710
but those defaults will be replaced with what we have in the parameter file.

00:02:48.100 --> 00:02:51.360
So let's copy this over.

00:02:59.230 --> 00:03:02.090
These have very important errors for you to see,

00:03:02.090 --> 00:03:03.695
because you will get this error

00:03:03.695 --> 00:03:06.980
mostly on your day-to-day activities when doing cloud formation.

00:03:06.980 --> 00:03:10.650
So this is very important and useful lesson here.

00:03:11.840 --> 00:03:14.655
So we have VPC CIDR,

00:03:14.655 --> 00:03:17.640
public subnet 1, 2,

00:03:17.640 --> 00:03:19.920
private subnet 1 and 2.

00:03:19.920 --> 00:03:25.150
We're going to save it, and let's try again. Let's see what happens now.

00:03:26.090 --> 00:03:29.055
Now we get a stackID,

00:03:29.055 --> 00:03:30.600
which means it's finally running.

00:03:30.600 --> 00:03:34.380
Let's get back to our console and see what's happening.

00:03:37.100 --> 00:03:40.630
We see an update and progress.

00:03:43.760 --> 00:03:48.730
As you can see, we have subnets creation in progress.

00:04:01.850 --> 00:04:07.210
That update completed. We get a confirmation that the subnets were created.

00:04:07.430 --> 00:04:10.660
This time instead of going straight back to the code,

00:04:10.660 --> 00:04:12.910
let's verify that we're actually doing something by

00:04:12.910 --> 00:04:16.970
typing VPC here from the services menu.

00:04:20.620 --> 00:04:26.320
We'll click on VPC, we see that we have a VPC here,

00:04:26.320 --> 00:04:31.550
but let's go to the subnet section by clicking here on the left bar.

00:04:31.710 --> 00:04:36.680
So you can see we have several subnets.

00:04:40.000 --> 00:04:42.985
Let's click on one of them.

00:04:42.985 --> 00:04:45.630
Down here, you can see the details.

00:04:45.630 --> 00:04:47.300
"Hey, this subnet belongs to

00:04:47.300 --> 00:04:51.965
this particular stack and this is the VPC ID that is assigned to it.

00:04:51.965 --> 00:04:54.810
So everything is looking good so far.

00:04:55.040 --> 00:04:59.015
This is the option that we mentioned in the properties.

00:04:59.015 --> 00:05:01.220
We have the ability to automatically assign

00:05:01.220 --> 00:05:04.390
public IP addresses to servers that we deploy in there,

00:05:04.390 --> 00:05:07.730
but again, that doesn't really matter if you don't have proper routing,

00:05:07.730 --> 00:05:10.790
which we need to assign to our subnets.

