{
  "data": {
    "lesson": {
      "id": 809197,
      "key": "1cfc2507-c1d3-455b-92ac-d274e5befd36",
      "title": "Networking",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "This lesson will cover the basic knowledge and tools required to configure and investigate network connectivity.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": null,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/1cfc2507-c1d3-455b-92ac-d274e5befd36/809197/1547073341776/Networking+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/1cfc2507-c1d3-455b-92ac-d274e5befd36/809197/1547073334892/Networking+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 809075,
          "key": "b7764d1e-8045-4d49-ace1-6a9e77bb2d42",
          "title": "Interview",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b7764d1e-8045-4d49-ace1-6a9e77bb2d42",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809074,
              "key": "e85d5662-868b-4d46-9970-e0563914754a",
              "title": "Interview with Aanchal Gupta",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "d_hLToIvH74",
                "china_cdn_id": "d_hLToIvH74.mp4"
              }
            }
          ]
        },
        {
          "id": 809079,
          "key": "6bacec28-9f8e-4a62-a0d4-78784c40fa61",
          "title": "Lesson Map & Learning Objectives",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6bacec28-9f8e-4a62-a0d4-78784c40fa61",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809076,
              "key": "3d88b56c-9df6-438c-835f-206a19ad96e9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Lesson Map & Learning Objectives\n\n## Lesson Map\n\nLet's get started learning about networking! Shown below is the lesson map. This graphic will show you the journey for this lesson and highlight the most important topics that you will be learning about as you go through the content. ",
              "instructor_notes": ""
            },
            {
              "id": 809077,
              "key": "55012414-ee51-41df-870d-cb5f1d4d4af0",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/October/5bd37410_c2l1-lessonmap-01/c2l1-lessonmap-01.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/55012414-ee51-41df-870d-cb5f1d4d4af0",
              "caption": "Lesson Map",
              "alt": "Lesson Map",
              "width": 4176,
              "height": 6088,
              "instructor_notes": null
            },
            {
              "id": 809078,
              "key": "f8d6ec94-15bc-4279-981f-fa9aa661b2ae",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Learning Objectives \n\nBy the end of this lesson you will be able to:\n\n- Explain how all components of a network function together to deliver packets from one device to another device, which could be on the other side of the world. \n- Determine whether an IP address is public or private.\n- Understand how the IPv4 address shortage is solved with NAT and IPv6.\n- Calculate the network address and subnet size given the address of one device on the network, and the subnet mask. \n- List the layers in the OSI Model\n- Describe how data moves down the layers in the OSI Model in a process called Encapsulation\n- Describe how data moves up the layers in the OSI Model in a process called Decapsulation\n- Diagram how data moves from the sending device and across a network to the target device\n- Recommend an appropriate switching architecture for a particular network size.\n- Use the Wireshark network analysis tool to extract address, FQDN, and DNS information from real network packet transmissions\n- Explain how the DNS server resolves an FQDN query to an IP address\n- Explain how load balancing works and the different ways of balancing the load of incoming network traffic",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 809081,
          "key": "1da57c73-200c-4d6e-b158-a3e7d1c1affd",
          "title": "Network Communication Model",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "1da57c73-200c-4d6e-b158-a3e7d1c1affd",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809080,
              "key": "02ab0340-517a-459d-8d99-1589c75d9097",
              "title": "What Is Networking",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "TAOe3l-UUOI",
                "china_cdn_id": "TAOe3l-UUOI.mp4"
              }
            }
          ]
        },
        {
          "id": 809089,
          "key": "2f29ee99-7da0-4a70-a485-bb5855ec4ffd",
          "title": "Addressing",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2f29ee99-7da0-4a70-a485-bb5855ec4ffd",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809082,
              "key": "8a92850e-2a5f-480f-8e8f-77c5e91245d5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Addressing",
              "instructor_notes": ""
            },
            {
              "id": 809083,
              "key": "57e855a0-b049-4b7a-a192-a657cd7549a4",
              "title": "IPv4 Addressing",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Y84oFJ7DbjM",
                "china_cdn_id": "Y84oFJ7DbjM.mp4"
              }
            },
            {
              "id": 809084,
              "key": "e4785895-ae12-480f-b8fd-193ca1651109",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Addressing Space\n\nHere's a visualization of the entire IPv4 address space. Each square represents one possible value of the *first octet* of an address. For instance, the square on the top right, labeled `15`, represents all the IPv4 addresses that start with `15` as their first octet (e.g. `15.72.9.277`).",
              "instructor_notes": ""
            },
            {
              "id": 809085,
              "key": "1bec7c26-a16a-4149-9f5b-d47418ad525f",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/January/5c34d36f_c2l1-8d-ipv4-address-space-visualization01-v3/c2l1-8d-ipv4-address-space-visualization01-v3.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1bec7c26-a16a-4149-9f5b-d47418ad525f",
              "caption": "Visualization of the IPv4 address space. Each square represents the first octet of an IPv4 network address.",
              "alt": "Visualization of the IPv4 address space.",
              "width": 4255,
              "height": 4080,
              "instructor_notes": null
            },
            {
              "id": 809086,
              "key": "874bc15c-85f6-488a-a619-831e7115c468",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "* The pink squares (`0`, `10`, and `127`) are blocks that are entirely reserved.  \n* The blue squares are blocks that are *partially* reserved. For instance, not all of the `192` block is reserved, but some of it is.  \n* The entire green row (starting at `224`) is set aside for [IP multicast](https://en.wikipedia.org/wiki/IP_multicast).  \n* And the entire orange bottom row (starting at `240`) was [originally set aside for \"future use\" but was effectively lost due to being blocked as invalid.](http://packetlife.net/blog/2010/oct/14/ipv4-exhaustion-what-about-class-e-addresses/)",
              "instructor_notes": ""
            },
            {
              "id": 809087,
              "key": "70cc7413-fdce-4634-b203-8e93d786cf81",
              "title": "Public IP Addresses?",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "70cc7413-fdce-4634-b203-8e93d786cf81",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following IP addresses are public?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "224.100.0.10",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "8.8.8.8",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "127.0.0.1",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "192.168.0.1",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 809088,
              "key": "397b8828-0d46-47ff-ba3f-1b59b1b022a5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "As you can see, there aren't enough IP addresses to go around - but we'll get into how we manage that a little bit later!\n\n## Additional Resources\n* [RFC 6890 - Special-Purpose IP Address Registries, April 2013](https://tools.ietf.org/html/rfc6890) \n* [RFC 1918 - Address Allocation for Private Internets, February 1996](https://tools.ietf.org/html/rfc1918)\n* Learn more about [Wikipedia - IPv4 Address Exhaustion](https://en.wikipedia.org/wiki/IPv4_address_exhaustion)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 809099,
          "key": "92eb8530-1ea8-445a-8392-1a2df6fbb824",
          "title": "Addressing and Networks",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "92eb8530-1ea8-445a-8392-1a2df6fbb824",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809090,
              "key": "b8376e04-201b-4e2a-9c57-c6fda8a72a6c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Addressing and Networks",
              "instructor_notes": ""
            },
            {
              "id": 809091,
              "key": "a77cc5d3-8f8b-4fb8-bbd5-607493eef8ad",
              "title": "Addressing And Networking 1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "oO_mJEet-uo",
                "china_cdn_id": "oO_mJEet-uo.mp4"
              }
            },
            {
              "id": 809092,
              "key": "9488c667-e589-4aad-a498-f17e1f2a699b",
              "title": "/22 Addresses Available?",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9488c667-e589-4aad-a498-f17e1f2a699b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How many individual addresses are there on a `/22` network (recall that several of them are reserved).",
                "matchers": [
                  {
                    "expression": "1,?021"
                  }
                ]
              }
            },
            {
              "id": 809093,
              "key": "fd59827c-183b-4a17-ad24-fb12eefce48e",
              "title": "Addressing And Networking 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "YxamxHBVJkQ",
                "china_cdn_id": "YxamxHBVJkQ.mp4"
              }
            },
            {
              "id": 809094,
              "key": "819eacb7-32d2-444a-b467-33d34ded7284",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Review of Binary Conversion and the AND operator\n\nIf you watched that video and wondered, \"How do I convert to binary?\" and \"What's an AND operation?\", don't worry because the following resources will explain the basics to you. \n\nIf you'd like to learn how to convert decimal to binary by hand, read [this tutorial on the subject](https://www.electronics-tutorials.ws/binary/bin_2.html). \n\nOnce you understand how the math works and have practiced a conversion or two, you'll probably want to use an online conversion tool for efficiency's sake. The following two tools were used to perform the conversions seen in the video,\n\n- [IP Address to Binary](https://www.browserling.com/tools/ip-to-bin)\n- [Binary to IP Address](https://www.browserling.com/tools/bin-to-ip)\n\nAdditionally, the process of determining the network address given an address of a host on the network and the subnet mask requires you to perform a logical AND operation. The AND operator compares two inputs to produce an output. In the case of the address and mask, it compared each bit position individually. \n\nThe following truth table summarizes which inputs produce what output.\n\n| **Input 1**  | **Input 2** | **Output**  |\n|:---:|:---:|:---:|\n| 0  | 0  | 0  |\n| 0  | 1  |  0 |\n|  1 |  0 | 0  |\n|  1 |  1 |  1 |\n\nYou read the table above from left to right. In the first row, Input 1 is `0`, Input 2 is also a `0`. If you do a logical AND of `0` and `0`, you'll get another `0`. The second and third rows are both doing a logical and of a zero and a one (albeit, in different orders) and both result in `0`. The last row is the interesting one; a logical AND of `1` and `1` equals `1`! So the logical AND is actually very simple - the output is only `1` when _both_ inputs have values of `1`.\n\nHappy Converting! \n\n## Quizzes",
              "instructor_notes": ""
            },
            {
              "id": 809095,
              "key": "1a26a891-f42e-433b-88ac-f0b36366d0b4",
              "title": "Same Subnet? 1",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "1a26a891-f42e-433b-88ac-f0b36366d0b4",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following IP addresses are on the same subnet as 122.48.253.2/18?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "122.48.200.200",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "122.49.1.102",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "122.47.255.219",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "122.48.162.3",
                    "is_correct": false
                  },
                  {
                    "id": "rbk5",
                    "text": "122.48.193.61",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 809096,
              "key": "f3a5fa01-d420-4ea8-8e66-2e8998773c05",
              "title": "Same Subnet? 2",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f3a5fa01-d420-4ea8-8e66-2e8998773c05",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Write an IP address that is in same subnet as 172.254.3.17/8.",
                "matchers": [
                  {
                    "expression": "^172\\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))\\.([0-9]|[1-9][0-9]|1([0-9][0-9])|2([0-4][0-9]|5[0-5]))$"
                  }
                ]
              }
            },
            {
              "id": 809097,
              "key": "9e8a9988-805c-4a14-acd4-f7040e89289e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Reserved Addresses on a Netblock\n\nIf you recall, the number of addresses that are available for use in a netblock were reduced by three, because those three addresses are reserved for something. Well, what are they? \n\n- The first address (`.0`) is used for identification of the network,\n- the follow address (`.1`) is often assigned to the router,\n- the last address (`.255`) is called the broadcast address. Anything sent to the broadcast address will be sent out to all devices on the network.",
              "instructor_notes": ""
            },
            {
              "id": 809098,
              "key": "94f2ee69-6594-4201-8fa5-3955b7847e21",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Additional Resources\n\nSome basic reading on subnetworks and Classless Inter-Domain Routing (CIDR):\n\n- [Subnetworks](https://en.wikipedia.org/wiki/Subnetwork),\n- A good read on [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) with a helpful table on all IPv4 CIDR blocks.\n\nAnd several technical reports on the following subjects:\n\n- [RFC IPv4](https://tools.ietf.org/html/rfc1878),\n- [RFC IPv6](https://tools.ietf.org/html/rfc5942),\n- [RFC CIDR](https://www.rfc-editor.org/rfc/rfc1519.txt).",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 809118,
          "key": "a6123669-f5bf-4737-962a-1e4c17bb8f8a",
          "title": "OSI Model",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a6123669-f5bf-4737-962a-1e4c17bb8f8a",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809100,
              "key": "55589c4a-6f82-450f-8435-905581d00390",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# OSI Model",
              "instructor_notes": ""
            },
            {
              "id": 809101,
              "key": "d340ac4c-c648-4d3f-990d-a0a71a085dc3",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/January/5c353b5f_c2l1-communicating-over-a-network-image/c2l1-communicating-over-a-network-image.jpg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d340ac4c-c648-4d3f-990d-a0a71a085dc3",
              "caption": "Two different parties trying to communicate across a \"network\".",
              "alt": "Two people holding a tin can phone.",
              "width": 1920,
              "height": 1080,
              "instructor_notes": null
            },
            {
              "id": 809102,
              "key": "8c3c7a65-7905-4d5e-83f8-95e445e771a0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In the image above, Richard and Julia are trying to communicate over a tin can phone. Earlier, you learned that there are three main components in a network: the medium, the addressing, and the content. In this tin can phone example, the _medium_ is the cord connecting the phones together. We're already directly connected to each other so we don't have to worry about the _addressing_, and the _content_ is what we're trying to tell each other.\n\nLet's take a moment to think about _how_ we communicate the content to each other. For example, how does Richard know when Julia is finished talking so that he can reply? It would make communication a lot easier if they both agreed on a set of procedures to do each time they start and stop talking. For example, before sending her main message, Julia could begin the communication channel by saying \"Message is starting\". Then, so that Richard knows she's finished communicating her message, Julia, when finished sending the content of her message, could follow up with \"Message is finished\".\n\nThis is a simple example, but the important thing here is that these set of procedures are **protocols**, and they can be used to help standardize communication across a network. In this example of the tin can phone, it's two people using soup cans to send a message across a cord. But what if you swap out the people with two computers and swap the cord out with a network cable? There are still two different parties that are trying to send a message across a network. How should the two computers communicate effectively and efficiently? What sort of protocols should they use to make sure their messages are sent and received correctly? There can be many, many more devices than just these two computers. In this internet-connected world, virtually _anything_ can be a network device!\n\nSo with the flourishing ecosystem of vendors (e.g. different manufacturers, different devices, etc.), we need to ensure the interoperability of both devices and the medium across which these devices communicate so that network communication can function effectively.\n\nHow can we ensure that any device can send any kind of message across any kind of medium to some other device? Well, we need a standard that all parties can agree upon so that communication across a network can occur. In fact, as you might expect, we'd need a _lot_ of standards for this to occur. There are standards for cables, their connectors, how data is packaged, how one device knows when to send to another device, how data is converted to electrical signals, how messages are broken up into chunks, how two devices are able to send an error-free message, and so on. There are _many_ standards for all of the different parts of network communication.\n\nAnd this brings us to the **OSI model**! OSI stands for:\n\n> Open Systems Interconnection\n\nThe OSI model is a breakdown of the various aspects of network communication. It is concerned with the ability of different systems to be connected with each other. It's a conceptual breakdown of all the parts that are involved and groups them into logical sections. Let's check them out.",
              "instructor_notes": ""
            },
            {
              "id": 809103,
              "key": "1e8a3ce2-8b5d-4898-a1bc-91e33eefffbf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Layers in the OSI Model\n\nWe're going to look at all of the layers in the OSI model. But before we do that, I just want to point out again that this is a conceptual _model_ for a network system to handle communication; it's not a concrete example of how network communication happens. The OSI layers will be listed here for you to look them over, and then there will be a video to walk through them in more detail. You don't need to memorize this information. Instead, you should focus on absorbing how the layers are arranged. Later, you'll  study these layers in more detail. \n\nThere are 7 layers in the OSI model. We'll start at the top-most layer, layer 7, and work our way down to layer 1.\n\nLayer 7 - Application\n\nLayer 6 - Presentation\n\nLayer 5 - Session\n\nLayer 4 - Transport\n\nLayer 3 - Network\n\nLayer 2 - Data Link\n\nLayer 1 - Physical\n\nRemember that the OSI model is a _conceptual_ model of how network communication occurs. For network communication to happen, the layers must work together to transmit a message from one device to another.",
              "instructor_notes": ""
            },
            {
              "id": 809104,
              "key": "c012890f-5763-47fc-a0d4-2a5c2c9e5e8f",
              "title": "OSI Model Walkthrough",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "MKDhdo2hDWE",
                "china_cdn_id": "MKDhdo2hDWE.mp4"
              }
            },
            {
              "id": 809105,
              "key": "98eda3ae-7592-43c2-a0f8-94b30510cb60",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Standards & Protocols",
              "instructor_notes": ""
            },
            {
              "id": 809106,
              "key": "f2167205-e483-4b5a-9ef7-3f402100c72c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/October/5bd3a569_osi-model-v3/osi-model-v3.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/f2167205-e483-4b5a-9ef7-3f402100c72c",
              "caption": "The seven layers of the OSI Model.",
              "alt": "OSI Model",
              "width": 8001,
              "height": 16348,
              "instructor_notes": null
            },
            {
              "id": 809107,
              "key": "c7e0ccfc-9e5f-4c3d-b825-b0b43a90644b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "As we've been talking about, the OSI model is a conceptual model and helps describe data in many ways. It provides a standard for how network communication occurs, how data is transferred, and provides a way to group similar protocols together.\n\nFor example, network devices can be grouped at several different layers in the OSI model. Layer 1 of the OSI model deals with the physical and electrical specification for devices. Items such as physical cables, wireless signless, the network identification card (NIC) inside a computer are all grouped at the Layer 1 level. But even though Layer 1 is called the _physical_ layer, that doesn't mean that _every_ physical device shows up there. For example, a switch is a Layer 2 device and a router is a Layer 3 device.\n\nThe OSI Model also helps group network protocols together. Here are some of the most common protocols at each layer:\n\n* Layer 7 = HTTP\n* Layer 6 = SSL and TLS\n* Layer 5 = socket\n* Layer 4 = TCP and UDP\n* Layer 3 = IP and ICMP\n* Layer 2 = ARP\n* Layer 1 = 1000BASE-T, DSL, DOCSIS, 802.11a/b/g/n \n\nThe information that goes along with the OSI Model is vast and deep, and we're not going to go into more detail on the standards and protocols than we have right here. I just want you to be aware of another aspect of the OSI model and to see from another perspective how it is a conceptual model to help group information.",
              "instructor_notes": ""
            },
            {
              "id": 809108,
              "key": "2556cdff-d790-4eb3-a4fb-0ec9c924a738",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Sibling Dependence\n\nIn the OSI model, a layer is only concerned with the layers above and below it. For example, layer 3 (the Network layer) is only concerned with the two layers that are on either side of it:\n\n* Layer 4 - the Transport layer\n* Layer 2 - the Data Link layer\n\nLayer 3 will receive data from Layer 4 and send it to Layer 2 or it will receive data from Layer 2 and send it to Layer 4.\n\nLayer 7 (the Application layer) is at the very top of the OSI model. Since it is at the top, it is only concerned with sending data to Layer 6 (the Presentation layer) or receiving data from Layer 6.\n\nA single layer does not need to know the _whole_ path that data takes through the OSI model. It just need to know about the layers above and below it that it needs to interact with. Now, why is this important? Each layer in the OSI model is an [abstraction layer](https://en.wikipedia.org/wiki/Abstraction_layer). An abstraction layer is:\n\n> a way of hiding the working details of a subsystem\n\nFor example, the way that the data is formatted, processed, and changed in Layer 2 does _not_ matter to Layer 4, because Layer 3 abstracts those implementation details away. All Layer 4 has to worry about is how it needs to receive data from Layer 3 - it doesn't have to worry about the specifics of Layer 2 (since that's Layer 3's job).\n\nEarlier, I said:\r\n> Layer 3 will receive data from Layer 4 and send it to Layer 2 or it will receive data from Layer 2 and send it to Layer 4.\n\nWhen does data move down the layers from Layer 4 to Layer 3 to Layer 2 and when does the data move up the layers from Layer 2 to Layer 3 to Layer 4? These two processes are called **encapsulation** and **decapsulation**. Let's take a look at them in more detail.",
              "instructor_notes": ""
            },
            {
              "id": 809109,
              "key": "d8e42fb9-9872-48fb-9c0b-20748271ce29",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Encapsulation and Decapsulation\n\nRemember that the OSI model is a _conceptual_ model of how data is packaged and sent across a network to another device. In this scenario, let's assume that there are only two devices that are trying to communicate with each other. The OSI model is used on _both_ devices.\n\nAs the data is being _packaged_ up on a _sending_ device, the data moves _down_ the OSI model; this process of the data moving down the OSI model is called **encapsulation**.\n\nWhen the data is being _unpacked_ on a _receiving_ device, the data moves _up_ OSI model; this process of the data moving up the OSI model is called **decapsulation**.\n\nLet's see each of these in more detail. First, we'll start with encapsulation.",
              "instructor_notes": ""
            },
            {
              "id": 809110,
              "key": "ef276a31-e6dd-4437-9d38-14a4fd3cc23b",
              "title": "Encapsulation",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "ak2ioSGU01g",
                "china_cdn_id": "ak2ioSGU01g.mp4"
              }
            },
            {
              "id": 809111,
              "key": "d613ad5f-6a21-497d-8eb8-af2cb4196980",
              "title": "Decapsulation",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "rHwtPAAhT4s",
                "china_cdn_id": "rHwtPAAhT4s.mp4"
              }
            },
            {
              "id": 809112,
              "key": "b12f1c4f-ad83-478f-a367-31d54f9e79cf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "To recap, when data travels _down_ the OSI model, the data from a higher layer becomes the \"payload\" for a lower layer. When the data moves from a higher layer to a lower layer, the data is wrapped in new information called a \"header\" and a \"footer\". This is where it gets the name \"encapsulation\"; because the data is _wrapped_ (or encapsulated) with new header/footer layers.\n\nConversely, the opposite happens when traveling up the OSI model. As the data moves up the OSI model, these header/footer layers are removed. This is where it gets the name \"decapsulation\".",
              "instructor_notes": ""
            },
            {
              "id": 809113,
              "key": "c24fa6ad-08fd-4b30-98c0-00c96d2e20a5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Network Transmission\n\nHopefully you're seeing how the OSI model can helps us to understand how network communication happens across a network. You saw how encapsulation works on the sending device. Then you saw how decapsulation works on the destination device. We looked at both of these in isolation so that we could zoom in on exactly what's going on with encapsulation and decapsulation. But now, let's zoom back out a bit and see how data moves from one device to another in a network.\n\nWe're going to look at one device sending data from one network to another device in a different network. We'll be using all of the information that we've covered up to this point, so this video might be a bit complicated. You might need to rewatch the video once or twice to let these concepts sink in.",
              "instructor_notes": ""
            },
            {
              "id": 809114,
              "key": "b3edf498-fbe0-408b-9e1a-8b31071571a6",
              "title": "Network Transmission Walkthrough",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "hl2xa7Ahy0E",
                "china_cdn_id": "hl2xa7Ahy0E.mp4"
              }
            },
            {
              "id": 809115,
              "key": "5a3ed035-7ed8-4c92-baa7-4b63c9fc7faf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "To recap, as data moves across a network, each devices looks at specific header information to determine if the data belongs to itself or if it should forward the data on to another device. One thing to note here is that this process of moving up and down the OSI model (the process of encapsulation and decapsulation) happens over and over as the data moves from one device to another. To clarify, though, the information doesn't move all the way up through all of the OSI layers at each device, it only does that at the final (target) device. ",
              "instructor_notes": ""
            },
            {
              "id": 809116,
              "key": "6a3c21ff-3178-406a-9abc-6a9e4f85c5af",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Summary\n\nIn this section we looked at the layers of the OSI model, how data moves down the OSI model on a device, how it moves across a network, and how data moves _up_ the OSI model on the target device.\n\nThe OSI Model layers are:\n\n* Layer 7 - Application\n* Layer 6 - Presentation\n* Layer 5 - Session\n* Layer 4 - Transport\n* Layer 3 - Network\n* Layer 2 - Data Link\n* Layer 1 - Physical\n\nThe process of data moving down the layers is called encapsulation. The process of data moving up the layers is called decapsulation.",
              "instructor_notes": ""
            },
            {
              "id": 809117,
              "key": "ad312b89-3551-4992-bb1f-16bfbcd16a5b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Further Research\n\n* [OSI model](https://en.wikipedia.org/wiki/OSI_model)\n* [The OSI Model Demystified](https://www.youtube.com/watch?v=HEEnLZV2wGI)\n* [The 7 Layers of the OSI Model](https://www.webopedia.com/quick_ref/OSI_Layers.asp)\n* [Packet Switching](https://en.wikipedia.org/wiki/Packet_switching)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 809122,
          "key": "7ca8c465-aa2a-46dc-949d-f29af887cc9b",
          "title": "Switching",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7ca8c465-aa2a-46dc-949d-f29af887cc9b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809119,
              "key": "57533893-4c4a-460e-8a0e-92f265dd68a5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Switching",
              "instructor_notes": ""
            },
            {
              "id": 809120,
              "key": "8728a4c0-e8d3-44ab-b4a2-4ee014581f64",
              "title": "Switching",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "xZRur0Qk8L8",
                "china_cdn_id": "xZRur0Qk8L8.mp4"
              }
            },
            {
              "id": 809121,
              "key": "81ad5664-8c82-497b-b7dd-b373335f816b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Further Research\n\n- [Network Switches](https://en.wikipedia.org/wiki/Network_switch)\n- [Spanning Tree Protocol](https://en.wikipedia.org/wiki/Spanning_Tree_Protocol)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 809126,
          "key": "091e44dc-31b7-4f23-bf2f-21a6bd78748a",
          "title": "Frame Structure",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "091e44dc-31b7-4f23-bf2f-21a6bd78748a",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809123,
              "key": "fca40068-e4aa-4a4a-936e-0d39ca8b0717",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Frame Structure",
              "instructor_notes": ""
            },
            {
              "id": 809124,
              "key": "a212ce33-bcd2-41da-b708-3cc4754212d5",
              "title": "Ethernet Packets",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "0OzGSs6HghQ",
                "china_cdn_id": "0OzGSs6HghQ.mp4"
              }
            },
            {
              "id": 809125,
              "key": "1ad1e549-84f7-4a58-9520-53fccd05824e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Further Reading\n\n- [Wikipedia article on Ethernet frames](https://en.wikipedia.org/wiki/Ethernet_frame)\n- [A Networking Frame](https://en.wikipedia.org/wiki/Frame_(networking))",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 809129,
          "key": "705dedcd-9ffc-411b-9a13-dfb434bd53e2",
          "title": "Switching At Scale",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "705dedcd-9ffc-411b-9a13-dfb434bd53e2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809127,
              "key": "b5b71196-f8b2-422a-94d0-d7a8f896db2f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Switching At Scale",
              "instructor_notes": ""
            },
            {
              "id": 809128,
              "key": "8a7737d8-9dba-41ae-aa88-86a5af3834c4",
              "title": "Switching At Scale",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "V6iC5Q6nD2w",
                "china_cdn_id": "V6iC5Q6nD2w.mp4"
              }
            }
          ]
        },
        {
          "id": 809132,
          "key": "95e7c7d5-107e-4595-aed5-5f8d1e0bfd3c",
          "title": "Virtual LANs",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "95e7c7d5-107e-4595-aed5-5f8d1e0bfd3c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809130,
              "key": "107541cf-9ef5-4ee5-9099-78e61d7ab3bc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Virtual LANs",
              "instructor_notes": ""
            },
            {
              "id": 809131,
              "key": "dedb7391-d106-403d-a241-6783f8dd21ee",
              "title": "Virtual LANs",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "rWDnm-SSazo",
                "china_cdn_id": "rWDnm-SSazo.mp4"
              }
            }
          ]
        },
        {
          "id": 809143,
          "key": "964cda47-759d-4321-a6f6-9b5d992a56ef",
          "title": "Routing",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "964cda47-759d-4321-a6f6-9b5d992a56ef",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809133,
              "key": "acab45d0-ec5e-4007-a47b-2486276fa283",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Routing",
              "instructor_notes": ""
            },
            {
              "id": 809134,
              "key": "1e1b9684-35ad-4e42-8e79-53762ea6d9bb",
              "title": "Not Enough Addresses - Part 1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "IOwZiH2LaGE",
                "china_cdn_id": "IOwZiH2LaGE.mp4"
              }
            },
            {
              "id": 809135,
              "key": "f5984e2b-b197-4c4a-b7ee-ffac8780c4fe",
              "title": "Not Enough Addresses - Part 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "WK6QLjORF7Q",
                "china_cdn_id": "WK6QLjORF7Q.mp4"
              }
            },
            {
              "id": 809136,
              "key": "1efb37a5-d034-473e-8e56-2c7fe0250384",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Try It Yourself\n\n### Your Public IPv4 Address\n\nThe easiest way to find your public IP address is using the web. You can navigate to a website, such as [whatismyip.com](https://www.whatismyip.com/), or simply search, \"What is my IP address\" in a search engine such as Google to produce the result. ",
              "instructor_notes": ""
            },
            {
              "id": 809137,
              "key": "3cfb8eea-5b9d-4b77-aead-7c5eda70cfd5",
              "title": "This is the title of the Reflection",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3cfb8eea-5b9d-4b77-aead-7c5eda70cfd5",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "What is your public IPv4 address?"
              },
              "answer": {
                "text": "Thanks for your response.",
                "video": null
              }
            },
            {
              "id": 809138,
              "key": "10aa09b9-e651-464c-949f-52bf3c760b68",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Your Private IPv4 Address\n\nTo find your private IP address, you can use a terminal. Depending on which OS (Operating System) you are running, the command to determine your IP address will differ. On a Linux or Mac, type in `ifconfig`, whereas on a Windows computer, type in `ipconfig` to find your IP address. The result may look like so, \n\n```sh\nEthernet adapter Ethernet:\n\n   Connection-specific DNS Suffix  . :\n   Link-local IPv6 Address . . . . . : fe80::14a5:92a8:6620:114a%4\n   IPv4 Address. . . . . . . . . . . : 192.168.50.197\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Default Gateway . . . . . . . . . : 192.168.50.1\n```\n\nOften, running this command will return not one, but a number of network interfaces. Ethernet interfaces will be labelled `eth0`, `eth1`, etc., while Wi-Fi interfaces are often labelled `wlan0`, `wlan1`, on so on. A Mac may return an especially large number of network interfaces, as it uses a number of loopback interfaces (interfaces that the OS uses to communicate with itself). ",
              "instructor_notes": ""
            },
            {
              "id": 809139,
              "key": "7a180564-2c08-4bb2-bddc-5eee0ae2b73e",
              "title": "This is the title of the Reflection",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7a180564-2c08-4bb2-bddc-5eee0ae2b73e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "What's your private IPv4 address?"
              },
              "answer": {
                "text": "Thanks for your response.",
                "video": null
              }
            },
            {
              "id": 809140,
              "key": "2663b341-7ff8-4b4c-ba10-aa492020ebff",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Private IP addresses often reside on `10.0.0.0/8`, `172.16.0.0/12`, and `192.168.0.0/16`, with the most common of all being, `192.168.0.0/24` (with a default gateway of `192.168.0.1`).\n\n### IPv6\n\nNote that not all Internet Service Providers (ISPs) support IPv6. To see if you have IPv6 enabled, visit the [IPv6 test site](http://test-ipv6.com/).",
              "instructor_notes": ""
            },
            {
              "id": 809141,
              "key": "86ca9f3d-ee47-4d5c-bc7e-f07b1dd50934",
              "title": "This is the title of the Reflection",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "86ca9f3d-ee47-4d5c-bc7e-f07b1dd50934",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "Do you have IPv6 enabled?"
              },
              "answer": {
                "text": "If you do - that's great, your ISP is on top of things! If you don't - not to worry, you're likely to have it soon.",
                "video": null
              }
            },
            {
              "id": 809142,
              "key": "83aec63b-c532-4494-b7b1-798c3870d05f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Further Reading\n\n  - [TCP/IP and Subnet Masking](https://www.youtube.com/watch?v=EkNq4TrHP_U)\n  - [Wikipedia article on NAT](https://en.wikipedia.org/wiki/Network_address_translation)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 809149,
          "key": "7032b096-65d2-43fe-9ec1-6747d4d676e8",
          "title": "Wireshark",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7032b096-65d2-43fe-9ec1-6747d4d676e8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809144,
              "key": "736a48d4-ad84-416d-a41a-3b1d6e996769",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Wireshark",
              "instructor_notes": ""
            },
            {
              "id": 809145,
              "key": "8eab7342-270e-499a-9411-19f155b1d7db",
              "title": "Wireshark",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "7amCyeLNq2A",
                "china_cdn_id": "7amCyeLNq2A.mp4"
              }
            },
            {
              "id": 809146,
              "key": "8f722a03-7302-4d03-a02a-43608ec7df71",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Following are a few useful links related to Wireshark:\n\n- [Wireshark User Guide](https://www.wireshark.org/docs/wsug_html_chunked/)\n- [Wireshark Wiki](https://en.wikipedia.org/wiki/Wireshark)\n- [Wireshark link for download](https://www.wireshark.org/download.html) (available for Windows and macOS)",
              "instructor_notes": ""
            },
            {
              "id": 809147,
              "key": "cba5f66e-ac47-46b9-a510-eeabc41aaf3a",
              "title": "Wireshark Exercise #1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "QbFYsvir2d4",
                "china_cdn_id": "QbFYsvir2d4.mp4"
              }
            },
            {
              "id": 809148,
              "key": "517c22fb-81e8-44e3-a68b-d626c49e2397",
              "title": "Wireshark Exercise #2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "EdjzzwdDfXE",
                "china_cdn_id": "EdjzzwdDfXE.mp4"
              }
            }
          ]
        },
        {
          "id": 809157,
          "key": "98067522-b1e2-47e2-999e-767dfc81b2f5",
          "title": "Domain Name System",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "98067522-b1e2-47e2-999e-767dfc81b2f5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809150,
              "key": "6eb3d592-4174-4ade-b5f7-0f671b71f56c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Domain Name System (DNS)",
              "instructor_notes": ""
            },
            {
              "id": 809151,
              "key": "a153ad32-33ff-4c5a-b1ea-e5625e7d6bc5",
              "title": "Understanding DNS",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "3m24z5CKh7U",
                "china_cdn_id": "3m24z5CKh7U.mp4"
              }
            },
            {
              "id": 809152,
              "key": "60052377-4790-4955-b3c9-4ea67349e49b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Fully Qualified Domain Name (FQDN)\n\nA Fully Qualified Domain Name (FQDN) consists of three parts - the hostname, domain, and top-level domain (TLD). The format looks like so,\n\n[host name].[domain].[tld]\r\rFor the FQDN `www.udacity.com` - `www` is the hostname, `udacity` is the domain, and `com` is the top-level domain. \n\nOther examples of FQDNs include:\n\n* `www.wikipedia.org`\n* `www.baidu.com`\n* `maps.google.com`\n* `news.yandex.ru`",
              "instructor_notes": ""
            },
            {
              "id": 809153,
              "key": "60d9e547-f3fa-4d04-883d-8e9a30f90f17",
              "title": "FQDNs?",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "60d9e547-f3fa-4d04-883d-8e9a30f90f17",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which ones among the following can be acceptable forms of FQDNs?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "www.udacity.com",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "www.example.com",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "test.t123.udacity.com",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "en.wikipidea.org",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 809154,
              "key": "9d177ac9-5bab-4f5c-9fb9-2a1a23626afc",
              "title": "IP Address?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9d177ac9-5bab-4f5c-9fb9-2a1a23626afc",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Given an FQDN (Fully Qualified Domain Name), what could be the format of it’s IP address:",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "441",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "18.007",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "54.68.115.100",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "8080",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 809155,
              "key": "f188ef22-8620-485f-9e6c-3f97d6104972",
              "title": "DNS in which OSI Layer?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f188ef22-8620-485f-9e6c-3f97d6104972",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which layer does the DNS server belong to in the OSI model?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Application (Layer 7)",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Transport (Layer 4)",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Network (Layer 3)",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "Data Link (Layer 2)",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 809156,
              "key": "d6a31b93-011a-4b81-858d-7dab5ee1488e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Further Research\n\n- [FQDN](http://www.rfc-base.org/rfc-4703.html)\n- [Domain Name System IANA Considerations 2011](http://www.rfc-archive.org/getrfc.php?rfc=6195)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 809164,
          "key": "232a6ebb-f1dd-4795-81cc-9f76bb20a296",
          "title": "Types of DNS Records",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "232a6ebb-f1dd-4795-81cc-9f76bb20a296",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809158,
              "key": "4d8d3f03-9046-440b-8564-7c4ae270c8da",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Types of DNS Records",
              "instructor_notes": ""
            },
            {
              "id": 809159,
              "key": "adc7d9ae-255b-4ba7-ac50-2b46e1d359fe",
              "title": "DNS Records",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "nP26VKugAWU",
                "china_cdn_id": "nP26VKugAWU.mp4"
              }
            },
            {
              "id": 809160,
              "key": "b508eddd-eefa-495e-bc4a-95cc98aed1d0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Further Reading\n\n- [Nameservers for IPv4 and IPv6 Reverse Zones (2010)](http://www.rfc-archive.org/getrfc.php?rfc=5855)",
              "instructor_notes": ""
            },
            {
              "id": 809161,
              "key": "01c7b779-c64f-4451-9028-46ae74e32825",
              "title": "DNS Record Type? 1",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "01c7b779-c64f-4451-9028-46ae74e32825",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "When querying an FQDN with an IPv4 equivalent record name, what type of query is it?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "MX",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "A",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "CNAME",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "AAAA",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 809162,
              "key": "96e5e1e0-6df3-4449-b7ec-91d343d467f8",
              "title": "DNS Record Type? 2",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "96e5e1e0-6df3-4449-b7ec-91d343d467f8",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "When querying an FQDN with an IPv6 equivalent record name, what type of query is it?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "MX",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "A",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "CNAME",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "AAAA",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 809163,
              "key": "2b3247af-bbc7-4a40-ab16-f66e4dbcc3cf",
              "title": "DNS Server Functionality",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2b3247af-bbc7-4a40-ab16-f66e4dbcc3cf",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following functions can a DNS server perform?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Map 54.71.105.195 to www.udacity.com",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Find the FQDN for 5.5.5.5",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Neither",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "Both",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 809170,
          "key": "55ff4b0e-6ab1-4ab8-93fc-20f805132e33",
          "title": "DNS Hierarchy",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "55ff4b0e-6ab1-4ab8-93fc-20f805132e33",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809165,
              "key": "88c857c4-0c04-4237-a142-d9137e150e68",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# DNS Hierarchy",
              "instructor_notes": ""
            },
            {
              "id": 809166,
              "key": "e3923d97-b8bd-40a2-abe3-0fd40f04078f",
              "title": "More about DNS: Hierarchical Structure",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "X88Nz8Tuydc",
                "china_cdn_id": "X88Nz8Tuydc.mp4"
              }
            },
            {
              "id": 809167,
              "key": "c5abd22e-7fc1-440b-9634-1801ecf2e4a6",
              "title": "DNS System Structure?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c5abd22e-7fc1-440b-9634-1801ecf2e4a6",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following best describes the structure of a DNS system?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Circular",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Hierarchical",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "Flat",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "There is only one server",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 809168,
              "key": "7e744366-3c08-4504-b867-bfa9cf07ef2b",
              "title": "Wireshark Exercise #3",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Pn-CmJPmLdw",
                "china_cdn_id": "Pn-CmJPmLdw.mp4"
              }
            },
            {
              "id": 809169,
              "key": "42383515-0f5f-4218-9bce-9fcd69f05185",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Further Reading\n\n- [Wikipedia article on the Domain Name System](https://en.wikipedia.org/wiki/Domain_Name_System)\n- [Wikipedia article on DNS record types](https://en.wikipedia.org/wiki/List_of_DNS_record_types)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 809179,
          "key": "3173cb68-3aba-4395-91e2-7180b48f76a2",
          "title": "Load Balancing",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "3173cb68-3aba-4395-91e2-7180b48f76a2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809171,
              "key": "59b9c03c-7eb3-4f5b-8a9f-61ec045ffc14",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Load Balancing",
              "instructor_notes": ""
            },
            {
              "id": 809172,
              "key": "af43b836-348f-4d3c-8bf2-a50e6b23085c",
              "title": "What Is Load Balancing",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "OBjOoiaKkFU",
                "china_cdn_id": "OBjOoiaKkFU.mp4"
              }
            },
            {
              "id": 809173,
              "key": "3647cc03-8464-4c76-bb86-12a4fa22b9ef",
              "title": "Load Balancer Role?",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3647cc03-8464-4c76-bb86-12a4fa22b9ef",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What is the role of a Load Balancer?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Lookup IP addresses",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Manage incoming requests to a server",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "Manage outgoing requests on a server",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "Ensure high availability and reliability of servers",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 809174,
              "key": "2ca25be5-269b-4436-9430-24eebfc1293f",
              "title": "The Process Of Load Balancing",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "1bT_AI773vM",
                "china_cdn_id": "1bT_AI773vM.mp4"
              }
            },
            {
              "id": 809175,
              "key": "54e621d2-a638-4cee-b657-dc6e9a61c8ff",
              "title": "Load Balancing Benefit - Availability",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "comayuPiBWA",
                "china_cdn_id": "comayuPiBWA.mp4"
              }
            },
            {
              "id": 809176,
              "key": "8bf447ab-8dd7-4321-a09a-09ad73871d0e",
              "title": "Ensuring Availability?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8bf447ab-8dd7-4321-a09a-09ad73871d0e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How does a load balancer ensure availability?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "By stopping clients from making requests.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Ensuring that all servers in the pool are up and running.",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "It does not ensure availability.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 809177,
              "key": "acba8b89-2be8-4b38-83cc-fc43dd0f6a65",
              "title": "Load Balancing Benefit - Scalability",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "lHuVOA2TMkI",
                "china_cdn_id": "lHuVOA2TMkI.mp4"
              }
            },
            {
              "id": 809178,
              "key": "5851d2c8-3e80-40b3-974a-3349a27e7611",
              "title": "Scalability?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5851d2c8-3e80-40b3-974a-3349a27e7611",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How does a load balancer ensure scalability?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "It informs the system administrator that the system needs new resources.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "It does not ensure scalability.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "When new resources like servers are added to the pool, the load balancer becomes aware of these and starts managing traffic accordingly.",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 809192,
          "key": "839e999f-ff2c-4516-acdd-793a9244a0e0",
          "title": "Load Balancing Approaches",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "839e999f-ff2c-4516-acdd-793a9244a0e0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809180,
              "key": "1dc05015-9c2a-40de-bf85-bd22421ff570",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Load Balancing Approaches",
              "instructor_notes": ""
            },
            {
              "id": 809181,
              "key": "cc561967-975e-4cef-8345-5edf2c9c159d",
              "title": "Kinds Of Load Balancing",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "qghI9t8dql0",
                "china_cdn_id": "qghI9t8dql0.mp4"
              }
            },
            {
              "id": 809182,
              "key": "33c43c69-3f16-4ab2-b32a-cb73054529b3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Load Balancing Approaches - Summary\n\nDifferent load balancing approaches provide different benefits. These different approaches are explained below. This is, however, not an exhaustive list, just a list of some of the most common approaches.\n\n- Round Robin - Requests are distributed across the group of servers sequentially.\n\n- BGP Anycast - BGP Anycast allows multiple servers to advertise the same IP address. DNS servers respond to queries with the same IP address. The routing infrastructure of the internet, using BGP, then routes internet traffic to different web servers over the shortest route possible.\n\n- Policy-based DNS load balancing - Uses policies to load balance traffic requests. For example, the IP address of the client’s resolver may be used to determine which server receives the request.\n\n- Dedicated Load Balancing - Enables you to deploy and configure one or more custom load-balancers within a VPC.",
              "instructor_notes": ""
            },
            {
              "id": 809183,
              "key": "1936ad38-267b-49f4-ba64-3ec7fd75aa41",
              "title": "Round Robin",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "4iILKzbYrDA",
                "china_cdn_id": "4iILKzbYrDA.mp4"
              }
            },
            {
              "id": 809184,
              "key": "6b067c3c-c0b8-47f9-a8ec-e02878acd514",
              "title": "Round Robin work for Load Balancers",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6b067c3c-c0b8-47f9-a8ec-e02878acd514",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How does Round Robin work for Load Balancers?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "requests are distributed across the group of servers sequentially.",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "load balancer chooses a server randomly.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "sits in line between the client and the server",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 809185,
              "key": "6e10e375-d936-4eed-9089-a470001762ee",
              "title": "BGP Anycast",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "r2PllbbjdVo",
                "china_cdn_id": "r2PllbbjdVo.mp4"
              }
            },
            {
              "id": 809186,
              "key": "f314d92b-0930-47a6-990a-f90bbbb46f60",
              "title": "BGP Anycast approach for Load Balancing work",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f314d92b-0930-47a6-990a-f90bbbb46f60",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How does the BGP Anycast approach for Load Balancing work?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Requests are distributed across the group of servers sequentially.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "The load balancer chooses a server randomly.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "The domain is resolved based on DNS nameserver that is topographically the closest.",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 809187,
              "key": "76162439-5330-4e8a-927d-7b6477368d4b",
              "title": "Policy-Based DNS",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "UuqQltSFLe0",
                "china_cdn_id": "UuqQltSFLe0.mp4"
              }
            },
            {
              "id": 809188,
              "key": "4953d971-47f2-447d-b795-9259e567c36e",
              "title": "Policy-based DNS for Load Balancing work",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4953d971-47f2-447d-b795-9259e567c36e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How does policy-based DNS for Load Balancing work?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Requests are resolved by a DNS nameserver on the basis of policies defined.",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Requests are distributed across the group of servers sequentially.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "The load balancer chooses a server randomly.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 809189,
              "key": "deb751d9-008e-42e8-8556-5d53e8fe0ff1",
              "title": "Dedicated Load Balancing",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "IFaP8xkRCBc",
                "china_cdn_id": "IFaP8xkRCBc.mp4"
              }
            },
            {
              "id": 809190,
              "key": "4f688586-8f0e-42ee-90f2-4002175112c1",
              "title": "Dedicated load balancer approach?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4f688586-8f0e-42ee-90f2-4002175112c1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How does dedicated load balancer approach for load balancing work?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "It sits in-line between the client resolver and the nameserver.",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Requests are distributed across the group of servers sequentially.",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "The load balancer chooses a server randomly.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 809191,
              "key": "90b14709-c14b-42a6-a8c0-c6fb1e819164",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Further Reading\n\n* <a href=\"https://en.wikipedia.org/wiki/Load_balancing_(computing)\" target=\"_blank\">Load Balancing</a>",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 809196,
          "key": "b8c29222-eda9-4726-a5db-711e5433e09e",
          "title": "Outro",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b8c29222-eda9-4726-a5db-711e5433e09e",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 809193,
              "key": "959390b3-7ce9-4c24-920b-9f1b15058252",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Outro",
              "instructor_notes": ""
            },
            {
              "id": 809194,
              "key": "aa4a1647-d5ec-4334-82a3-39b5a18c6da8",
              "title": "What We Covered",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "w0x3Ui6D4Gk",
                "china_cdn_id": "w0x3Ui6D4Gk.mp4"
              }
            },
            {
              "id": 809195,
              "key": "b3a18d28-19ed-4d90-9050-95d6c0d6d954",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Up Next\r\rNow that you're done learning about networking, let's dive into operating systems - another critical component that should be reviewed to understand security well. ",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}