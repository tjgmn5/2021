WEBVTT
Kind: captions
Language: en

00:00:01.220 --> 00:00:07.200
A few years ago, my company started adopting the principles behind continuous delivery.

00:00:07.200 --> 00:00:11.550
We saw a remarkable change in just about every aspect of

00:00:11.550 --> 00:00:16.455
our development process and client satisfaction in just a matter of weeks.

00:00:16.455 --> 00:00:20.460
Before this shift, we did just okay as a company,

00:00:20.460 --> 00:00:23.220
we had no problem at all writing software.

00:00:23.220 --> 00:00:25.050
Our development team was,

00:00:25.050 --> 00:00:27.555
and still is, the best I've ever seen.

00:00:27.555 --> 00:00:30.370
We were eyeballs deep with Scrum and Agile.

00:00:30.370 --> 00:00:32.745
We felt like we were doing everything right.

00:00:32.745 --> 00:00:34.935
But even still, our clients were often

00:00:34.935 --> 00:00:39.385
unhappy and weren't renewing contracts or referring their friends.

00:00:39.385 --> 00:00:42.005
It turns out, we needed to make a change,

00:00:42.005 --> 00:00:44.380
but not in how we develop the software.

00:00:44.380 --> 00:00:48.410
The change needed to be in how we delivered the software.

00:00:48.410 --> 00:00:53.225
Even though we said we were an Agile company and we said all the Agile things,

00:00:53.225 --> 00:00:55.200
had all the Agile t-shirts,

00:00:55.200 --> 00:00:57.185
and went to all the Agile conferences,

00:00:57.185 --> 00:01:01.885
have very little impact on our way of thinking about software delivery.

00:01:01.885 --> 00:01:06.890
We deployed artifacts, but it was not always valuable working software.

00:01:06.890 --> 00:01:08.705
We had sprints, but

00:01:08.705 --> 00:01:13.090
not many planning meetings were focused on getting value to the client sooner.

00:01:13.090 --> 00:01:16.415
Clients were unhappy because even though work was happening,

00:01:16.415 --> 00:01:18.745
they never felt forward motion.

00:01:18.745 --> 00:01:22.120
They needed a team that could deliver value.

00:01:22.120 --> 00:01:26.915
You see, continuous delivery pushes you to deliver valuable working software,

00:01:26.915 --> 00:01:29.390
more frequently, pure, and simple.

00:01:29.390 --> 00:01:31.325
By deliver, I mean,

00:01:31.325 --> 00:01:35.405
put it in somebody's hands to start using and generating value.

00:01:35.405 --> 00:01:40.445
That's what we needed to tie together all of our impressive development practices.

00:01:40.445 --> 00:01:42.020
We tweaked our process,

00:01:42.020 --> 00:01:43.310
sometimes in big ways,

00:01:43.310 --> 00:01:45.710
other times in small ways until we got to

00:01:45.710 --> 00:01:48.665
the point where we were delivering working features,

00:01:48.665 --> 00:01:51.910
one by one every two days.

00:01:51.910 --> 00:01:54.710
The results have been phenomenal.

00:01:54.710 --> 00:01:56.135
In a matter of weeks,

00:01:56.135 --> 00:01:59.000
unhappy clients fell back in love with us.

00:01:59.000 --> 00:02:02.270
New clients have consistently renewed contracts and

00:02:02.270 --> 00:02:05.990
referred their friends and we got an added bonus.

00:02:05.990 --> 00:02:10.460
It turns out, it's a lot more fun to deliver features and watch them delight

00:02:10.460 --> 00:02:16.560
real users than it is to batch up features for months waiting for some big release.

