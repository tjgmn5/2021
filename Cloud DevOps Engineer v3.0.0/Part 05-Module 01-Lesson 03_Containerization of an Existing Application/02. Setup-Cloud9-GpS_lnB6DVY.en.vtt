WEBVTT
Kind: captions
Language: en

00:00:00.320 --> 00:00:03.585
So let's get started at setting up

00:00:03.585 --> 00:00:08.825
a cloud-based continuous integration environment from zero.

00:00:08.825 --> 00:00:10.880
One of the things that we're going to do here is,

00:00:10.880 --> 00:00:13.565
we're going to create a new GitHub repo.

00:00:13.565 --> 00:00:18.420
That GitHub repo, we'll check it out into AWS Cloud9,

00:00:18.420 --> 00:00:20.460
which is a cloud-based development environment.

00:00:20.460 --> 00:00:23.670
Then we'll set it up so that it will run our code,

00:00:23.670 --> 00:00:26.970
and lint it, and test it every single time we make a change.

00:00:26.970 --> 00:00:29.460
So this is called continuous integration.

00:00:29.460 --> 00:00:33.090
Really, the flavor here is a new flavor in that

00:00:33.090 --> 00:00:36.645
it's a cloud-based continuous integration environment.

00:00:36.645 --> 00:00:38.710
So I'm going to go over to Cloud9.

00:00:38.710 --> 00:00:41.780
Cloud9 is something that is part of AWS,

00:00:41.780 --> 00:00:44.915
and you can use it using the free tier.

00:00:44.915 --> 00:00:47.585
I'm assuming that you have an AWS account.

00:00:47.585 --> 00:00:50.520
Go ahead and create an environment.

00:00:50.520 --> 00:00:53.460
So we'll go ahead and say hello.

00:00:53.460 --> 00:00:55.950
We'll call this the hello environment.

00:00:55.950 --> 00:00:59.065
Then I'll scroll over to the next step.

00:00:59.065 --> 00:01:02.450
From here, I would recommend leaving everything default.

00:01:02.450 --> 00:01:05.060
So create a new instance for the environment,

00:01:05.060 --> 00:01:06.740
leave it as a micro,

00:01:06.740 --> 00:01:09.850
the platform, leave it as Amazon Linux,

00:01:09.850 --> 00:01:12.810
and then we'll go ahead and go to this next step.

00:01:12.890 --> 00:01:17.750
From here, what will happen is it'll take approximately,

00:01:17.750 --> 00:01:19.745
let's say 30-60 seconds,

00:01:19.745 --> 00:01:23.870
and then this will enable a cloud-based development environment.

00:01:23.870 --> 00:01:29.180
What's really handy about this is that because this is hosted inside of AWS,

00:01:29.180 --> 00:01:32.030
you can get a faster network connection.

00:01:32.030 --> 00:01:34.790
You also don't have to worry about the security credentials.

00:01:34.790 --> 00:01:37.490
It's provisioned with the accounts credentials

00:01:37.490 --> 00:01:40.115
that you created the Cloud9 environment with.

00:01:40.115 --> 00:01:44.680
So it solves a lot of problems that typically come up with a development environment.

00:01:44.680 --> 00:01:49.130
Additionally, it auto-times out after the interval that you set.

00:01:49.130 --> 00:01:52.010
In this case, I let the default set to 30 minutes.

00:01:52.010 --> 00:01:54.680
It's really also very cost effective.

00:01:54.680 --> 00:01:58.775
So I would say for 100 percent of students that are using AWS,

00:01:58.775 --> 00:02:01.745
this would be one of the resources that you should use.

00:02:01.745 --> 00:02:04.355
It's incredibly powerful and solves

00:02:04.355 --> 00:02:08.270
many problems that are really tricky to solve unless you have advanced skills.

00:02:08.270 --> 00:02:11.660
So now that the Cloud9 environment is set up,

00:02:11.660 --> 00:02:15.780
there's a couple of things that I'll show you that are helpful.

00:02:15.780 --> 00:02:18.025
So first of all,

00:02:18.025 --> 00:02:21.560
I would typically just go through here and make sure

00:02:21.560 --> 00:02:25.280
that you understand that it's got Python3 installed.

00:02:25.280 --> 00:02:28.115
You also should be aware of things like,

00:02:28.115 --> 00:02:29.870
if you do ls -la,

00:02:29.870 --> 00:02:34.760
it'll show you not only the directories contents,

00:02:34.760 --> 00:02:37.670
but also the invisible files that'll come in handy in a second.

00:02:37.670 --> 00:02:40.660
Then also, it comes pre-installed with a lot of tools,

00:02:40.660 --> 00:02:42.425
like Docker is already installed,

00:02:42.425 --> 00:02:46.140
for example, Git is already installed.

00:02:46.140 --> 00:02:48.590
So basically, all the commands that you're going to need.

00:02:48.590 --> 00:02:52.340
So the first thing we should do is create a Git repo.

00:02:52.340 --> 00:02:56.025
So I'm going to go to GitHub and I'm going to say, "New",

00:02:56.025 --> 00:02:59.195
and we'll call this repo hello to match the name

00:02:59.195 --> 00:03:03.645
of our development environment; hello demo repo.

00:03:03.645 --> 00:03:06.830
I'm going to leave it as public because, for students,

00:03:06.830 --> 00:03:12.305
I would recommend a lot of your projects to be public so you can create a rich portfolio.

00:03:12.305 --> 00:03:15.620
Go ahead and initialize this repo with a README.

00:03:15.620 --> 00:03:17.345
This is actually very important,

00:03:17.345 --> 00:03:19.730
is for the gitignore,

00:03:19.730 --> 00:03:21.560
go ahead and select Python.

00:03:21.560 --> 00:03:22.925
What this is going to do is,

00:03:22.925 --> 00:03:24.530
it's going to make sure that there aren't

00:03:24.530 --> 00:03:26.885
garbage files that are checked into your project.

00:03:26.885 --> 00:03:29.200
That's really all you need to do.

00:03:29.240 --> 00:03:33.315
Now we'll go ahead and say "Create new repository".

00:03:33.315 --> 00:03:38.405
Now what I'm going to do is I'm going to click on this button here, "Clone or download."

00:03:38.405 --> 00:03:40.205
Let's go ahead and copy that.

00:03:40.205 --> 00:03:43.895
Next, I'm going to go back to my Cloud9 environment,

00:03:43.895 --> 00:03:46.110
and I'm going to attempt to check it out,

00:03:46.110 --> 00:03:47.325
and it won't work.

00:03:47.325 --> 00:03:52.730
The reason why, is that it's going to require me to set up an SSH key.

00:03:52.730 --> 00:03:55.980
So I'm going to say git clone.

00:03:57.950 --> 00:04:01.140
It will say, "Could not read from the remote repository."

00:04:01.140 --> 00:04:02.340
which is what I was expecting.

00:04:02.340 --> 00:04:06.350
So what I'm going to do is I'm going to create SSH keys locally here.

00:04:06.350 --> 00:04:14.310
So ssh-keygen -t rsa.

00:04:14.310 --> 00:04:16.710
I'll press return a few times.

00:04:16.710 --> 00:04:24.250
That will create a file here that I'll get access to by just running the cat command.

00:04:24.250 --> 00:04:26.075
So I'll highlight this,

00:04:26.075 --> 00:04:28.200
type in the command cat,

00:04:28.200 --> 00:04:33.160
like that, and then that'll paste out the contents of that key.

00:04:33.160 --> 00:04:36.175
So I'm going to go ahead and grab the contents.

00:04:36.175 --> 00:04:37.495
You notice I start here,

00:04:37.495 --> 00:04:39.250
at the beginning of ssh rsa,

00:04:39.250 --> 00:04:41.575
all the way down to where the IP address is.

00:04:41.575 --> 00:04:43.880
Now I'm going to go over to GitHub,

00:04:43.880 --> 00:04:45.870
and I'm going to go to my profile,

00:04:45.870 --> 00:04:49.140
and I'm going to select the "Settings."

00:04:49.140 --> 00:04:53.565
From here, I'll go to "SSH and GPG keys".

00:04:53.565 --> 00:04:56.385
I'll create New SSH key,

00:04:56.385 --> 00:04:57.945
and I'll paste that in there.

00:04:57.945 --> 00:05:01.920
We'll call this hello cloud9,

00:05:01.920 --> 00:05:03.125
so I know what it is.

00:05:03.125 --> 00:05:09.500
This is always a good idea to make sure that you are meticulous about your documentation.

00:05:09.980 --> 00:05:16.965
Next up here, what I'm going to do is I'm going to now attempt that clone again.

00:05:16.965 --> 00:05:19.890
This time, it'll work. I'm going to use the up arrow.

00:05:19.890 --> 00:05:23.060
This is a great way to reuse a command. I clone it.

00:05:23.060 --> 00:05:25.780
Awesome. Now I have the hello repo,

00:05:25.780 --> 00:05:27.190
and we're ready to go to the next step.

00:05:27.190 --> 00:05:31.210
So now that I've got access to that, typically,

00:05:31.210 --> 00:05:36.490
what I would do is start to build out the scaffolding for my project.

00:05:36.490 --> 00:05:41.530
So one of the first things that I typically do is I will cd into that directory.

00:05:41.530 --> 00:05:43.270
So let's go into the hello directory here.

00:05:43.270 --> 00:05:47.500
Then we can actually add some things inside of that README file.

00:05:47.500 --> 00:05:51.615
So let's go ahead and let's actually run an echo command.

00:05:51.615 --> 00:05:59.150
If you see this, this will basically append to this README file a line.

00:05:59.150 --> 00:06:01.055
If I double-click on it,

00:06:01.055 --> 00:06:05.195
you can see that inside of the hello directory, sorry,

00:06:05.195 --> 00:06:07.610
this directory, this hello directory,

00:06:07.610 --> 00:06:10.640
you can see that I put some stuff inside of there.

00:06:10.640 --> 00:06:17.340
Then from here, let's just go through the steps of what's required to check in the code.

00:06:17.340 --> 00:06:22.260
So I would say git add README.

00:06:22.260 --> 00:06:25.140
Next up, I would say git commit,

00:06:25.140 --> 00:06:30.280
and we'll say, add in name of the repo.

00:06:31.190 --> 00:06:34.160
Now, this is something that's going to come up here,

00:06:34.160 --> 00:06:37.430
is the first time you use a new repository,

00:06:37.430 --> 00:06:39.500
you're going to have to set these settings.

00:06:39.500 --> 00:06:41.225
So I'm going to go ahead and set these up.

00:06:41.225 --> 00:06:42.980
So I'm going to do git config,

00:06:42.980 --> 00:06:45.055
and I'll just change it out to my name.

00:06:45.055 --> 00:06:47.895
This will be Noah Gift.

00:06:47.895 --> 00:06:57.150
Then next here, what I'm going to do is I'm going to append my name here.

00:06:57.150 --> 00:07:03.180
So I'm going to go ahead and say, noah.gift@gmail.com. There we go.

00:07:03.180 --> 00:07:05.270
Then I will do the final step,

00:07:05.270 --> 00:07:07.880
which is amend the author.

00:07:07.880 --> 00:07:10.145
So this is a one time only thing.

00:07:10.145 --> 00:07:13.295
I'll go ahead and say write this out.

00:07:13.295 --> 00:07:17.585
So Control zero, and then I'll return,

00:07:17.585 --> 00:07:19.775
and then I'll do a Control X to exit.

00:07:19.775 --> 00:07:22.310
Great. So now that I've got that done,

00:07:22.310 --> 00:07:25.330
I'm basically set up now for a full round-trip,

00:07:25.330 --> 00:07:27.395
and I can read and write back to that repo.

00:07:27.395 --> 00:07:35.455
So let's go ahead and double-check that repo and make sure that we can see the changes.

00:07:35.455 --> 00:07:37.250
If I go to hello here,

00:07:37.250 --> 00:07:40.930
it should show up in the list of repos. There we go.

00:07:40.930 --> 00:07:43.500
You can see in fact that I did make that change,

00:07:43.500 --> 00:07:46.370
and you can see it was made just 33 seconds ago.

00:07:46.370 --> 00:07:48.440
Great. So we got the GitHub setup.

00:07:48.440 --> 00:07:50.450
So now let's go to the next step,

00:07:50.450 --> 00:07:55.140
which is typically, I would then go and create a Python virtual environment.

00:07:55.140 --> 00:08:02.980
So what I'm going to do is I'm going to type in, Python3 -m venv.

00:08:03.560 --> 00:08:08.210
At this point, what I typically do, as a convention,

00:08:08.210 --> 00:08:10.580
is I always create the virtual environment with

00:08:10.580 --> 00:08:14.465
a.file here so that it's invisible and it's not showing,

00:08:14.465 --> 00:08:16.490
because if you work on a lot of projects,

00:08:16.490 --> 00:08:18.340
you'll have a lot of virtual environments.

00:08:18.340 --> 00:08:20.715
So I put a dot so it won't show up.

00:08:20.715 --> 00:08:24.110
Then I also name it the same thing as the name of the repo.

00:08:24.110 --> 00:08:25.280
That way, I don't get confused.

00:08:25.280 --> 00:08:27.470
It's like, which virtual environment do I use?

00:08:27.470 --> 00:08:30.620
If you use the name of the repo that you set up,

00:08:30.620 --> 00:08:33.200
then you know that you can always

00:08:33.200 --> 00:08:37.100
correlate the name of that virtual environment with your repo.

00:08:37.100 --> 00:08:39.125
Once you set that up,

00:08:39.125 --> 00:08:42.590
then the next step is to actually activate it.

00:08:42.590 --> 00:08:45.675
To activate environment, you say,

00:08:45.675 --> 00:08:55.525
source Tilda /.hello bin activate.

00:08:55.525 --> 00:08:59.800
Now, let's go ahead and verify that it works.

00:08:59.800 --> 00:09:01.820
So if I say, which Python 3?

00:09:01.820 --> 00:09:06.215
You'll see that it's going to refer to the Python that's in this virtual environment.

00:09:06.215 --> 00:09:08.690
You also can see this.hello here.

00:09:08.690 --> 00:09:11.660
So the real problem that virtual environment

00:09:11.660 --> 00:09:15.080
solves is that you don't have to worry about packages

00:09:15.080 --> 00:09:21.935
being installed in the main system's location and then having conflicts.

00:09:21.935 --> 00:09:25.310
It's really common to have a specific version of Python that

00:09:25.310 --> 00:09:30.380
one GitHub project needs and then have another specific package that another one needs.

00:09:30.380 --> 00:09:33.090
So this really eliminates all those problems for you.

00:09:33.090 --> 00:09:35.195
So now that we've got that,

00:09:35.195 --> 00:09:38.090
one of the things that I would typically do

00:09:38.090 --> 00:09:41.810
is make my life a little bit easier here by creating an alias so

00:09:41.810 --> 00:09:45.155
that all I have to do when I go into an environment

00:09:45.155 --> 00:09:50.410
is basically type a command in and it will cd into the GitHub repo,

00:09:50.410 --> 00:09:52.190
and also source the virtual environment.

00:09:52.190 --> 00:09:55.285
So I'm going to deactivate it first so you can see this.

00:09:55.285 --> 00:09:57.420
So now let's deactivate it.

00:09:57.420 --> 00:09:59.115
I'm going to type in pwd.

00:09:59.115 --> 00:10:02.300
This is the path where my source code lives.

00:10:02.300 --> 00:10:08.780
So this is a very important step in order to create this automated alias that I set up.

00:10:08.780 --> 00:10:17.750
So next, what I can do is I can use the VI editor to actually edit the bashrc file.

00:10:17.750 --> 00:10:19.220
So I'm going to go here, I'm going to say,

00:10:19.220 --> 00:10:27.530
vim Tilda /.bashrc" Then I can go to the bottom.

00:10:27.530 --> 00:10:31.205
I typically use Shift G and then go to the bottom.

00:10:31.205 --> 00:10:33.500
By the way, you can use any editor you want,

00:10:33.500 --> 00:10:36.935
like Emacs, or Nano, or something like that.

00:10:36.935 --> 00:10:38.930
Then I'm going to create an alias in here.

00:10:38.930 --> 00:10:43.330
So I'll put a comment that says alias,

00:10:43.330 --> 00:10:46.600
and then I'll paste in this command,

00:10:46.600 --> 00:10:53.080
and I'll say alias hello.

00:10:53.080 --> 00:10:56.050
Then I put in this sequence.

00:10:56.050 --> 00:11:01.300
So I say cd, and I put in the path where my source code is checked out,

00:11:01.300 --> 00:11:03.835
and then I do this and operation.

00:11:03.835 --> 00:11:06.760
Essentially, what this does is it says go on to

00:11:06.760 --> 00:11:10.285
the next step if the first step is successful.

00:11:10.285 --> 00:11:13.390
Then I do the activation.

00:11:13.390 --> 00:11:23.120
So I say source tilda slash dot hello bin activate.

00:11:23.820 --> 00:11:33.145
There we go. Now, I can close this out so I go escape and then I do colon wq, return.

00:11:33.145 --> 00:11:36.430
Then because I'm in this actual shell,

00:11:36.430 --> 00:11:39.805
I'll have to source it so that it knows that alias.

00:11:39.805 --> 00:11:41.620
Then the next time I open this up,

00:11:41.620 --> 00:11:45.220
it should remember this alias. There we go.

00:11:45.220 --> 00:11:47.425
If I source this,

00:11:47.425 --> 00:11:50.800
if I type in the word hello now,

00:11:50.800 --> 00:11:52.975
let's say, we'll go to the temp directory,

00:11:52.975 --> 00:11:54.865
and then I type in hello,

00:11:54.865 --> 00:11:58.000
or even you can actually type an alias,

00:11:58.000 --> 00:11:59.800
and it will show you all of

00:11:59.800 --> 00:12:03.505
the different aliases and you can see here is that alias that's set up.

00:12:03.505 --> 00:12:05.380
Now, if I type in hello,

00:12:05.380 --> 00:12:08.620
it automatically does what I want which is cd into

00:12:08.620 --> 00:12:12.760
the GitHub repo and automatically activate my virtual environment.

00:12:12.760 --> 00:12:17.590
This is a very handy pattern that you can use on any project.

00:12:17.590 --> 00:12:19.570
Now that we've got that set up,

00:12:19.570 --> 00:12:22.690
we're ready to go to the next step which is to

00:12:22.690 --> 00:12:26.515
create a very simple make file scaffolding.

00:12:26.515 --> 00:12:33.310
So what I typically will do here is I'll run the touch command and I'll type in Makefile,

00:12:33.310 --> 00:12:36.670
and then really, I will typically

00:12:36.670 --> 00:12:41.500
use a common scaffolding for any makefile that I set up.

00:12:41.500 --> 00:12:45.040
So let's go ahead and double-click on this Makefile here and we can edit it.

00:12:45.040 --> 00:12:49.075
Now, this is very important here is that makefiles like tabs.

00:12:49.075 --> 00:12:50.560
So I'm going to click on the

00:12:50.560 --> 00:12:59.620
"Spaces" and I'm going

00:12:59.620 --> 00:13:02.140
to go to tabs here,

00:13:02.140 --> 00:13:04.480
so let's see, "Convert to Tabs",

00:13:04.480 --> 00:13:06.325
and then now we've got tabs.

00:13:06.325 --> 00:13:09.700
Then what I'll do is I will paste this in which

00:13:09.700 --> 00:13:16.315
is some info that's in the setup file that I've shown for this project,

00:13:16.315 --> 00:13:21.760
and then I'll typically just use this scaffolding to set things up.

00:13:21.760 --> 00:13:24.950
So we'll say, install, that looks good.

00:13:25.860 --> 00:13:29.950
Then for test, it would look something like this.

00:13:29.950 --> 00:13:33.250
This will be really whatever your project is.

00:13:33.250 --> 00:13:39.730
So I'm going to comment this out for now because we don't have any testing set up yet,

00:13:39.730 --> 00:13:42.925
but you would change this out to be what your project's testing is.

00:13:42.925 --> 00:13:46.210
Then for lint, I'm going to create a hello script in here,

00:13:46.210 --> 00:13:49.525
so I'm going to just call this hello.py.

00:13:49.525 --> 00:13:51.670
That looks pretty good.

00:13:51.670 --> 00:13:55.510
Then the next thing that I'm going to do is I'm going to create

00:13:55.510 --> 00:13:59.860
a requirements file because this is how I typically do in installation.

00:13:59.860 --> 00:14:04.585
So I'll go ahead and say, touch requirements.txt,

00:14:04.585 --> 00:14:09.070
like this, and then inside of the requirements file,

00:14:09.070 --> 00:14:11.800
I can put in pylint, just like that.

00:14:11.800 --> 00:14:15.835
This is where you could also put in Pandas or scikit-learn or whatever you want.

00:14:15.835 --> 00:14:17.575
Now that I've set that up,

00:14:17.575 --> 00:14:20.380
I can use the power of the makefile.

00:14:20.380 --> 00:14:23.185
So what I could do is I can run make install.

00:14:23.185 --> 00:14:26.950
This is really handy because I can use this same technique

00:14:26.950 --> 00:14:32.545
later when I do a integration with CircleCI.

00:14:32.545 --> 00:14:35.110
So that's setup now.

00:14:35.110 --> 00:14:36.955
Pretty much, we're ready to go.

00:14:36.955 --> 00:14:42.100
The only other thing here is to create a really simple file so I can lint it.

00:14:42.100 --> 00:14:45.100
So I'll go ahead and say, touch hello.py,

00:14:45.100 --> 00:14:48.130
and this will be some source code,

00:14:48.130 --> 00:14:50.125
we'll just say def,

00:14:50.125 --> 00:14:56.620
my function here, and we'll say return one,

00:14:56.620 --> 00:14:59.005
and then I'll just call it.

00:14:59.005 --> 00:15:05.635
So this function is basically can do barely anything but I tested out,

00:15:05.635 --> 00:15:07.120
it looks like it works.

00:15:07.120 --> 00:15:11.170
Maybe I even will print it here.

00:15:11.170 --> 00:15:14.050
So now that I've got that set up,

00:15:14.050 --> 00:15:16.465
what I can do is I can run make lint,

00:15:16.465 --> 00:15:17.920
make sure that the lint works.

00:15:17.920 --> 00:15:19.855
Looks like the code is acceptable.

00:15:19.855 --> 00:15:23.245
If you wanted to check test out making a fail,

00:15:23.245 --> 00:15:25.600
do something like this, make some bad code in there,

00:15:25.600 --> 00:15:27.925
run the lint again and you can see that it fails.

00:15:27.925 --> 00:15:31.120
Great. Now that I've got that setup,

00:15:31.120 --> 00:15:34.930
really, we're ready to go for integrating CircleCI.

00:15:34.930 --> 00:15:40.119
So I'm going to push all this code first so I'm going to say, git status,

00:15:40.119 --> 00:15:45.235
I'm going to say git add star, git commit,

00:15:45.235 --> 00:15:52.730
adding initial setup, push this, git push.

00:15:52.920 --> 00:15:57.130
Really, I'm going to go over to CircleCI here and finish this off.

00:15:57.130 --> 00:16:02.005
So I'm going to go to CircleCI and I'm going to select "Go to app".

00:16:02.005 --> 00:16:03.835
Once I log in,

00:16:03.835 --> 00:16:05.830
I have to select the right organization,

00:16:05.830 --> 00:16:07.690
it's going to be my username.

00:16:07.690 --> 00:16:11.305
Then there's something on the left here that says add projects.

00:16:11.305 --> 00:16:14.935
So I'm going to click on "Add Project" right here,

00:16:14.935 --> 00:16:17.485
and you can see the hello repo right there.

00:16:17.485 --> 00:16:19.675
I'm going to say "Set Up Project".

00:16:19.675 --> 00:16:23.200
Then it's going to ask me some things so I'm going to say "Linux",

00:16:23.200 --> 00:16:25.435
and then also select "Python".

00:16:25.435 --> 00:16:27.715
Once we do that,

00:16:27.715 --> 00:16:30.700
I can copy this config.yml file.

00:16:30.700 --> 00:16:34.645
But notice, it says you have to create a folder called.circleci.

00:16:34.645 --> 00:16:37.300
So I'm going to go back to Cloud9 here,

00:16:37.300 --> 00:16:39.370
and I'm going to expose hidden file.

00:16:39.370 --> 00:16:40.570
So if you see this icon,

00:16:40.570 --> 00:16:41.695
this little gear icon,

00:16:41.695 --> 00:16:46.375
click on this, say, "Show Hidden Files".

00:16:46.375 --> 00:16:50.365
So we want to make sure that we could show hidden files.

00:16:50.365 --> 00:16:51.880
Now, what I'm going to do is,

00:16:51.880 --> 00:16:57.895
I'm going to make directory.circleci, like that.

00:16:57.895 --> 00:17:01.480
That's not spelled right, circleci.

00:17:01.480 --> 00:17:09.295
Then I'm going to touch.circleci/config.yml.

00:17:09.295 --> 00:17:12.190
Now that I've got that file setup,

00:17:12.190 --> 00:17:13.960
this is going to be pretty easy.

00:17:13.960 --> 00:17:19.390
I just go here to this sample file here,

00:17:19.390 --> 00:17:21.609
and I'm going to copy it to my clipboard,

00:17:21.609 --> 00:17:27.580
and then I'm going to go back to Cloud9 and just paste it in.

00:17:27.580 --> 00:17:30.025
That's not the right paste,

00:17:30.025 --> 00:17:32.455
let's make sure we get this paste in here.

00:17:32.455 --> 00:17:36.020
You can also just copy like this as well.

00:17:36.060 --> 00:17:41.050
We'll copy that and we'll paste this in here.

00:17:41.050 --> 00:17:45.595
So I'm going to clean this up a little bit and really,

00:17:45.595 --> 00:17:48.490
a couple things to point out here is that a lot of times,

00:17:48.490 --> 00:17:52.750
I like to just get rid of comments because they just add a lot of noise.

00:17:52.750 --> 00:17:58.600
This is their own Docker container that's running Python 3.6.1.

00:17:58.600 --> 00:18:01.630
You could change it to maybe a later version,

00:18:01.630 --> 00:18:04.135
I think CircleCI has some later versions of Python,

00:18:04.135 --> 00:18:08.905
this is just a sample directory here or file.

00:18:08.905 --> 00:18:11.650
You could also put your own Docker container

00:18:11.650 --> 00:18:15.100
as well if you want to do something advanced.

00:18:15.100 --> 00:18:19.660
This is good, we want to do the installation,

00:18:19.660 --> 00:18:22.900
but I'm going to actually use my code here which is make

00:18:22.900 --> 00:18:27.400
install which uses the Makefile command that I already set up,

00:18:27.400 --> 00:18:30.025
want to just test the exact way that I'm doing it.

00:18:30.025 --> 00:18:34.300
Then I'm also going to get rid of this stuff here,

00:18:34.300 --> 00:18:36.415
comments, to make it smaller,

00:18:36.415 --> 00:18:39.175
get rid of this test report for now.

00:18:39.175 --> 00:18:41.920
Initially, I just wanted to lint.

00:18:41.920 --> 00:18:43.660
So I'm going to say run lint.

00:18:43.660 --> 00:18:45.040
This is just a description,

00:18:45.040 --> 00:18:48.790
it doesn't do anything, it will show up as the name of the command.

00:18:48.790 --> 00:18:50.200
Then again from here,

00:18:50.200 --> 00:18:54.070
I use that make lint style that I did before,

00:18:54.070 --> 00:18:58.150
and then what's nice is the exact commands that

00:18:58.150 --> 00:19:01.675
are run locally also get run inside of CircleCI.

00:19:01.675 --> 00:19:03.325
So that looks like it works.

00:19:03.325 --> 00:19:05.560
Again, I'm going to say, git status.

00:19:05.560 --> 00:19:10.900
I'm going to do git add, so git add.circleci.

00:19:10.900 --> 00:19:15.520
Then from here, let's push this,

00:19:15.520 --> 00:19:21.475
adding circle. Push this.

00:19:21.475 --> 00:19:22.705
Once I push it,

00:19:22.705 --> 00:19:24.550
it takes literally a couple of seconds,

00:19:24.550 --> 00:19:26.965
I can go back to Cloud9,

00:19:26.965 --> 00:19:32.290
and then I can go to this project here,

00:19:32.290 --> 00:19:37.300
and hello, I could say "Set Up Project",

00:19:37.300 --> 00:19:40.825
and I can click on this "Start Building" command

00:19:40.825 --> 00:19:45.655
because I've got the CircleCI config integrated.

00:19:45.655 --> 00:19:47.590
Then you can see here in real-time,

00:19:47.590 --> 00:19:50.335
I can actually look and watch what it's doing.

00:19:50.335 --> 00:19:53.350
It's going to run exactly what I told it to do is it's going to

00:19:53.350 --> 00:19:56.425
do a make install which is going to install the packages,

00:19:56.425 --> 00:19:59.950
and then it's going to do a make lint which will lint the packages.

00:19:59.950 --> 00:20:01.660
So if I click on this here,

00:20:01.660 --> 00:20:03.565
you can see the commands, there we go.

00:20:03.565 --> 00:20:05.830
Look, it's doing the make install.

00:20:05.830 --> 00:20:08.110
Then after this is done,

00:20:08.110 --> 00:20:09.220
this will take just a second,

00:20:09.220 --> 00:20:10.285
it will do a make lint,

00:20:10.285 --> 00:20:12.955
there we go, and in fact, run lint.

00:20:12.955 --> 00:20:15.955
So this shows up as the name that I said there.

00:20:15.955 --> 00:20:18.070
Really, we're ready to go. So there's

00:20:18.070 --> 00:20:20.080
further things that we could do to make it a little bit

00:20:20.080 --> 00:20:24.295
fancier and one of them is to setup a GitHub badge.

00:20:24.295 --> 00:20:25.750
So let's see here,

00:20:25.750 --> 00:20:29.590
I'm going to go back to this icon here,

00:20:29.590 --> 00:20:33.100
I believe, and then go to "Status Badge".

00:20:33.100 --> 00:20:35.575
You can see here, here's the past badge,

00:20:35.575 --> 00:20:37.555
I'm going to copy this.

00:20:37.555 --> 00:20:41.620
Then I'm going to go to my Cloud9 environment,

00:20:41.620 --> 00:20:43.495
and go to the README file,

00:20:43.495 --> 00:20:45.325
and just paste this in.

00:20:45.325 --> 00:20:50.275
We'll replace this like that,

00:20:50.275 --> 00:20:53.540
and then I'm going to do a git status again,

00:20:54.120 --> 00:21:01.910
add the README, say adding status.

00:21:02.160 --> 00:21:05.410
If I push this,

00:21:05.410 --> 00:21:08.950
I can now go back to GitHub,

00:21:08.950 --> 00:21:10.225
and if I refresh this,

00:21:10.225 --> 00:21:14.425
a status badge will appear, there we go.

00:21:14.425 --> 00:21:16.120
Look, if I click on this,

00:21:16.120 --> 00:21:19.390
I can actually go and it'll show me the status of the bill.

00:21:19.390 --> 00:21:24.115
So that's it, that's the soup to nuts way to set up Cloud9,

00:21:24.115 --> 00:21:27.440
and you can extend this later on your own.

