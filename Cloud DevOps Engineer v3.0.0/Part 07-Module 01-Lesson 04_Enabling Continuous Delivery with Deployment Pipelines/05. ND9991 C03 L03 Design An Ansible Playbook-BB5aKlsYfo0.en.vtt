WEBVTT
Kind: captions
Language: en

00:00:01.130 --> 00:00:03.945
Now that we've seen Ansible in action,

00:00:03.945 --> 00:00:06.705
we can get into the code and design a playbook.

00:00:06.705 --> 00:00:08.250
A few moments ago,

00:00:08.250 --> 00:00:14.115
I used an Ansible playbook to set up Prometheus on a completely clean EC2 instance.

00:00:14.115 --> 00:00:16.560
I did it all with a single command,

00:00:16.560 --> 00:00:19.830
and it finished all the tasks in a few seconds.

00:00:19.830 --> 00:00:23.550
But what all goes into a playbook to make that possible?

00:00:23.550 --> 00:00:26.340
Let's take a look at Ansible's playbook structure.

00:00:26.340 --> 00:00:28.095
Here in my AWS console,

00:00:28.095 --> 00:00:32.595
I've got a new EC2 instance set up with my key pair.

00:00:32.595 --> 00:00:36.400
I have already downloaded the PEM file for that key pair.

00:00:36.400 --> 00:00:40.825
I've opened up port 9090 to the public on this instance,

00:00:40.825 --> 00:00:44.120
and I've got a host name generated by EC2.

00:00:44.120 --> 00:00:47.000
I've done nothing else at all to this server,

00:00:47.000 --> 00:00:48.515
it's a blank server.

00:00:48.515 --> 00:00:52.060
I'm going to copy the host name to the clipboard.

00:00:52.060 --> 00:00:56.760
Now I'm going to add my host name to my inventory file.

00:01:03.920 --> 00:01:06.945
Now let's run my Ansible playbook,

00:01:06.945 --> 00:01:09.100
and see what happens.

00:01:14.570 --> 00:01:20.825
In the background, this Ansible playbook is updating dependencies,

00:01:20.825 --> 00:01:22.115
setting up the server,

00:01:22.115 --> 00:01:24.980
adding environment variables, and

00:01:24.980 --> 00:01:29.610
installing a server software that we can later view in the web browser.

00:01:29.810 --> 00:01:32.355
There, it's all done.

00:01:32.355 --> 00:01:34.790
Now if everything work properly,

00:01:34.790 --> 00:01:36.650
I should be able to go to my browser,

00:01:36.650 --> 00:01:38.480
navigate to the same host name,

00:01:38.480 --> 00:01:39.950
and add Port 9090,

00:01:39.950 --> 00:01:42.835
and see the web server running.

00:01:42.835 --> 00:01:49.830
Let's add the host name here to our browser and add Port 9090.

00:01:50.120 --> 00:01:53.720
There it is, our web server is happily running.

00:01:53.720 --> 00:01:55.880
What I did in just a few seconds with

00:01:55.880 --> 00:01:59.420
a single command would normally take me several minutes at least.

00:01:59.420 --> 00:02:03.415
That one command can do it 1,000 times.

00:02:03.415 --> 00:02:06.095
Now that we've seen Ansible in action,

00:02:06.095 --> 00:02:07.550
we can get into the code,

00:02:07.550 --> 00:02:08.875
and design a playbook.

00:02:08.875 --> 00:02:12.320
A moment ago, I used an Ansible playbook to set

00:02:12.320 --> 00:02:15.965
up Prometheus on a completely clean EC2 instance.

00:02:15.965 --> 00:02:21.875
I did it all with a single command and it finished all the tasks in just a few seconds.

00:02:21.875 --> 00:02:25.565
But what all goes into a playbook to make that possible?

00:02:25.565 --> 00:02:28.690
Let's take a look at Ansible playbook structure.

00:02:28.690 --> 00:02:32.464
Ansible calls its main entry point a playbook,

00:02:32.464 --> 00:02:36.350
which comes from the sports world where coach has a book full

00:02:36.350 --> 00:02:40.675
of plays or instructions that the player should follow to win the game.

00:02:40.675 --> 00:02:46.175
Ansible playbooks have plays which are independent set of instructions.

00:02:46.175 --> 00:02:50.090
You could have plays for many things like updating a web server,

00:02:50.090 --> 00:02:52.790
migrating a database, installing dependencies,

00:02:52.790 --> 00:02:55.555
or copying production files.

00:02:55.555 --> 00:02:58.865
There are a few things you're going to need to watch out for.

00:02:58.865 --> 00:03:03.265
I left you some notes in the text below the video to move you in the right direction.

00:03:03.265 --> 00:03:05.550
One of those things is authentication.

00:03:05.550 --> 00:03:10.054
You're going to need to know the default username for your instances in EC2.

00:03:10.054 --> 00:03:12.245
For example, if you're using Ubuntu,

00:03:12.245 --> 00:03:14.480
the username is Ubuntu.

00:03:14.480 --> 00:03:16.820
I gave you a link below to find

00:03:16.820 --> 00:03:19.715
the username if you're using a different operating system.

00:03:19.715 --> 00:03:21.710
Something else is targets.

00:03:21.710 --> 00:03:26.695
This is where you tell Ansible playbooks what machines to connect to and configure.

00:03:26.695 --> 00:03:29.570
Another thing is the concept of roles.

00:03:29.570 --> 00:03:32.975
It sounds like roles as in authorization and permissions,

00:03:32.975 --> 00:03:34.550
but it has nothing to do with those.

00:03:34.550 --> 00:03:37.820
It has more to do with actions to be performed.

00:03:37.820 --> 00:03:42.140
A role is a way to divide up your configuration code into smaller,

00:03:42.140 --> 00:03:44.720
more maintainable, manageable chunks.

00:03:44.720 --> 00:03:49.459
Using roles is the preferred way to design and build Ansible playbooks,

00:03:49.459 --> 00:03:53.795
instead of filling up your main file with all your plays directly.

00:03:53.795 --> 00:03:58.320
Let's look at my code that I use to install Prometheus.

