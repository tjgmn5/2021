{
  "data": {
    "lesson": {
      "id": 850113,
      "key": "f22b06c5-6747-4406-9aaf-c479be4a678a",
      "title": "Storage & Content Delivery",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Learn why we need storage and content delivery in the cloud.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/f22b06c5-6747-4406-9aaf-c479be4a678a/850113/1561693495522/Storage+%26+Content+Delivery+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/f22b06c5-6747-4406-9aaf-c479be4a678a/850113/1561693492287/Storage+%26+Content+Delivery+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 850120,
          "key": "04c19750-ef50-4afc-98bb-c356792922b2",
          "title": "Lesson Introduction",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "04c19750-ef50-4afc-98bb-c356792922b2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850530,
              "key": "a6ad5ae7-ce73-45f2-8507-1b8976fccee2",
              "title": "CloudEng Course1 Lesson3 Introduction",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "g8b5kgxzUfQ",
                "china_cdn_id": "g8b5kgxzUfQ.mp4"
              }
            }
          ]
        },
        {
          "id": 850121,
          "key": "02130ae9-0f52-4873-a043-bf76a8cbb912",
          "title": "Why do we need storage in the cloud?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "02130ae9-0f52-4873-a043-bf76a8cbb912",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850148,
              "key": "34670357-5fe1-4901-8cd1-5fa1fc174874",
              "title": "CloudEng Course1 Lesson3 WhyWeNeedStorage V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "zwepSeXsutA",
                "china_cdn_id": "zwepSeXsutA.mp4"
              }
            },
            {
              "id": 851085,
              "key": "fc448f10-f79f-405c-9e42-33fc03243d44",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>Storage in the Cloud</h1>\n\nStorage and database services in the cloud provide a place for companies to collect, store, and analyze the data they've collected over the years at a massive scale.  \n\n<h1>Storage & Database Services</h1>\n<ul>\n<li>Amazon Simple Storage Service (Amazon S3) </li>\n<li>Amazon Simple Storage Service (Amazon S3) Glacier</li>\n<li>DynamoDB</li>\n<li>Relational Database Service (RDS)</li>\n<li>Redshift</li>\n<li>ElastiCache</li>\n<li>Neptune</li>\n<li>Amazon DocumentDB</li>\n</ul>\n\n",
              "instructor_notes": ""
            },
            {
              "id": 851087,
              "key": "7f54b96b-93c0-40f5-9d73-180cb8006e22",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7f54b96b-93c0-40f5-9d73-180cb8006e22",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match each term with its definition."
                },
                "concepts_label": "Term",
                "answers_label": "Definition",
                "concepts": [
                  {
                    "text": "Durability",
                    "correct_answer": {
                      "id": "a1558805424630",
                      "text": "guarantees that you will not lose the data that you upload to the cloud"
                    }
                  },
                  {
                    "text": "Availability",
                    "correct_answer": {
                      "id": "a1558805583563",
                      "text": "addresses how quickly you can access your data"
                    }
                  },
                  {
                    "text": "Scalability",
                    "correct_answer": {
                      "id": "a1558805584570",
                      "text": "allows applications running in your environment to always meet demand seamlessly"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1558805424630",
                    "text": "guarantees that you will not lose the data that you upload to the cloud"
                  },
                  {
                    "id": "a1558805584570",
                    "text": "allows applications running in your environment to always meet demand seamlessly"
                  },
                  {
                    "id": "a1558805583563",
                    "text": "addresses how quickly you can access your data"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 850122,
          "key": "828b7524-7c6b-4ba6-9cfe-9c23deaaa76d",
          "title": "S3 & Glacier",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "828b7524-7c6b-4ba6-9cfe-9c23deaaa76d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850142,
              "key": "c487ac4d-8cf4-4f14-8dd3-c8ce1867139b",
              "title": "CloudEng Course1 Lesson3 S3Glacier(PART ONE) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "dGhnH2CPSr0",
                "china_cdn_id": "dGhnH2CPSr0.mp4"
              }
            },
            {
              "id": 851086,
              "key": "88c274e8-d903-4bd0-a3d7-fbedb9080d82",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>S3 & S3 Glacier</h1>\nAmazon Simple Storage Service (or S3) is an object storage system in the cloud. \n\n<h1>Storage Classes</h1>\nS3 offers several <a href=\"https://aws.amazon.com/s3/storage-classes\">storage classes</a>, which are different data access levels for your data at certain price points. \n\n<ul>\n<li>S3 Standard</li>\n<li>S3 Glacier</li>\n<li>S3 Glacier Deep Archive</li>\n<li>S3 Intelligent-Tiering</li>\n<li>S3 Standard Infrequent Access </li>\n<li>S3 One Zone-Infrequent Access</li>\n</ul>\n\n<h1>Tips</h1>\n<ul>\n<li>S3 is found under the Storage section on the AWS Management Console.</li>\n<li>A single object can be up to 5 terabytes in size.</li>\n<li>You can enable Multi-Factor Authentication (MFA) Delete on an S3 bucket to prevent accidental deletions.</li>\n<li><strong>S3 Acceleration</strong> can be used to enable fast, easy, and secure transfers of files over long distances between your data source and your S3 bucket.\n</ul>",
              "instructor_notes": ""
            },
            {
              "id": 851088,
              "key": "129ea991-9822-4343-8928-a17470931dd6",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "129ea991-9822-4343-8928-a17470931dd6",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which S3 storage class is best for archiving?",
                "answers": [
                  {
                    "id": "a1558806806397",
                    "text": "S3 Standard",
                    "is_correct": false
                  },
                  {
                    "id": "a1558806823996",
                    "text": "S3 Intelligent-Tiering S3 ",
                    "is_correct": false
                  },
                  {
                    "id": "a1558806825104",
                    "text": "S3 Glacier",
                    "is_correct": true
                  },
                  {
                    "id": "a1558806853887",
                    "text": "S3 Standard Infrequent Access",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 859382,
              "key": "d865e640-cf14-4ee0-a474-946f7d935a42",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n---\n* [Amazon S3](https://aws.amazon.com/s3/)\n* [Amazon S3 Glacier](https://aws.amazon.com/glacier/)\n* [What is Amazon S3 Glacier](https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html)\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1103814,
          "key": "61f25caa-7d8d-4f79-8332-dcc1d9a513b8",
          "title": "S3 - Create a Bucket",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "61f25caa-7d8d-4f79-8332-dcc1d9a513b8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1103818,
              "key": "498c3d48-7374-47eb-b690-f3b84566caf5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Let's learn how to create a bucket in <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/gsg/GetStartedWithS3.html\" target=\"_blank\">Amazon S3</a>, and view a few properties of an existing bucket. \n\n\n## Create a Bucket\n1. Navigate to the <a href=\"console.aws.amazon.com/s3/home\" target=\"_blank\">S3 dashboard</a>, and click on the **Create bucket** button. It will launch a new wizard.",
              "instructor_notes": ""
            },
            {
              "id": 1103819,
              "key": "d0ceb7fe-7b9e-4ff3-98d3-f5ea2f59c940",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe37ba_screenshot-2020-11-25-at-4.06.17-pm/screenshot-2020-11-25-at-4.06.17-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d0ceb7fe-7b9e-4ff3-98d3-f5ea2f59c940",
              "caption": "S3 service &#8594; Buckets dashboard. <br>View all of the S3 buckets in your account <br>*(S3 is a global service, not a region-specific). *",
              "alt": "",
              "width": 600,
              "height": 932,
              "instructor_notes": null
            },
            {
              "id": 1103820,
              "key": "5e223595-72ea-4e07-9d88-d2134abdcd8b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "We create a bucket first, and later we upload files and folders to it. \n\n2. **General configuration**<br> Provide the bucket-name and the region where you want to locate the bucket. The bucket name must be unique worldwide, and must not contain spaces or uppercase letters.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 1103823,
              "key": "bcb72a81-b8ac-4d9b-8d61-4eb30b15dcde",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe3a31_screenshot-2020-11-25-at-4.07.11-pm/screenshot-2020-11-25-at-4.07.11-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/bcb72a81-b8ac-4d9b-8d61-4eb30b15dcde",
              "caption": "Create a bucket - Provide general details",
              "alt": "",
              "width": 500,
              "height": 1004,
              "instructor_notes": null
            },
            {
              "id": 1163723,
              "key": "94329564-fb99-4e7a-8d41-abdac10cceee",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n3. **Public Access settings**<br>\nYou can choose public visibility. Let's uncheck the *Block all public access* option. \n\n",
              "instructor_notes": ""
            },
            {
              "id": 1103824,
              "key": "c138b137-5f33-494c-ae7b-26afb5d28f99",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe3a6e_screenshot-2020-11-25-at-4.07.33-pm/screenshot-2020-11-25-at-4.07.33-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/c138b137-5f33-494c-ae7b-26afb5d28f99",
              "caption": "Create a bucket - Make it public",
              "alt": "",
              "width": 500,
              "height": 1382,
              "instructor_notes": null
            },
            {
              "id": 1163724,
              "key": "eb9c75ad-9633-4526-ba7e-71e3850692e2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "4. **Bucket Versioning and Encryption**<br>\n * Bucket Versioning - Keep it disabled.\n * Encryption -  If enabled, it will encrypt the files being stored in the bucket.\n * Object Lock - If enables, it will prevent the files in the bucket from being deleted or modified.\n",
              "instructor_notes": ""
            },
            {
              "id": 1103825,
              "key": "43844fd3-b9ea-471e-b8bf-d383da4c71fb",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe3aab_screenshot-2020-11-25-at-4.07.54-pm/screenshot-2020-11-25-at-4.07.54-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/43844fd3-b9ea-471e-b8bf-d383da4c71fb",
              "caption": "Create a bucket - Provide additional details",
              "alt": "",
              "width": 500,
              "height": 1324,
              "instructor_notes": null
            },
            {
              "id": 1103822,
              "key": "4530107a-dd46-48cb-aedf-aea134032a0f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\nIn the snapshots above, we have created a public bucket. Let's see **how to upload files and folders to the bucket**, and configure additional settings.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 1103821,
              "key": "5b8ba270-7e5a-402b-b891-e62141d159ec",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Upload File/Folders to the Bucket\nFrom the [S3 dashboard](console.aws.amazon.com/s3/home), click on the name of the bucket you have created in the step above. ",
              "instructor_notes": ""
            },
            {
              "id": 1103826,
              "key": "12d6d134-f999-4e1b-bd8c-4a6c39a7ddcc",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe3ad2_screenshot-2020-11-25-at-4.12.35-pm/screenshot-2020-11-25-at-4.12.35-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/12d6d134-f999-4e1b-bd8c-4a6c39a7ddcc",
              "caption": "Details of an existing bucket. Upload files/folders to this bucket.",
              "alt": "",
              "width": 600,
              "height": 1716,
              "instructor_notes": null
            },
            {
              "id": 1103817,
              "key": "02ac542c-da49-493d-bd04-913871335711",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In the snapshot above, it shows that the bucket is in the Region: `US East (Ohio) us-east-2`, and it has a unique Amazon resource name (ARN): `arn:aws:s3:::mtvbucket`. You can view more details of the bucket, in the tabs next to the bucket overview: **Objects, Properties, Permissions, Metrics, \nManagement,** and **Access points**.  Leet's upload a sample file to the bucket:\n\n\n1. Click on the **Upload** button to upload files and folders into the current bucket. In the snapshot below, we have uploaded a **Sample.txt** file. ",
              "instructor_notes": ""
            },
            {
              "id": 1103827,
              "key": "ef90c26b-be11-4893-a2d1-0aa88992f41c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe3e6d_screenshot-2020-11-25-at-4.52.03-pm/screenshot-2020-11-25-at-4.52.03-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/ef90c26b-be11-4893-a2d1-0aa88992f41c",
              "caption": "A sample file in the bucket",
              "alt": "",
              "width": 600,
              "height": 548,
              "instructor_notes": null
            },
            {
              "id": 1103828,
              "key": "d2cb5958-0ac2-4016-981d-a7ddcb40882a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "2. Click on the file name to view the file-specific details, as shown below.",
              "instructor_notes": ""
            },
            {
              "id": 1103829,
              "key": "fb87b65d-a883-4dfb-93a3-d5e302bc794e",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe3ec1_screenshot-2020-11-25-at-4.53.35-pm/screenshot-2020-11-25-at-4.53.35-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/fb87b65d-a883-4dfb-93a3-d5e302bc794e",
              "caption": "Details of an individual file (object)",
              "alt": "",
              "width": 600,
              "height": 1312,
              "instructor_notes": null
            },
            {
              "id": 1103830,
              "key": "2e5cc8d0-99f1-4e9c-b792-eef5fb0c28d6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Details of an Existing Bucket\n\n### 1. Properties\n\nThere are several properties that you can set for S3 buckets, such as:\n\n* Bucket Versioning - Allows you to keep multiple versions of an object in the same bucket. \n* Static website hosting - Mark if the bucket is used to host a website. S3 is a very cost-effective and cheap solution for serving up static web content.\n* Requester pays - Make the requester pays for requests and data transfer costs. \n* Server access logging - Log requests for access to your bucket.\n* **Permissions**\n\nIt shows who has access to the S3 bucket, and who has access to the data within the bucket. In the example snapshots above, the bucket is public, meaning anyone can access it. Here, we can write an access policy (in JSON format) to provides access to the objects stored in the bucket.\n\n### 2. Metrics\n\nView the metrics for usage, request, and data transfer activity within your bucket, such as, total bucket size, total number of objects, and storage class analysis. \n\n### 3. Management\n\nIt allows you to create life cycle rules to help manage your objects. It includes rules such as transitioning objects to another storage class, archiving them, or deleting them after a specified period of time.\n\n### 4. Access points\n\nHere, you can create access endpoints for sharing the bucket at scale. Using an endpoint, you can perform all regular operations on the bucket.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850123,
          "key": "b363fe0c-4b9e-4774-862a-f8d3b58ab9a1",
          "title": "DynamoDB",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b363fe0c-4b9e-4774-862a-f8d3b58ab9a1",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850135,
              "key": "39121794-80b6-48f2-861f-9f3186ba5838",
              "title": "CloudEng Course1 Lesson3 DynamoDB(PART ONE) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "_iB8YU6FpTA",
                "china_cdn_id": "_iB8YU6FpTA.mp4"
              }
            },
            {
              "id": 851089,
              "key": "4132fa5f-49e8-4d60-9296-3ae34de9d3e6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>DynamoDB</h1>\n\nDynamoDB is a NoSQL document database service that is fully managed. Unlike traditional databases, NoSQL databases, are schema-less. Schema-less simply means that the database doesn't contain a fixed (or rigid) data structure.\n\n<h1>Tips</h1>\n<ul>\n<li>DynamoDB is found under the Database section on the AWS Management Console.</li>\n<li>DynamoDB can handle more than 10 trillion requests per day.</li>\n<li>DynamoDB is serverless as there are no servers to provision, patch, or manage.</li>\n<li>DynamoDB supports key-value and document data models.</li>\n<li>DynamoDB synchronously replicates data across three AZs in an AWS Region.</li>\n<li>DynamoDB supports GET/PUT operations using a primary key.</li>\n</ul>",
              "instructor_notes": ""
            },
            {
              "id": 851090,
              "key": "fe35c9e5-0ab7-4746-a0b4-5b59edfaa9b1",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "fe35c9e5-0ab7-4746-a0b4-5b59edfaa9b1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How is data stored in a DynamoDB table?",
                "answers": [
                  {
                    "id": "a1558807726031",
                    "text": "XML",
                    "is_correct": false
                  },
                  {
                    "id": "a1558807782514",
                    "text": "Plain Text",
                    "is_correct": false
                  },
                  {
                    "id": "a1558807784796",
                    "text": "Encrypted text",
                    "is_correct": false
                  },
                  {
                    "id": "a1558807785704",
                    "text": "JSON",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 851091,
              "key": "e732887f-e551-446f-897c-35f21bc4294c",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e732887f-e551-446f-897c-35f21bc4294c",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "In the shared responsibility model, when working with DynamoDB, what is NOT your responsibility? Pick two.",
                "answers": [
                  {
                    "id": "a1558808087866",
                    "text": "Patch or upgrade the database",
                    "is_correct": true
                  },
                  {
                    "id": "a1558808144123",
                    "text": "Provision or manage servers",
                    "is_correct": true
                  },
                  {
                    "id": "a1558808149067",
                    "text": "Encrypt data at rest",
                    "is_correct": false
                  },
                  {
                    "id": "a1558808151695",
                    "text": "Add or manage an index",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 859383,
              "key": "08ce6723-9d4a-48bc-810a-0bafb362573a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n---\n* [Amazon DynamoDB Overview](https://aws.amazon.com/dynamodb/)\n* [What is Amazon DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1103832,
          "key": "a3505a63-7b2c-4ab0-8a5d-fdeb28346899",
          "title": "DynamoDB - Create a table",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a3505a63-7b2c-4ab0-8a5d-fdeb28346899",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1103843,
              "key": "0a30927d-f13a-40df-945d-b179d4d4564e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "According to AWS:\n>[DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html) is a managed NoSQL database service that automatically manages the hardware provisioning, setup, configuration, replication, software patching, and cluster scaling. \n\nFor in-depth details, refer to the [Amazon DynamoDB: How It Works](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.html). On this page, let's see how to create a table, and view the details of an existing table.  ",
              "instructor_notes": ""
            },
            {
              "id": 1103833,
              "key": "ff978080-966f-4f7d-88e3-76dab658a90a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n## A. DynamoDB Dashboard\nGo to the [DynamoDB console](https://console.aws.amazon.com/dynamodb/home), where you can view metrics for all of the tables that exist in your account. Let's start the **Create table** wizard. ",
              "instructor_notes": ""
            },
            {
              "id": 1103835,
              "key": "31758bea-9f98-4b68-9d9f-4719323dfdcd",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe4ba1_screenshot-2020-11-25-at-5.35.43-pm/screenshot-2020-11-25-at-5.35.43-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/31758bea-9f98-4b68-9d9f-4719323dfdcd",
              "caption": "Snapshot: Create your first table",
              "alt": "",
              "width": 500,
              "height": 890,
              "instructor_notes": null
            },
            {
              "id": 1103840,
              "key": "d7ec646b-53aa-48cd-a4b4-e7aa9fab4b09",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## B. Create a Table\nFollow the guided steps available on the **Create table** wizard. See the snapshot below. ",
              "instructor_notes": ""
            },
            {
              "id": 1103836,
              "key": "90c53d48-b708-4f3f-8edd-dfa89ed82eb9",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe4bf5_screenshot-2020-11-25-at-5.40.21-pm/screenshot-2020-11-25-at-5.40.21-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/90c53d48-b708-4f3f-8edd-dfa89ed82eb9",
              "caption": "Snapshot: Follow the guided steps available on the **Create table** wizard. Currently, it shows step 1 of 6. ",
              "alt": "",
              "width": 700,
              "height": 1692,
              "instructor_notes": null
            },
            {
              "id": 1103845,
              "key": "edab5008-fd35-47da-a905-4a4fb28935f0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## C. Add Data to the Table\nGo back to the **DynamoDB &#8594; Tables** dashboard. From the list of all the existing tables, select the one in which you want to add data. ",
              "instructor_notes": ""
            },
            {
              "id": 1103847,
              "key": "cdee8180-ebe1-498d-8588-bec4b33741f9",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe5c91_screenshot-2020-11-25-at-6.52.35-pm/screenshot-2020-11-25-at-6.52.35-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/cdee8180-ebe1-498d-8588-bec4b33741f9",
              "caption": "Snapshot: Add data to an existing table, and view more details",
              "alt": "",
              "width": 700,
              "height": 1038,
              "instructor_notes": null
            },
            {
              "id": 1103856,
              "key": "d560f473-bd35-4fbc-be61-6dc59feee3f4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "The details of the items highlighted in red in the snapshot above are:",
              "instructor_notes": ""
            },
            {
              "id": 1103850,
              "key": "8e5678c4-bd71-4037-8f90-43992e7ef151",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### 1. Create Item\nData can be added in the form of an **item**. \n>You can imagine an **item** as analogous to a **row** in a relational table for simplicity. \n\nEvery item consists of one or more attributes. Each attribute consists of a name, a data type, and a value. One of the attributes serves as the primary key.  See a sample item entry below. ",
              "instructor_notes": ""
            },
            {
              "id": 1103851,
              "key": "a300a736-09be-4e0f-bacf-2f935490b086",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe6110_screenshot-2020-11-25-at-7.17.53-pm/screenshot-2020-11-25-at-7.17.53-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/a300a736-09be-4e0f-bacf-2f935490b086",
              "caption": "Snapshot: Create an item with the `Artist` and `SongTitle` attribute. Notice on the upper left corner, you can switch the view between **Tree** and **Text**.",
              "alt": "",
              "width": 300,
              "height": 488,
              "instructor_notes": null
            },
            {
              "id": 1103855,
              "key": "5e8dd644-82da-4af5-8ca2-4ba3d16b13dc",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe645d_screenshot-2020-11-25-at-7.33.46-pm/screenshot-2020-11-25-at-7.33.46-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/5e8dd644-82da-4af5-8ca2-4ba3d16b13dc",
              "caption": "Snapshot: The **Text** view of the same item with the `Artist` and `SongTitle` attribute. ",
              "alt": "",
              "width": 300,
              "height": 414,
              "instructor_notes": null
            },
            {
              "id": 1103852,
              "key": "1e8148cf-095e-43cc-a595-72485856ef45",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe616a_screenshot-2020-11-25-at-7.19.36-pm/screenshot-2020-11-25-at-7.19.36-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1e8148cf-095e-43cc-a595-72485856ef45",
              "caption": "Snapshot: A table with five items. ",
              "alt": "",
              "width": 500,
              "height": 1098,
              "instructor_notes": null
            },
            {
              "id": 1103853,
              "key": "b756f00f-af4b-4b4c-b3c7-5680594efc15",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### 2. Details of an Existing Table\nThere are several useful features provided to help you manage your data found in DynamoDB. For the selected table, you can view the following information in separate tabs:\n* *Overview* - This tab shows high-level details about the table. For example, the table name, partition key, primary sort key (if any), encryption type, and much more. Tables can be encrypted at rest with no overhead. You can also see the region and the Amazon Resource Name (ARN), which is a unique identifier for the current resource. \n\n\n* *Items* - It lists all of the items/data stored in the table.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 1103854,
              "key": "236bd908-0725-48b5-944c-56f3be817a66",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n* *Metrics* - View the metrics for your table, such as, read/write capacity (units/sec), count of throttled read/write requests, and count of throttled read/write counts.\n\n\n* *Alarms* - Set up alarms to notify you if you exceed your capacity limits. For each alarm, you will have to specify a metric and the upper threshold. \n\n\n* *Capacity* - Set up the capacity of the selected table to read and write.\n\n\n* *Indexes* - Set up the index using a primary key, and project on a set of attributes. Indexes help you to improve querying performance. \n\n\n* *Global Tables* - When you set up a table as a global table, that table can exist in two or more AWS regions with automatic replication.\n\n\n* *Backups* - A backup helps in restoring a *Point-in-time state*. DynamoDB maintains continuous backups of your table for the last 35 days.\n\n\n* *Triggers* - Create triggers, for example, you can have a lambda function run whenever data is inserted into the current table.\n\n\n* *Access control* - Set up access control policies (JSON files) that can allow access to the current table from Facebook, Google, or Amazon (not AWS). ",
              "instructor_notes": ""
            },
            {
              "id": 1103838,
              "key": "f373f70c-7536-400e-a3aa-10789d55a14d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## External Resource\nAWS has a very useful [tutorial](https://aws.amazon.com/getting-started/hands-on/create-nosql-table/) to get started with DynamoDB. It has the following guided sections: \n\n* Step 1: Create a NoSQL Table\n* Step 2: Add Data to the NoSQL Table\n* Step 3: Query the NoSQL Table\n* Step 4: Delete an Existing Item\n* Step 5: Delete a NoSQL Table\n\n**Note** - The **Create table** wizard available on the DynamoDB console also follows step #1 of the tutorial mentioned above. ",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850124,
          "key": "094b68b0-5097-4452-83c2-31ff26fdd6c4",
          "title": "Lab - DynamoDB",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "094b68b0-5097-4452-83c2-31ff26fdd6c4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 851481,
              "key": "de7f4393-bcde-49cc-81ef-316769286ffc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# DynamoDB\n---\nIn this hands-on exercise, you will create a NoSQL database in the cloud. \n\n1. Prerequisites: AWS Account\n2. By the end of this lab, you will be able to:\n * Create a table\n * Add data to a table\n * Query data in a table\n\nFollow the exercise instructions described below: \n\n### Step 1. Access the DynamoDB service\n   * From the [AWS Management Console](https://console.aws.amazon.com/) page, select the DynamoDB service.\n   * Use the **Create table** wizard to create a table, with the following details:\n\n<center>\n\n|Field|Description|\n|---|---|\n|Table name|`Course`|\n|Partition key|`Name`, with `String` datatype|\n</center>\n   * **Note:** The partition key spreads data against partitions for scalability. \n   * Keep the remaining fields with the default values\n",
              "instructor_notes": ""
            },
            {
              "id": 1106406,
              "key": "d27f55e0-b679-442e-adf8-a2388fdb7a91",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Step 2. Add Data to the Table\n\n* Go back to the **DynamoDB → Tables** dashboard. Select the table in which you want to add data.\n* Once the table is selected, click on the **Items** tab.\n* Start the **Create item** wizard to store the following item. \n\n<center>\n\n<p></p><div class=\"index-module--table-responsive--1zG6k\"><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><table class=\"index-module--table--8j68C index-module--table-striped--3HHC-\">\n<thead>\n<tr>\n<th>Field</th>\n<th>Data type</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Name</code></td>\n<td>String</td>\n<td><code>Course1</code></td>\n</tr>\n<tr>\n<td colspan=\"3\"><strong>Add the following new field</strong></td>\n</tr>\n<tr>\n<td><code>Teacher</code></td>\n<td>String</td>\n<td><code>Udacity Instructor</code></td>\n</tr>\n</tbody>\n</table>\n</div><p></p></center>\n* Follow the same process to add 5 more items.",
              "instructor_notes": ""
            },
            {
              "id": 1106407,
              "key": "ca0d845a-e48f-4413-8e4e-2e450cc2d62c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Step 3. Query Data in a Table\n   * Stay on the **Items** tab in **DynamoDB → Tables** dashboard. Change the `Scan` dropdown to `Query`.\n   * Where it says `Enter value`, in the row next to the `name` Partition key, enter `Course 1` and click **Start Search**.\n   * You should see your search results appear in the window.\n\n\n### Step 4. Cleanup and delete resources\n   * To clean up the resources to avoid recurring charges, ensure the table name is selected.\n   * Click on the **Delete table** button.\n   * Ensure to select the *Delete all CloudWatch alarms for this table* option, and click **Delete**.\n",
              "instructor_notes": ""
            },
            {
              "id": 859384,
              "key": "402d7898-3c44-42da-9dbb-ad789160604f",
              "title": "Create a NoSQL database in the cloud using DynamoDB",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "402d7898-3c44-42da-9dbb-ad789160604f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Access the DynamoDB service from AWS Management Console",
                "Add Data to the Table",
                "Query Data in a Table",
                "Cleanup and delete resources"
              ],
              "positive_feedback": "Excellent!",
              "video_feedback": null,
              "description": ""
            }
          ]
        },
        {
          "id": 850125,
          "key": "c198aad1-83e4-4409-b00f-eccaeca23833",
          "title": "Relational Database Service (RDS)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c198aad1-83e4-4409-b00f-eccaeca23833",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850138,
              "key": "d35b98eb-86a7-4db5-8948-15f0b9cfc8ca",
              "title": "CloudEng Course1 Lesson3 RDS(PART ONE) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "fQjCOHCUw5I",
                "china_cdn_id": "fQjCOHCUw5I.mp4"
              }
            },
            {
              "id": 851092,
              "key": "2476b46b-f725-4778-ae23-ea1eaa48e8d7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>Relational Database Service (RDS)</h1>\n\nRDS (or Relational Database Service) is a service that aids in the administration and management of databases. RDS assists with database administrative tasks that include upgrades, patching, installs, backups, monitoring, performance checks, security, etc. \n\n<h1>Database Engine Support</h1>\n<ul>\n<li>Oracle</li>\n<li>PostgreSQL</li>\n<li>MySQL</li>\n<li>MariaDB</li>\n<li>SQL Server</li>\n</ul>\n\n<h1>Features</h1>\n<ul>\n<li>failover</li>\n<li>backups</li>\n<li>restore</li>\n<li>encryption</li>\n<li>security</li>\n<li>monitoring</li>\n<li>data replication</li>\n<li>scalability</li>\n</ul>",
              "instructor_notes": ""
            },
            {
              "id": 851093,
              "key": "6de62ab4-1926-4cd1-a694-8437faa4e4c3",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6de62ab4-1926-4cd1-a694-8437faa4e4c3",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which database engines are supported by RDS? Pick three.",
                "answers": [
                  {
                    "id": "a1558809710482",
                    "text": "MySQL",
                    "is_correct": true
                  },
                  {
                    "id": "a1558809730438",
                    "text": "MongoDB",
                    "is_correct": false
                  },
                  {
                    "id": "a1558809731620",
                    "text": "Aurora",
                    "is_correct": true
                  },
                  {
                    "id": "a1558809732500",
                    "text": "Oracle",
                    "is_correct": true
                  },
                  {
                    "id": "a1558809742317",
                    "text": "IBM DB2",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 851094,
              "key": "a1049698-b95b-4943-8581-11199d41d3a0",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a1049698-b95b-4943-8581-11199d41d3a0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What doesn't RDS help with?",
                "answers": [
                  {
                    "id": "a1558810303349",
                    "text": "Accessing your database via secure shell (SSH)",
                    "is_correct": true
                  },
                  {
                    "id": "a1558810347543",
                    "text": "Upgrading your database",
                    "is_correct": false
                  },
                  {
                    "id": "a1558810348506",
                    "text": "Applying patches to your database",
                    "is_correct": false
                  },
                  {
                    "id": "a1558810349241",
                    "text": "Taking database backups",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 859385,
              "key": "f14425b4-f57c-4d27-a99a-faa5dd4e0f80",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n---\n* [What Is A Relational Database](https://aws.amazon.com/relational-database/)\n* [Amazon Relational Database Service](https://aws.amazon.com/rds/)\n* [AWS Product Databases using Relational Databases](https://aws.amazon.com/products/databases/)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1103857,
          "key": "00482a37-6fd7-4e7a-8351-57cc17d5d7e3",
          "title": "RDS - Create MySQL Database",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "00482a37-6fd7-4e7a-8351-57cc17d5d7e3",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1103859,
              "key": "985c3220-9d1c-4de1-a2f4-02c25f75e939",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "According to AWS:\n>[Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html) is a relational database service that manages common database administration tasks, resizes automatically, and is cost-friendly.\n\nLet's see how to create a MySQL database, and view the details of an existing database.\n\n## A. RDS Dashboard\nNavigate to the [RDS dashboard](https://console.aws.amazon.com/rds/home). \nIt shows the database-resources summary, such as the count of database instances, the health of the database service, reserved instances, snapshots. You can also view the portion of the allocated storage. You can launch the **Create database** wizard from here. \n\n",
              "instructor_notes": ""
            },
            {
              "id": 1103861,
              "key": "8156d4c7-a93d-44f6-a6ea-2ef8fbd821b6",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe80f9_screenshot-2020-11-25-at-8.43.57-pm/screenshot-2020-11-25-at-8.43.57-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8156d4c7-a93d-44f6-a6ea-2ef8fbd821b6",
              "caption": "Snapshot: RDS dashboard",
              "alt": "",
              "width": 700,
              "height": 1454,
              "instructor_notes": null
            },
            {
              "id": 1103862,
              "key": "34a1f774-162e-494b-a9ce-ff589780c062",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## B. Create a Database\n\n",
              "instructor_notes": ""
            },
            {
              "id": 1103867,
              "key": "6acff1d9-e62c-42f0-b563-c36e52135650",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "AWS provides two options to choose from:\n1. **Standard create** - You have set all of the configuration options, including ones for availability, security, backups, and maintenance.\n\n\n2. **Easy create** - You use the industry best-practice configurations. All configuration options, except the Encryption and VPC details, can be changed after the database is created.\n\nThe snapshot below shows the fields you choose while creating a MySQL database using the **Easy create** option. ",
              "instructor_notes": ""
            },
            {
              "id": 1103869,
              "key": "b81fca12-4283-4880-9d89-f7547d4df678",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe894b_screenshot-2020-11-25-at-9.58.56-pm/screenshot-2020-11-25-at-9.58.56-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b81fca12-4283-4880-9d89-f7547d4df678",
              "caption": "Snapshot: Create a database - Choose the *Easy create* option",
              "alt": "",
              "width": 700,
              "height": 1126,
              "instructor_notes": null
            },
            {
              "id": 1103870,
              "key": "68f49ff8-45a8-4b5e-87a0-acd4e9ef140c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe89a8_screenshot-2020-11-25-at-10.01.27-pm/screenshot-2020-11-25-at-10.01.27-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/68f49ff8-45a8-4b5e-87a0-acd4e9ef140c",
              "caption": "Snapshot: Create a database - Use the RDS Free Tier template. ",
              "alt": "",
              "width": 700,
              "height": 1440,
              "instructor_notes": null
            },
            {
              "id": 1103868,
              "key": "ecabc685-4278-4f91-9520-e00d13a7be3e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> Use either the **RDS Free Tier** or **Dev/test **template. On free-tier resources, you can develop and test applications to gain hands-on experience with Amazon RDS  \n>",
              "instructor_notes": ""
            },
            {
              "id": 1103871,
              "key": "2557bfb5-82d6-4fe5-9d53-cce185605440",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe89fa_screenshot-2020-11-25-at-10.02.22-pm/screenshot-2020-11-25-at-10.02.22-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/2557bfb5-82d6-4fe5-9d53-cce185605440",
              "caption": "Snapshot: Create a database - View default settings",
              "alt": "",
              "width": 700,
              "height": 1628,
              "instructor_notes": null
            },
            {
              "id": 1103872,
              "key": "beaa87b5-3573-4f7d-ac5e-88a9202f2249",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": ">Notice that all configuration settings, except the Encryption and VPC details, can be changed after the database is created.",
              "instructor_notes": ""
            },
            {
              "id": 1103873,
              "key": "c1f29314-c4f7-43d1-8d3d-57597e5a45e2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## C. Details of an Existing Database\nWe have created a sample `database-1` to explain the information you can view at the Databases dashboard. ",
              "instructor_notes": ""
            },
            {
              "id": 1103874,
              "key": "8a59505c-92ea-4840-9a28-9e6757418299",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe8c84_screenshot-2020-11-25-at-10.22.44-pm/screenshot-2020-11-25-at-10.22.44-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8a59505c-92ea-4840-9a28-9e6757418299",
              "caption": "Snapshot: A sample `database-1`. ",
              "alt": "",
              "width": 700,
              "height": 546,
              "instructor_notes": null
            },
            {
              "id": 1103878,
              "key": "d300e64e-0dd0-445e-9168-a1b43b4095c3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": ">For each database in the list above,  you can see the Region and availability zone it's running in, the size, and the status that it's up and running. You can also see the percentage utilization of the underlying CPU. ",
              "instructor_notes": ""
            },
            {
              "id": 1103875,
              "key": "b393be4e-818d-456c-ad49-fbde2186c510",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe8cb4_screenshot-2020-11-25-at-10.23.25-pm/screenshot-2020-11-25-at-10.23.25-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b393be4e-818d-456c-ad49-fbde2186c510",
              "caption": "Snapshot: *Connectivity & security* details of the selected database",
              "alt": "",
              "width": 700,
              "height": 1582,
              "instructor_notes": null
            },
            {
              "id": 1103876,
              "key": "a9dc443a-c8e6-49c8-8552-d520c11d20c7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "1. *Connectivity & security* - View the *endpoint URL* in the snapshot above. In order to see the data stored in this database, because it's MySQL, you can use a tool like MySQL Workbench. You will need to know the endpoint URL in order to connect directly to this database. In addition, you can view information about networking, the security groups that it's a part of, and replication information.\n\n\n2. *Monitoring* - It shows several useful metrics about the status of your database, such as CPU utilization percentage, the number of connections, the free storage space, etc.\n\n\n3. *Logs & events* - It shows useful events. For example, it shows the timestamp when the database was created, when the last backup occurred, etc.\n\n\n\n4. *Configuration* - It shows more high-level information, like the ARN number, DB instance configurations, MySQL engine version,  creation time, the master username, and other similar details. \n\n\n5. *Maintenance & backups* - It shows any snapshots recently created. Note that the snapshots are taken automatically but you do have the option to configure it. ",
              "instructor_notes": ""
            },
            {
              "id": 1103863,
              "key": "b292b6be-5f4b-480b-94fa-7c7e8dbc6f9a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n\n",
              "instructor_notes": ""
            },
            {
              "id": 1103858,
              "key": "b176120a-069c-4a5c-a587-b761b56edb0a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## More to Explore\nFor enterprise-level database requirements, AWS offers another service - Amazon Aurora. It is a MySQL- and PostgreSQL-compatible enterprise-class database, According to AWS:\n>[Amazon Aurora](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html) supports up to 64TB of auto-scaling storage capacity, 6-way replication across three availability zones, and 15 low-latency read replicas.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850126,
          "key": "4ee3f40e-1d86-404a-9f66-fa50dc6975fa",
          "title": "RedShift",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "4ee3f40e-1d86-404a-9f66-fa50dc6975fa",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850141,
              "key": "257e2081-39d7-48b1-baeb-50c22c359e48",
              "title": "CloudEng Course1 Lesson3 Redshift V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "rNXWXR_3jRo",
                "china_cdn_id": "rNXWXR_3jRo.mp4"
              }
            },
            {
              "id": 851095,
              "key": "e21245c6-d980-4c63-b893-dc1c46ca0603",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>Redshift</h1>\n\nRedshift is a cloud data warehousing service to help companies manage big data. Redshift allows you to run fast queries against your data using SQL, ETL, and BI tools. Redshift stores data in a column format to aid in fast querying.\n\n<h1>Tips</h1>\n<ul>\n<li>Redshift can be found under the Database section on the AWS Management Console.</li>\n<li>Redshift delivers great performance by using machine learning.</li>\n<li>Redshift Spectrum is a feature that enables you to run queries against data in Amazon S3.</li>\n<li>Redshift encrypts and keeps your data secure in transit and at rest.</li>\n<li>Redshift clusters can be isolated using Amazon Virtual Private Cloud (VPC).</li>\n</ul>",
              "instructor_notes": ""
            },
            {
              "id": 851096,
              "key": "c7700bbe-38e0-4f8b-a64b-0747d2c86891",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c7700bbe-38e0-4f8b-a64b-0747d2c86891",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What should a data warehouse, like Redshift, NOT be used for?",
                "answers": [
                  {
                    "id": "a1558811861727",
                    "text": "data analysis",
                    "is_correct": false
                  },
                  {
                    "id": "a1558811883774",
                    "text": "storing large quantities of historical data",
                    "is_correct": false
                  },
                  {
                    "id": "a1558811884545",
                    "text": "processing day-to-day transactions",
                    "is_correct": true
                  },
                  {
                    "id": "a1558811885265",
                    "text": "performing complex queries across all the data ",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 859386,
              "key": "2bdfb84f-d845-4fe9-b27a-0dc8eecb34e9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n---\n* [What Is Amazon Redshift](https://docs.aws.amazon.com/redshift/latest/mgmt/welcome.html)\n* [Amazon Redshift Overview](https://aws.amazon.com/redshift/)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1106381,
          "key": "7549a5c8-f8e5-417d-ba4c-e2a6ae67029d",
          "title": "Lab - RDS",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7549a5c8-f8e5-417d-ba4c-e2a6ae67029d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1106382,
              "key": "7b963ff5-d5c2-4f29-a819-944700378d48",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Relational Database Service (RDS)\n\n<hr>\n\nIn this hands-on exercise, you will create a MySQL database instance using RDS.\n\n1. Prerequisites: AWS Account\n1. By the end of this lab, you will be able to launch a MySQL database\n\nFollow the exercise instructions described below: \n\n### Step 1. Launch MySQL Database\n\n* From the <a href=\"https://console.aws.amazon.com/\" target=\"_blank\">AWS Management Console</a> page, select the RDS service.\n* From the left-hand navigation pane of the RDS dashboard, select **Databases** service, and start the **Create database** wizard.\n* Choose the **Standard create** option, and use the following configuration details:\n<center>\n<div class=\"index-module--table-responsive--1zG6k\">\n<p></p><p></p><p></p><table class=\"index-module--table--8j68C index-module--table-striped--3HHC-\"><thead>\n<tr>\n<th>Section</th>\n<th>Field</th>\n<th>Value</th>\n</tr>\n</thead>\n\n\n\n<tbody>\n<tr>\n  <td rowspan=\"3\">Engine options</td>\n  <td>Engine type</td>\n  <td><code>MySQL</code></td>\n</tr>\n<tr>\n  <td>Engine edition</td>\n  <td><code>MySQL Community</code></td>\n</tr>\n<tr>\n  <td>Version</td>\n  <td>Default</td>\n</tr>\n<tr>\n  <td>Templates</td>\n  <td colspan=\"2\">Free tier</td>\n</tr>\n<tr>\n  <td rowspan=\"2\">Settings</td>\n  <td>DB instance identifier</td>\n  <td>Your choice</td>\n</tr>\n<tr>\n  <td>Master Username/Password</td>\n  <td>Your choice </td>\n</tr>\n<tr>\n  <td>DB instance size</td>\n  <td>DB instance class</td>\n  <td>Burstable classes <code>db.t2.micro</code></td>\n</tr>\n<tr>\n  <td rowspan=\"3\">Storage</td>\n  <td>Storage type</td>\n  <td>General purpose SSD</td>\n</tr>\n<tr>\n  <td>Allocated storage</td>\n  <td>20GiB </td>\n</tr>\n<tr>\n  <td>Storage autoscaling</td>\n  <td>No</td>\n</tr>\n<tr>\n  <td rowspan=\"5\">Connectivity</td>\n  <td>Virtual private cloud</td>\n  <td>Prefer the default. Else, create a new VPC</td>\n</tr>\n<tr>\n  <td>Subnet group</td>\n  <td>Use default</td>\n</tr>\n<tr>\n  <td>Public access</td>\n  <td>Yes</td>\n</tr>\n<tr>\n  <td>VPC security group</td>\n  <td>Default</td>\n</tr>\n<tr>\n  <td>Availability zone</td>\n  <td>Default</td>\n</tr>\n\n</tbody>\n</table><p></p>\n<p></p></div>\n</center>",
              "instructor_notes": ""
            },
            {
              "id": 1106383,
              "key": "c0d8d5d0-e956-4df8-8399-aa7f81ba3b88",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Step 2. View Instance Details\n* You will be automatically navigated back to the **Databases** dashboard, where you can see your recently created database. Make sure the **Status** shows **Available**.\n\n* Click on the DB identifier to review the configuration details. Scroll through, and observe how the instance is configured.\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 1121487,
              "key": "d33839cd-62a5-4052-9579-a6a7b31bd072",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Step 3. Connect to the Database Instance from a MySQL Client\nOnce you create a database instance, you can use any MySQL client application or utility to connect to the database instance. Let's try connecting to using the *MySQL Workbench* client. Please make sure the database you have created is public so that you can connect to it from your local computer. \n1. [Download and install the MySQL Workbench](http://dev.mysql.com/downloads/workbench/)  on your local computer.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 1121488,
              "key": "512416dc-cc61-4ecd-bf01-031d683f645f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "2. Copy the RDS database instance's endpoint URL and port number.\n",
              "instructor_notes": ""
            },
            {
              "id": 1121495,
              "key": "a69e0f9c-6886-429c-a95f-35e434a5b768",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/December/5fe1f3f1_screenshot-2020-12-22-at-6.24.34-pm/screenshot-2020-12-22-at-6.24.34-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/a69e0f9c-6886-429c-a95f-35e434a5b768",
              "caption": "Copy the database instance's endpoint and port number",
              "alt": "",
              "width": 700,
              "height": 1424,
              "instructor_notes": null
            },
            {
              "id": 1121489,
              "key": "d56fc63c-8f0d-4f00-8451-e2c8fe2ea10e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "3. Right-click and open the installed MySQL Workbench application. ",
              "instructor_notes": ""
            },
            {
              "id": 1121494,
              "key": "45189977-0422-4b4f-a742-f141549be48c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/December/5fe1f0ee_screenshot-2020-12-22-at-6.06.24-pm/screenshot-2020-12-22-at-6.06.24-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/45189977-0422-4b4f-a742-f141549be48c",
              "caption": "Welcome page of MySQL Workbench. Open *MySQL Connections*.",
              "alt": "",
              "width": 600,
              "height": 1124,
              "instructor_notes": null
            },
            {
              "id": 1121490,
              "key": "e01993a5-2527-484b-8fb4-71abf93c9adf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "4. Paste the database instance's endpoint URL, port number, and the master username/password.\n",
              "instructor_notes": ""
            },
            {
              "id": 1121496,
              "key": "e15056fd-93f0-43bf-a371-33dce44622b3",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/December/5fe1f22c_screenshot-2020-12-22-at-6.08.38-pm/screenshot-2020-12-22-at-6.08.38-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/e15056fd-93f0-43bf-a371-33dce44622b3",
              "caption": "Paste the database instance's endpoint URL and port number in the MySQL Workbench",
              "alt": "",
              "width": 600,
              "height": 1004,
              "instructor_notes": null
            },
            {
              "id": 1121491,
              "key": "f2da1902-cef2-4b6f-b9d4-78a27d27303f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "5. Test your connection. In case of an unsuccessful connection, verify the inbound rules in the security group attached to the database instance should allow incoming traffic from your local computer or anywhere on the internet. \n",
              "instructor_notes": ""
            },
            {
              "id": 1121497,
              "key": "40278c33-19f9-4f1a-9903-12d9f040b355",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/December/5fe1f29c_screenshot-2020-12-22-at-6.15.52-pm/screenshot-2020-12-22-at-6.15.52-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/40278c33-19f9-4f1a-9903-12d9f040b355",
              "caption": "A successful connection prompt",
              "alt": "",
              "width": 400,
              "height": 504,
              "instructor_notes": null
            },
            {
              "id": 1121498,
              "key": "a8371117-c1d6-403a-ab25-ffade62c9b79",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/December/5fe1f2d0_screenshot-2020-12-22-at-6.13.51-pm/screenshot-2020-12-22-at-6.13.51-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/a8371117-c1d6-403a-ab25-ffade62c9b79",
              "caption": "An unsuccessful connection. Check the security group for inbound rules.",
              "alt": "",
              "width": 400,
              "height": 346,
              "instructor_notes": null
            },
            {
              "id": 1121499,
              "key": "9f58a1f4-1f2f-4c0d-80e0-81822214a964",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/December/5fe1f33b_screenshot-2020-12-22-at-6.12.05-pm/screenshot-2020-12-22-at-6.12.05-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/9f58a1f4-1f2f-4c0d-80e0-81822214a964",
              "caption": "Details of the security group attached to the database instance, showing inbound traffic is allowed from anywhere on the internet. ",
              "alt": "",
              "width": 700,
              "height": 1350,
              "instructor_notes": null
            },
            {
              "id": 1121492,
              "key": "0472aa38-44bd-42f1-bcfc-e2352c00d2f9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "6. **Reference** - Refer to the *Connecting from MySQL Workbench* section here - [Connecting to a DB instance running the MySQL database engine](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToInstance.html)",
              "instructor_notes": ""
            },
            {
              "id": 1121486,
              "key": "7e4df5a6-81dd-47c9-beb4-0568a212ef25",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Step 4. Delete Database Instance\nClean up the resources to avoid recurring charges.\n* Select your newly created database from the **Databases** dashboard\n* From the **Actions** button on the top-right corner, first **Stop**, and then **Delete** your database instance. You need not create a final snapshot or retain automated backups. \n* Verify that you do not have a snapshot or retained automated backup.",
              "instructor_notes": ""
            },
            {
              "id": 1106399,
              "key": "6ef0f6dd-7d04-4378-acd6-26d27e657815",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": ">Would be deleting the database also delete the newly created VPC? Check it out in the VPC service. \n\n",
              "instructor_notes": ""
            },
            {
              "id": 1106397,
              "key": "c95f484b-bab3-4106-ac7f-f70f135b7de1",
              "title": "Create a MySQL database instance using RDS",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c95f484b-bab3-4106-ac7f-f70f135b7de1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Launch MySQL Database",
                "View Your Instance Details",
                "Delete Database Instance"
              ],
              "positive_feedback": "Congratulations. You did Great!",
              "video_feedback": null,
              "description": ""
            }
          ]
        },
        {
          "id": 850128,
          "key": "28362f85-cd90-434e-89c0-bb0c8afdabbd",
          "title": "Why do we need content delivery in the cloud?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "28362f85-cd90-434e-89c0-bb0c8afdabbd",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850147,
              "key": "6c0767f0-1f7f-4a04-9cb2-c65120cbf19a",
              "title": "CloudEng Course1 Lesson3 WhyWeNeedContent V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "iyRVjN6xg0w",
                "china_cdn_id": "iyRVjN6xg0w.mp4"
              }
            },
            {
              "id": 851097,
              "key": "9eff2705-196e-427b-a8fb-31e3e4707cd4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>Content Delivery in the Cloud</h1>\n\nA Content Delivery Network (or CDN) speeds up delivery of your static and dynamic web content by caching content in an Edge Location close to your user base.\n\n<h1>Benefits</h1>\nThe benefits of a CDN includes:\n<ul>\n<li>low latency </li>\n<li>decreased server load</li>\n<li>better user experience</li>\n</ul>",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850129,
          "key": "dc135805-132f-4d18-87c0-f6c951e96ea2",
          "title": "Cloud Front",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "dc135805-132f-4d18-87c0-f6c951e96ea2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850132,
              "key": "87f6ea0b-1990-4603-9dd6-d5621faa5708",
              "title": "CloudEng Course1 Lesson3 CloudFront(PART ONE) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "nmK8dr7XrRg",
                "china_cdn_id": "nmK8dr7XrRg.mp4"
              }
            },
            {
              "id": 851098,
              "key": "3884857b-56f9-4bdc-9e4e-02572e1a0aa1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<h1>Cloud Front</h1>\n\nCloudFront is used as a global content delivery network (CDN). Cloud Front speeds up the delivery of your content through Amazon's worldwide network of mini-data centers called Edge Locations.\n\nCloudFront works with other AWS services, as shown below, as an origin source for your application:\n\n<ul>\n<li>Amazon S3</li>\n<li>Elastic Load Balancing </li>\n<li>Amazon EC2 </li>\n<li>Lambda@Edge </li>\n<li> AWS Shield </li>\n</ul>\n\n<h1>Tips</h1>\n<ul>\n<li>CloudFront is found under the Networking & Content Delivery section on the AWS Management Console.</li>\n<li>Amazon countinously adds new Edge Locations.</li>\n<li>CloudFront ensures that end-user requests are served from the closest edge location.</li>\n<li>CloudFront works with non-AWS origin sources.</li>\n<li>You can use  GeoIP blocking to serve content (or not serve content) to specific countries.</li>\n<li>Cache control headers determine how frequently CloudFront needs to check the origin for an updated version your file.</li>\n<li>The maximum size of a single file that can be delivered through Amazon CloudFront is 20 GB.</li>\n</ul>\n\n",
              "instructor_notes": ""
            },
            {
              "id": 851099,
              "key": "d4649cec-d5eb-48f0-b70c-f33cb4226358",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d4649cec-d5eb-48f0-b70c-f33cb4226358",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What happens if the content is not found in the edge location when a user requests your application?",
                "answers": [
                  {
                    "id": "a1558823936414",
                    "text": "The user is forwarded to the origin source servers",
                    "is_correct": false
                  },
                  {
                    "id": "a1558823949077",
                    "text": "The user receives a 404 Not Found error message",
                    "is_correct": false
                  },
                  {
                    "id": "a1558823950044",
                    "text": "Files are pulled from the origin",
                    "is_correct": true
                  },
                  {
                    "id": "a1558823950849",
                    "text": "Another edge location further away is checked for the content",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 851100,
              "key": "0a2b22bc-a338-4ab2-aa6a-803ce7f559cf",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0a2b22bc-a338-4ab2-aa6a-803ce7f559cf",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What is one reason you'd want to use Cloud Front?",
                "answers": [
                  {
                    "id": "a1558825230917",
                    "text": "Encrypt data in transit",
                    "is_correct": false
                  },
                  {
                    "id": "a1558825247876",
                    "text": "Provide high latency",
                    "is_correct": false
                  },
                  {
                    "id": "a1558825248673",
                    "text": "Stream content efficiently",
                    "is_correct": true
                  },
                  {
                    "id": "a1558825249401",
                    "text": "Throttle web service requests",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 859388,
              "key": "3ab71c4e-61d8-43aa-b77b-f25d213c49e5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n---\n* [Amazon CloudFront Overview](https://aws.amazon.com/cloudfront/)\n* [What is Amazon CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Introduction.html)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 850133,
          "key": "62926219-c90f-4c9e-8a8e-c663cef1eb44",
          "title": "Demo - Cloud Front",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "62926219-c90f-4c9e-8a8e-c663cef1eb44",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850134,
              "key": "205e8893-8021-4449-9301-2506d1177f2a",
              "title": "CloudEng Course1 Lesson3 CloudFront(PART TWO) V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "ST3ZOvVo36s",
                "china_cdn_id": "ST3ZOvVo36s.mp4"
              }
            }
          ]
        },
        {
          "id": 850130,
          "key": "45a99651-950e-47e7-a746-0fc9296b0d5a",
          "title": "Lab - S3 & Cloud Front",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "45a99651-950e-47e7-a746-0fc9296b0d5a",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": {
            "files": [
              {
                "name": "Sample",
                "uri": "https://video.udacity-data.com/topher/2020/December/5fe0ebb0_sample/sample.html"
              }
            ],
            "google_plus_link": null,
            "career_resource_center_link": null,
            "coaching_appointments_link": null,
            "office_hours_link": null,
            "aws_provisioning_link": null
          },
          "atoms": [
            {
              "id": 851484,
              "key": "9b274016-d983-442d-9ed0-7f8599e0c1fa",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# S3 & CloudFront\n---\nIn this hands-on exercise, you will access private S3 bucket content via a Cloud Front distribution. You will also learn that CloudFront, after caching, speeds up the delivery of content to your website.\n\n1. Prerequisites: AWS Account\n2. By the end of this lab, you will be able to:\n * Create and configure a bucket\n * Upload an object to a bucket\n * Create distribution\n\nFollow the exercise instructions described below: \n### Step 1. Create S3 Bucket\n   * From the [AWS Management Console](https://console.aws.amazon.com/) page, select the S3 service.\n   * Use the **Create bucket** wizard to create a bucket with the following details:\n\n<center>\n\n|Field|Value|\n|---|---|\n|Bucket name|Your choice<br>Bucket name must be globally unique|\n| Region |Default|\n|Block all public access|Turn on<br>Block the public access.|\n|Bucket Versioning|Disable|\n|Server-side encryption|Disable|\n</center>\n   * Once the bucket is created, you will be taken to the **Buckets** dashboard. Click on the bucket name to view the details, and upload files and folders.\n",
              "instructor_notes": ""
            },
            {
              "id": 1125195,
              "key": "aaf4bcae-a038-42ef-ac76-1dacd3ce41ad",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/January/5ffdccff_screenshot-2021-01-12-at-6.39.35-pm/screenshot-2021-01-12-at-6.39.35-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/aaf4bcae-a038-42ef-ac76-1dacd3ce41ad",
              "caption": "Click the \"Add files\" to upload a file",
              "alt": "",
              "width": 600,
              "height": 1112,
              "instructor_notes": null
            },
            {
              "id": 1121458,
              "key": "dff63e65-c2aa-4252-9cff-8dbc7d24c894",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Step 2. Upload Object to Bucket\n\n* Once the bucket is open to view its contents, click the **Upload** button to add files/folders.\n\n\n* Click the **Add Files** button, and upload the Sample.html (or any file from your local computer) provided at the bottom of the current page.\n\n\n* Note that the Bucket has not allowed public access, therefore, the `Sample.html` file cannot be accessed via its object URL, such as `https://my-014421265158-bucket.s3.us-east-2.amazonaws.com/Sample.html`. \n",
              "instructor_notes": ""
            },
            {
              "id": 1125198,
              "key": "63f4fdbb-aa60-48f3-a8e7-5a19b66cc03e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": ">**Note** - In the steps above, the object URL will be different in your case. ",
              "instructor_notes": ""
            },
            {
              "id": 1125168,
              "key": "7d0c0add-5326-44b3-ac70-57ef285001f8",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/January/5ffd87f0_screenshot-2021-01-12-at-4.58.18-pm/screenshot-2021-01-12-at-4.58.18-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7d0c0add-5326-44b3-ac70-57ef285001f8",
              "caption": "The figure above shows how to copy the S3 object URL. ",
              "alt": "",
              "width": 700,
              "height": 1344,
              "instructor_notes": null
            },
            {
              "id": 1125169,
              "key": "150e1d46-0c73-4764-86d4-b14d97c980db",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/January/5ffd887c_screenshot-2021-01-12-at-5.00.45-pm/screenshot-2021-01-12-at-5.00.45-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/150e1d46-0c73-4764-86d4-b14d97c980db",
              "caption": "The figure above shows `AccessDenied` error while trying to access the file via its S3 object URL",
              "alt": "",
              "width": 700,
              "height": 566,
              "instructor_notes": null
            },
            {
              "id": 1125171,
              "key": "1d525545-45f1-4f93-b97f-a1b40b42445e",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/January/5ffd9280_screenshot-2021-01-12-at-5.37.25-pm/screenshot-2021-01-12-at-5.37.25-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1d525545-45f1-4f93-b97f-a1b40b42445e",
              "caption": "The figure above shows that the individual object (Sample.html) has no public access. ",
              "alt": "",
              "width": 600,
              "height": 1142,
              "instructor_notes": null
            },
            {
              "id": 1106403,
              "key": "487d775c-ca96-45df-9139-0a94be138480",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n### Step 3. Create CloudFront Distribution\n\n* Select the **CloudFront** service from the **Services** menu at the top left corner of your AWS console.\n\n\n* Start the **Create Distribution** wizard.\n\n\n* Under the **Web** delivery method, click the **Get Started** button, and use the following details to create a distribution:\n\n<center>\n\n<p></p><div class=\"index-module--table-responsive--1zG6k\"><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><table class=\"index-module--table--8j68C index-module--table-striped--3HHC-\">\n<thead>\n<tr>\n<th>Section</th>\n<th>Field</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr><td rowspan=\"5\">Origin Settings</td><td>Origin Domain Name</td><td>Select the S3 bucket that you created in the step above</td></tr>\n<tr><td>Origin Path</td><td>Enter <code>/</code> to indicate the root level</td></tr>\n<tr><td>Restrict Bucket Access</td><td>Yes</td></tr>\n<tr><td>Origin Access Identity</td><td>Create a New Identity<br>(Allow access to the S3 content using CloudFront URL)</td></tr>\n<tr><td>Grant Read Permission on Bucket</td><td>Yes, Update Bucket Policy<br>Automatically updates the bucket access policy in S3<br> to allow CloudFront to access the bucket content</td></tr>\n<tr><td>Default Cache Behavior Settings</td><td>Viewer Protocol Policy</td><td>Redirect HTTP to HTTPS</td></tr>\n</tbody>\n</table>\n</div><p></p></center>\n>In the configuration table above, the **Grant Read Permission on Bucket** says that \"Yes, update access bucket policy automatically to allows the **Origin Access Identity user** access to the bucket content.\" Origin Access Identity user represents the CloudFront service.  The policy is a JSON file that defines the access permissions to the bucket object. \n",
              "instructor_notes": ""
            },
            {
              "id": 1125192,
              "key": "87ebd503-e9c2-45b4-9c51-400e98e65b9c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n* Leave the defaults for the rest of the options. It may take up to 10 minutes for the CloudFront Distribution to get created. Upon successful creation of the CloudFront distribution, the S3 bucket access policy will also get updated automatically, as shown below. ",
              "instructor_notes": ""
            },
            {
              "id": 1125170,
              "key": "566adc22-314b-4747-b26f-75b62b1ef080",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/January/5ffd91f3_screenshot-2021-01-12-at-5.39.24-pm/screenshot-2021-01-12-at-5.39.24-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/566adc22-314b-4747-b26f-75b62b1ef080",
              "caption": "The figure above shows the updated S3 access policy.  We will learn more about the access policies in the upcoming lessons. ",
              "alt": "",
              "width": 700,
              "height": 1484,
              "instructor_notes": null
            },
            {
              "id": 1121374,
              "key": "0a0c7915-004b-4f3f-a666-4bbd32b47538",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "* Once your CloudFront distribution is created, and the status shows as **Deployed**, copy its *Domain Name* (such as, `dgf7z6g067r6d.cloudfront.net`) and append `/Sample.html` before pasting it in a new browser. \n\n\n* For the initial few attempts, your `https://dgf7z6g067r6d.cloudfront.net/Sample.html` may redirect to `https://my-014421265158-bucket.s3.us-east-2.amazonaws.com/Sample.html`, which is why you may still see an `AccessDenied` error. <br><br>\n>**Note** - Remember, as soon as your CloudFront distribution is **Deployed**, it attaches to S3 and starts caching the S3 private pages. Once the caching is complete, the CloudFront domain name URL will stop redirecting to the S3 object URL. CloudFront may take 10-30 minutes (or more) to cache the S3 page, and you will be able to view the webpage, as shown below. ",
              "instructor_notes": ""
            },
            {
              "id": 1125199,
              "key": "af9efb55-450d-493a-87df-49e46f5fc220",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": ">**Note** - In the steps above, the exact domain name and the object URL will be different in your case. ",
              "instructor_notes": ""
            },
            {
              "id": 1121375,
              "key": "aad97852-6cf9-4e6c-a75e-e311e6b72d74",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/January/5ffd89dd_screenshot-2021-01-12-at-5.06.40-pm/screenshot-2021-01-12-at-5.06.40-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/aad97852-6cf9-4e6c-a75e-e311e6b72d74",
              "caption": "Final output at `https://dgf7z6g067r6d.cloudfront.net/Sample.html`. However, at the same time, the `https://my-014421265158-bucket.s3.us-east-2.amazonaws.com/Sample.html` will not work. ",
              "alt": "",
              "width": 700,
              "height": 1496,
              "instructor_notes": null
            },
            {
              "id": 1121460,
              "key": "312d21d3-3f15-4b41-b9d5-b966eea2d2c6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### External Resources\n\n* Good to read - [Restricting access to S3 content by using an Origin Access Identity](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html#private-content-granting-permissions-to-oai)",
              "instructor_notes": ""
            },
            {
              "id": 1106404,
              "key": "495071d6-2d99-4901-b827-99a25cc475ef",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Step 4. Delete Bucket and Distribution\n1. **Delete the CloudFront distribution**\n   * On the **Distributions** dashboard, click on the radio button next to the **Delivery Method** for the distribution. Click **Disable**, and confirm the prompt.<br><br>\n\n   * Once the distribution is disabled, you can delete it by selecting the radio button next to the **Delivery Method** and clicking the **Delete** button.<br><br>\n\n   * You may also need to delete the **Origin Access Identity** users. To do so, you can go to the **Origin Access Identity** service in the CloudFront dashboard. \n",
              "instructor_notes": ""
            },
            {
              "id": 1125190,
              "key": "85e6cf55-7e7a-449c-a764-9534c61eb441",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/January/5ffdcb7a_screenshot-2021-01-12-at-9.46.02-pm/screenshot-2021-01-12-at-9.46.02-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/85e6cf55-7e7a-449c-a764-9534c61eb441",
              "caption": "Delete OAI users",
              "alt": "",
              "width": 600,
              "height": 1302,
              "instructor_notes": null
            },
            {
              "id": 1125188,
              "key": "92d23997-f3e5-42ee-8ea8-960e75794116",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "2. **Delete the S3 bucket**\n    * To delete the S3 bucket, navigate to the S3 service.<br><br>\n    * Select the radio button next to the name of the bucket you want to delete. Note that the bucket you want to delete should be empty before deletion.<br><br>\n    * Click the **Delete** button on the top-right, and confirm the deletion.",
              "instructor_notes": ""
            },
            {
              "id": 859389,
              "key": "58f2f105-06b4-407d-bfc3-4c648a4400fd",
              "title": "Create a S3 bucket with a Cloud Front distribution",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "58f2f105-06b4-407d-bfc3-4c648a4400fd",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create an S3 Bucket",
                "Upload Object to your Bucket",
                "Create CloudFront Distribution",
                "Delete Bucket and Distribution"
              ],
              "positive_feedback": "Amazing Work!",
              "video_feedback": null,
              "description": ""
            }
          ]
        },
        {
          "id": 850131,
          "key": "ab12f158-000d-4fc5-8062-ae2cd058f6a9",
          "title": "Lesson Recap",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ab12f158-000d-4fc5-8062-ae2cd058f6a9",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 850531,
              "key": "8f68c27e-0323-47c3-9d7c-4be8e40aeb8d",
              "title": "CloudEng Course1 Lesson3 Recap",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "VeB590QFc_o",
                "china_cdn_id": "VeB590QFc_o.mp4"
              }
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}