WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.685
Okay. So first, we're going to install

00:00:02.685 --> 00:00:06.120
ansible and we're going to do that in a Jenkins host.

00:00:06.120 --> 00:00:12.210
We're going to do that with a sudo apt install ansible, it's already installed.

00:00:12.210 --> 00:00:18.464
So now we're going to install Boto, pip install boto.

00:00:18.464 --> 00:00:23.879
So let's do sudo pip install boto.

00:00:23.879 --> 00:00:27.515
Great. Okay, that's already installed.

00:00:27.515 --> 00:00:34.280
So next we need to install the Jenkins plugin for CloudBees AWS Credentials plugin,

00:00:34.280 --> 00:00:40.399
which we can get if we go into Manage Jenkins, Manage Plugins,

00:00:40.399 --> 00:00:49.954
and we have the CloudBees AWS Credentials plugin

00:00:49.954 --> 00:00:53.375
which is already installed on the system.

00:00:53.375 --> 00:00:56.990
Great. So now we have to configure

00:00:56.990 --> 00:01:03.740
the AWS credentials in Jenkins so that it can be used in the site of the pipeline.

00:01:03.740 --> 00:01:05.540
So to do that,

00:01:05.540 --> 00:01:07.445
I'm going to come over to Jenkins.

00:01:07.444 --> 00:01:10.594
We're going to go into Credentials,

00:01:10.594 --> 00:01:13.295
we're going to go into Global,

00:01:13.295 --> 00:01:15.905
we're going to click on add credentials,

00:01:15.905 --> 00:01:26.155
and we're going to under the kind select AWS Credentials and we're going to select an ID.

00:01:26.155 --> 00:01:30.814
You will put in your credentials here and we'll click on okay.

00:01:30.814 --> 00:01:37.414
Great. So now we have configured the AWS credentials in Jenkins.

00:01:37.415 --> 00:01:42.920
So now we can map the credentials from Jenkins to the pipeline application.

00:01:42.920 --> 00:01:45.689
So why don't we do this.

00:01:46.579 --> 00:01:53.625
We go into the Jenkins file and you will observe here

00:01:53.625 --> 00:02:00.765
that our first stage we have AWS professionals with credentials,

00:02:00.765 --> 00:02:09.419
and we're mapping the AmazonWebServicesCredentialsBindings, accessKeyVariable.

00:02:09.419 --> 00:02:11.369
Then this is very important,

00:02:11.370 --> 00:02:14.280
so this must match up credentials ID.

00:02:14.280 --> 00:02:16.770
So you could access key variable.

00:02:16.770 --> 00:02:22.159
Now what we're doing is we're writing these into these files so that

00:02:22.159 --> 00:02:27.759
we can allow it to interact with AWS.

00:02:27.759 --> 00:02:31.944
Great. So there's one last thing we need to

00:02:31.944 --> 00:02:38.120
do and that's we need to make sure that we've granted inside of our policy

00:02:38.120 --> 00:02:43.939
the capability to interact with elastic load balancing and then

00:02:43.939 --> 00:02:50.014
we've also granted it CreateServiceLinkedRole task as well.

00:02:50.014 --> 00:02:55.909
So let's go ahead and we're going to go into,

00:02:55.909 --> 00:03:01.379
so inside of Policies go and customize policies,

00:03:01.379 --> 00:03:05.109
and I click on Minimum Security model and here is

00:03:05.110 --> 00:03:11.255
our policy and we can click on that policy and click JSON,

00:03:11.254 --> 00:03:15.169
and then we can input it directly inside of here.

00:03:15.169 --> 00:03:18.559
Okay great. We are good to go.

00:03:18.560 --> 00:03:23.030
So now we need to set up our Private Route53 zone.

00:03:23.030 --> 00:03:29.189
So let's go in to our AWS console and we're using our regular user over it here,

00:03:29.189 --> 00:03:33.859
and then we're going to go into Route53.

00:03:33.860 --> 00:03:41.510
Click on that. We're going to go into hosted zones and then if you click create a zone,

00:03:41.509 --> 00:03:45.379
make sure you select private hosted zone.

00:03:45.379 --> 00:03:49.894
Let's do text.come, create

00:03:49.895 --> 00:03:55.060
and select the region that's appropriate for where we are doing,

00:03:55.060 --> 00:04:02.680
which in this case is US West 2, then click Create.

00:04:03.289 --> 00:04:08.929
Okay, so that's how you create your first zone record.

00:04:08.930 --> 00:04:11.915
Next, we'll go about creating a health check.

00:04:11.914 --> 00:04:13.370
So let's come back here.

00:04:13.370 --> 00:04:15.185
Let's go into health checks.

00:04:15.185 --> 00:04:19.824
I'm going to click create health check and put in test.com,

00:04:19.824 --> 00:04:22.394
and we're going to put it domain name.

00:04:22.394 --> 00:04:24.240
Put in test.com.

00:04:24.240 --> 00:04:32.295
Next, I'll check and we have our new health check.

00:04:32.295 --> 00:04:37.520
Great. Now we're going to go about running a deployment.

00:04:37.519 --> 00:04:42.109
So to do this, we're going to go into our loop here.

00:04:42.110 --> 00:04:45.870
We're going to rerun this entire thing.

00:04:46.660 --> 00:04:52.314
Great. So now you'll also see that we updated Route 53 here.

00:04:52.314 --> 00:04:54.290
So let's go take a look here.

00:04:54.290 --> 00:04:56.165
Back to host zones.

00:04:56.165 --> 00:04:59.870
We're going to click on the one that I created specifically for this.

00:04:59.870 --> 00:05:07.069
Then I can see here value for www as shown in the what we expect it to be,

00:05:07.069 --> 00:05:09.800
which is this nginxblue-load-balancer.

00:05:09.800 --> 00:05:20.425
If we come back and go to EC2 and the right region, I'm running instances.

00:05:20.425 --> 00:05:23.535
We see that it has created two web servers,

00:05:23.535 --> 00:05:28.235
you can see that those were just created based on the time and date stamp.

00:05:28.235 --> 00:05:32.960
Okay, and then we can go into our load balancers

00:05:32.959 --> 00:05:39.245
here and we can see that it just created this load balancer that's running.

00:05:39.245 --> 00:05:44.050
Great. So now we've done our blue deploy,

00:05:44.050 --> 00:05:47.949
let's go back to pipeline.

00:05:51.019 --> 00:05:54.669
We're going to do pipeline deploy.

00:05:56.269 --> 00:06:00.199
These are both just different branches with the repository.

00:06:00.199 --> 00:06:03.604
So it's going to create two brand new EC2 instances.

00:06:03.605 --> 00:06:06.860
Now let's create the instances so we wait for them to come online.

00:06:06.860 --> 00:06:10.040
Now let's proceed to add them to the load balancer.

00:06:10.040 --> 00:06:12.455
Now interchanging rows three.

00:06:12.454 --> 00:06:16.115
Great. It has not completed the last step.

00:06:16.115 --> 00:06:18.129
Let's take a look at what I created.

00:06:18.129 --> 00:06:20.264
Click the Refresh button here,

00:06:20.264 --> 00:06:25.004
I only see our new load balancer much of it was just created,

00:06:25.004 --> 00:06:26.975
and we'll come back here.

00:06:26.975 --> 00:06:33.260
You see we have two additional instances and we'll go on to Route 53.

00:06:33.259 --> 00:06:38.319
We're going to go on to our domain and now we're clicking this,

00:06:38.319 --> 00:06:41.375
and you'll notice that this has been updated.

00:06:41.375 --> 00:06:45.769
So the next question is well how did we do all of these tasks?

00:06:45.769 --> 00:06:52.949
So let's take a look at our Jenkins file first off.

00:06:52.949 --> 00:06:59.185
So our Jenkins file calls ansiblePlaybook and it calls main.yaml,

00:06:59.185 --> 00:07:01.490
uses the inventory file inventory.

00:07:01.490 --> 00:07:04.850
So now let's take a look at domain.yaml.

00:07:04.850 --> 00:07:10.685
Inside domain.yaml, we're including our create instance.

00:07:10.685 --> 00:07:13.589
So let's take a look at what that does.

00:07:16.310 --> 00:07:24.095
So first, we start with sending up an EOB and create our EC2 instance.

00:07:24.095 --> 00:07:27.920
Security groups we wait for it to come online.

00:07:27.920 --> 00:07:30.930
We add them to our EOB,

00:07:33.259 --> 00:07:41.295
and we set our Route 53 with new alias.

00:07:41.295 --> 00:07:43.560
We have this defined,

00:07:43.560 --> 00:07:46.370
so we have a variable here.

00:07:46.370 --> 00:07:49.805
You'll see that this is keyed off of application,

00:07:49.805 --> 00:07:53.675
application is defined in domain.yaml.

00:07:53.675 --> 00:07:56.145
We'll set that as nginxblue.

00:07:56.144 --> 00:07:58.984
We're specifically in the blue branch,

00:07:58.985 --> 00:08:02.830
and that's how it works. Great.

