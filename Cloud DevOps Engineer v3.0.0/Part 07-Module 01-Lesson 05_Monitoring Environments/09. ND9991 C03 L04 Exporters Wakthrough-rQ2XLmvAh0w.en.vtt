WEBVTT
Kind: captions
Language: en

00:00:01.380 --> 00:00:05.319
Here we're looking at the documentation for Prometheus,

00:00:05.319 --> 00:00:08.945
where they have a nice list of exporters that you can choose from.

00:00:08.945 --> 00:00:10.260
I'll highlight a few,

00:00:10.260 --> 00:00:13.795
but as you can see there are quite a few in this list.

00:00:13.795 --> 00:00:16.210
There's a link to this page below the video if

00:00:16.210 --> 00:00:19.425
you'd like to explore more on these exporters.

00:00:19.425 --> 00:00:23.700
Take a look here there's MongoDB exporter.

00:00:23.700 --> 00:00:26.050
This exporter periodically scrapes

00:00:26.050 --> 00:00:30.430
MongoDB server stats and makes them available to Prometheus.

00:00:30.430 --> 00:00:34.470
The same can be done for almost any flavor of database out there.

00:00:34.470 --> 00:00:38.335
Let's take a look at some of the hardware related exporters.

00:00:38.335 --> 00:00:42.790
One that I use often is the node system metric exporter,

00:00:42.790 --> 00:00:44.480
or just the node exporter.

00:00:44.480 --> 00:00:50.030
It provides basic operating system metrics like CPU, disk, memory usage.

00:00:50.030 --> 00:00:53.770
It doesn't have anything to do with NodeJS though.

00:00:53.770 --> 00:00:58.635
There's also the Nginx VTS exporter that I use quite frequently.

00:00:58.635 --> 00:01:02.300
This exporter provides metrics on connections, server zones,

00:01:02.300 --> 00:01:08.640
and upstream requests from the perspective of your load balancer or your Nginx instance.

00:01:09.080 --> 00:01:12.780
There's also the Blackbox exporter.

00:01:12.780 --> 00:01:17.850
This exporter enables probing of HTTP or HTTPS endpoints.

00:01:17.850 --> 00:01:21.980
This one is really useful if you want to watch website uptime, for example.

00:01:21.980 --> 00:01:25.160
Monitoring data isn't just about systems, logs,

00:01:25.160 --> 00:01:27.770
and hardware metrics, it can be drawn

00:01:27.770 --> 00:01:31.010
from the applications we use to develop our software.

00:01:31.010 --> 00:01:35.490
Two of those systems are GitHub and Jira.

00:01:37.720 --> 00:01:42.395
The GitHub exporter provides metrics on repository commits,

00:01:42.395 --> 00:01:45.030
pull requests, and issues.

00:01:47.240 --> 00:01:54.125
The Jira exporter provides metrics on Jira issues and projects.

00:01:54.125 --> 00:01:57.680
Wouldn't it be interesting if you could somehow correlate

00:01:57.680 --> 00:02:01.400
Jira issues and git commits with web server load,

00:02:01.400 --> 00:02:04.505
and begin predicting incidents before they even transpire.

00:02:04.505 --> 00:02:07.350
Crazy stuff at your fingertips.

