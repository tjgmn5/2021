WEBVTT
Kind: captions
Language: en

00:00:01.160 --> 00:00:03.704
In case you need convincing,

00:00:03.704 --> 00:00:06.540
I'm going to give you a few reasons why monitoring is

00:00:06.540 --> 00:00:09.765
not an optional piece of your Cloud development strategy.

00:00:09.765 --> 00:00:11.640
Let's talk about availability.

00:00:11.640 --> 00:00:14.640
Uptime or downtime often translates to dollars,

00:00:14.640 --> 00:00:15.990
one way or the other.

00:00:15.990 --> 00:00:19.320
Downtime will increase drastically without monitoring since

00:00:19.320 --> 00:00:22.940
you're not going to be monitoring that system round the clock manually.

00:00:22.940 --> 00:00:28.350
This downtime will negatively affect revenue or could increase legal costs.

00:00:28.350 --> 00:00:30.330
How about performance?

00:00:30.330 --> 00:00:35.180
Company performance and image often hangs on the reliability of its tech.

00:00:35.180 --> 00:00:39.430
If systems degrade and users can't consume them,

00:00:39.430 --> 00:00:42.200
then their confidence in the system will also degrade,

00:00:42.200 --> 00:00:46.660
which might result in employee turnover or loss of clients.

00:00:46.660 --> 00:00:49.065
Capacity is important too.

00:00:49.065 --> 00:00:52.430
Company or product growth is generally a good thing,

00:00:52.430 --> 00:00:56.570
especially if technology can rise to the demands of its users.

00:00:56.570 --> 00:01:01.160
But when infrastructure is not ready to meet the needs of business on time,

00:01:01.160 --> 00:01:04.945
it can result in loss of revenue or increased cost.

00:01:04.945 --> 00:01:06.990
Let's not forget productivity.

00:01:06.990 --> 00:01:11.795
Development teams who spend less time troubleshooting tend to spend more time developing.

00:01:11.795 --> 00:01:14.239
However, without proper monitoring,

00:01:14.239 --> 00:01:17.270
development teams have no choice but to dive into

00:01:17.270 --> 00:01:20.450
time-consuming troubleshooting affecting feature

00:01:20.450 --> 00:01:23.630
release plans and incurring opportunity costs.

00:01:23.630 --> 00:01:25.325
In the world of monitoring,

00:01:25.325 --> 00:01:28.835
there are reactive approaches and proactive approaches.

00:01:28.835 --> 00:01:34.385
The reactive approach leads us to only consider monitoring data when there's an incident.

00:01:34.385 --> 00:01:36.095
When we think of monitoring,

00:01:36.095 --> 00:01:39.005
normally our thoughts go to debugging and troubleshooting,

00:01:39.005 --> 00:01:42.910
sifting through logs and checking hardware metrics for issues.

00:01:42.910 --> 00:01:45.620
It's important that we have enough information at

00:01:45.620 --> 00:01:49.085
our disposal so that we can resolve those issues quicker.

00:01:49.085 --> 00:01:51.170
The quicker our reaction time,

00:01:51.170 --> 00:01:53.960
the higher the confidence will be in our team.

00:01:53.960 --> 00:01:58.550
Some examples of monitoring data that help our reaction times might

00:01:58.550 --> 00:02:02.870
be real-time CPU memory or disk space meters,

00:02:02.870 --> 00:02:06.530
current health status of servers or resources,

00:02:06.530 --> 00:02:10.070
application logs, and operating system logs.

00:02:10.070 --> 00:02:13.190
These are tools that will help you uncover a mystery faster,

00:02:13.190 --> 00:02:16.055
preserving your clients precious confidence.

00:02:16.055 --> 00:02:19.750
But we're able to do much more than just react.

00:02:19.750 --> 00:02:22.970
When we begin to regard the data generated by monitoring

00:02:22.970 --> 00:02:26.795
systems as metrics and not just real-time data,

00:02:26.795 --> 00:02:29.315
then some important doors open up.

00:02:29.315 --> 00:02:33.350
You see, a metric is simply the result of any metric.

00:02:33.350 --> 00:02:38.150
Metrics can be compared to one another and can reveal trajectory,

00:02:38.150 --> 00:02:40.670
just like you can predict the drive time between

00:02:40.670 --> 00:02:44.490
two cities once you have the average speed and the remaining distance,

00:02:44.490 --> 00:02:50.240
you can also predict impending incidence based on your monitoring data, aka, the metrics.

00:02:50.240 --> 00:02:53.090
Of course, there are a lot more metrics involved in

00:02:53.090 --> 00:02:56.900
a complex information system than a car driving between cities.

00:02:56.900 --> 00:03:00.245
That's where data science and machine learning comes in.

00:03:00.245 --> 00:03:03.050
Both concepts are out of scope for this course,

00:03:03.050 --> 00:03:06.260
but I'd like to at least expose you to a few of

00:03:06.260 --> 00:03:11.940
the benefits to convince you further that proactive monitoring is a necessity.

