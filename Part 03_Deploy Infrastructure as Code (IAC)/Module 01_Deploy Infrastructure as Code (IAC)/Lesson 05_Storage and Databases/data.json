{
  "data": {
    "lesson": {
      "id": 847285,
      "key": "97ed2548-9fe1-40e4-b0da-5085083b5dfa",
      "title": "Storage and Databases ",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Deploy relational database and encryption service for your application.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/97ed2548-9fe1-40e4-b0da-5085083b5dfa/847285/1614345116607/Storage+and+Databases++Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/97ed2548-9fe1-40e4-b0da-5085083b5dfa/847285/1614345111947/Storage+and+Databases++Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 847286,
          "key": "db961a78-4275-47ac-b6b9-32602268bf00",
          "title": "Introduction",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "db961a78-4275-47ac-b6b9-32602268bf00",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 847287,
              "key": "a38b107e-381b-4bbd-9f14-a39888029c4b",
              "title": "ND9991 C02 L05 A01  Intro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "LjitAfe-YEo",
                "china_cdn_id": "LjitAfe-YEo.mp4"
              }
            },
            {
              "id": 849751,
              "key": "9e12a17e-25a1-4137-ad50-0eb832ed7924",
              "title": "Simple Storage Service (S3)",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9e12a17e-25a1-4137-ad50-0eb832ed7924",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "It's perfectly fine to use S3 to store which of the following response options? Choose three.",
                "answers": [
                  {
                    "id": "a1558132400363",
                    "text": "Images/Video files",
                    "is_correct": true
                  },
                  {
                    "id": "a1558132478800",
                    "text": "Configuration files",
                    "is_correct": true
                  },
                  {
                    "id": "a1558132485629",
                    "text": "Files containing credentials",
                    "is_correct": false
                  },
                  {
                    "id": "a1558132493510",
                    "text": "Log files",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 848868,
              "key": "e4759b7c-98db-41a8-9ccb-78cc61256724",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Lesson Objectives\nIn this lesson, you will learn to utilize the following two different types of AWS storage options for a web application architecture:\n* Relation Database Storage (RDS) service \n* Object storage service - Simple Storage Service (S3)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 847289,
          "key": "5b5f2b31-2e07-4e48-8034-39fd7638e344",
          "title": "RDS Databases (Part One)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5b5f2b31-2e07-4e48-8034-39fd7638e344",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1141938,
              "key": "29f54f73-e198-42bc-bfcd-a8329c77d0fa",
              "title": "8a6f787e94fe4dc1b05e2d385f1823ef",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Rkx3rqk3UeQ",
                "china_cdn_id": "Rkx3rqk3UeQ.mp4"
              }
            },
            {
              "id": 850541,
              "key": "7575f5d9-70ec-46b9-94ae-d32e14f806b2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Persisting Data\n* Most applications need their data to persist and not be lost, which requires a database.\n* We don't want a database to be a single point of failure, so we'll use resources that are designed for reliability.  For example, RDS for the database, and S3 for the filestore.\n* Relational Database Service (RDS): AWS service for creating databases.\n\n#### Choosing a database\n* AWS Aurora and MySQL have no additional licensing costs.  Microsoft SQL Server will have additional licensing costs.\n\n\n#### A single RDS Server can host multiple databases\n* Note that you can use a single RDS database that hosts multiple applications, each with different logins and users for those applications.  In other words, you don’t need to create a separate RDS service for each application.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 849752,
              "key": "49bb89be-2bb3-432b-8211-6efcd786bba4",
              "title": "Eliminating Single point of failure",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "49bb89be-2bb3-432b-8211-6efcd786bba4",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "If I wanted to store information from my app and make sure it doesn't create a single point of failure for my application, I'd choose...",
                "answers": [
                  {
                    "id": "a1558132825294",
                    "text": "Multi-AZ RDS Database",
                    "is_correct": false
                  },
                  {
                    "id": "a1558132888273",
                    "text": "Database on EC2 with replicas in another AZ",
                    "is_correct": false
                  },
                  {
                    "id": "a1558132945877",
                    "text": "DynamoDB Service",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 847337,
          "key": "82c6eb1f-fa11-4aa7-9e88-fe1e0ee527b1",
          "title": "RDS Databases (Part Two)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "82c6eb1f-fa11-4aa7-9e88-fe1e0ee527b1",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1141939,
              "key": "5fa04790-f277-41c7-851c-5590d2332779",
              "title": "32cba13c6fa84a35b865ca1883b92b73-1613673204354",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "fQDNjalfzDA",
                "china_cdn_id": "fQDNjalfzDA.mp4"
              }
            },
            {
              "id": 850543,
              "key": "df93063f-80fd-4f79-9223-1dec91849648",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Connectivity\n\n* Subnet groups are needed for deploying in multiple AZs.  \n* We want to place our RDS in more than one Availability Zone (data center). We can place the RDS in two AZs  to eliminate single point of failure and to have high availability.  \n* We created 4 subnets (2 private and 2 public), so the RDS can potentially be duplicated in all four subnets.  \n* However, keep in mind that we usually prefer to put databases in a private subnet, for security.  There may be use cases where you put a database in a public subnet but generally put it in the private subnets.\n\n#### Database Accessibility\n\nUsually, don't make a database public.\n\n* We'll choose \"No\" for public accessibility\" to keep a database private.  \n* We'd normally use a private IP address to access a database.\n\n#### VPC Security Groups\n* **Default** means every resource in the VPC can talk to any other resource that is within that same VPC.  We'll keep this default, to allow resources in the VPC to reach the database.\n\n#### Encryption\n* We can use encryption for sensitive production workloads.  We can disable encryption for our database here.\n\n#### RDS Running cost notice\n* Be sure to **delete any RDS databases** that you don’t need once you are done practicing because it can be very expensive if you forget it and leave it running for a while!",
              "instructor_notes": ""
            },
            {
              "id": 1141941,
              "key": "c12a0228-065c-4545-9105-b942d07ce833",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<center>\n**See the detailed steps on the next page.**\n</center>",
              "instructor_notes": ""
            },
            {
              "id": 849753,
              "key": "068a86b8-8fa6-4998-8ccc-e44df301ec9e",
              "title": "DB Access",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "068a86b8-8fa6-4998-8ccc-e44df301ec9e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Your database can only be accessed from other resources that have the appropriate ____ assigned to them. ",
                "answers": [
                  {
                    "id": "a1558133320157",
                    "text": "Subnet",
                    "is_correct": false
                  },
                  {
                    "id": "a1558133373771",
                    "text": "Security Group",
                    "is_correct": true
                  },
                  {
                    "id": "a1558133378951",
                    "text": "Access port",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1137647,
          "key": "cc7364bf-7d99-4cdd-9f3b-c028907f0a84",
          "title": "RDS - Create Aurora database",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "cc7364bf-7d99-4cdd-9f3b-c028907f0a84",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1137652,
              "key": "97786379-50db-4cf8-b3ae-22b8eccac09a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "AWS projects Aurora database service as the most suitable for enterprise-level database requirements. It is a MySQL- and PostgreSQL-compatible enterprise-class database, According to AWS:\n\n> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\" target=\"_blank\">Amazon Aurora</a> supports up to 64TB of auto-scaling storage capacity, 6-way replication across three availability zones, and 15 low-latency read replicas.  \n>",
              "instructor_notes": ""
            },
            {
              "id": 1137648,
              "key": "b25c3273-51e8-465f-b7b2-8e5c7b859345",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Follow the steps below to create an Aurora database.\n\n### A. RDS Dashboard\n\nNavigate to the <a href=\"https://console.aws.amazon.com/rds/home\" target=\"_blank\">RDS dashboard</a>. \nIt shows the database-resources summary, such as the count of database instances, the health of the database service, reserved instances, snapshots. You can also view the portion of the allocated storage. You can launch the **Create database** wizard from here.",
              "instructor_notes": ""
            },
            {
              "id": 1137655,
              "key": "1821b9e7-a1aa-41d5-9cff-4178bedf8e21",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2020/November/5fbe80f9_screenshot-2020-11-25-at-8.43.57-pm/screenshot-2020-11-25-at-8.43.57-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1821b9e7-a1aa-41d5-9cff-4178bedf8e21",
              "caption": "Snapshot: RDS dashboard",
              "alt": "",
              "width": 700,
              "height": 1454,
              "instructor_notes": null
            },
            {
              "id": 1137650,
              "key": "6fca9a10-66bc-48aa-8bff-bc098276ee8f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### B. Create a Database\nOnce you launch the **Create database** wizard, you will be prompted with the following configuration details:\n\n#### 1. Database creation method\n\nAWS provides two options to choose from:\n\n* **Standard create** - You have set all of the configuration options, including ones for availability, security, backups, and maintenance.\n\n\n* **Easy create** - You use the industry best-practice configurations. All configuration options, except the Encryption and VPC details, can be changed after the database is created.\n\nChoose the **Standard create** option.",
              "instructor_notes": ""
            },
            {
              "id": 1137656,
              "key": "b466e1e9-73e5-4b1b-bf17-8b3d1d062706",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d1bf3_screenshot-2021-02-17-at-6.32.23-pm/screenshot-2021-02-17-at-6.32.23-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b466e1e9-73e5-4b1b-bf17-8b3d1d062706",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 1524,
              "instructor_notes": null
            },
            {
              "id": 1137673,
              "key": "517d913f-6b60-45f8-86a1-b8b6c20ac4fa",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### 2. Engine options\n\n* Choose Aurora with MySQL compatibility. \n* Select the *Provisioned* capacity and a default version.",
              "instructor_notes": ""
            },
            {
              "id": 1137658,
              "key": "ceef912e-fed7-481c-b5b6-4f2051423741",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d1a99_screenshot-2021-02-17-at-6.32.40-pm/screenshot-2021-02-17-at-6.32.40-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/ceef912e-fed7-481c-b5b6-4f2051423741",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 1210,
              "instructor_notes": null
            },
            {
              "id": 1137651,
              "key": "fd83340a-9bb5-47b6-aff7-6f46c9c88b34",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### 3. Templates\n\n* Use either the **RDS Free Tier **or **Dev/Test **template. On free-tier resources, you can develop and test applications to gain hands-on experience with Amazon RDS.\n\n#### 4. Settings\n* Use the following values:\n\n<center>\n\n|**Field**|**Value**|\n|---|---|\n|DB cluster identifier|udacity-demo-db|\n|Credentials Settings|Provide a username and password of your choice|\n</center>\n* The password can either be auto-generated or manually created. Take note of this password, as it is useful for future steps. ",
              "instructor_notes": ""
            },
            {
              "id": 1137661,
              "key": "b85d8848-eeb7-4665-8324-514395d07563",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d1ac8_screenshot-2021-02-17-at-6.34.48-pm/screenshot-2021-02-17-at-6.34.48-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b85d8848-eeb7-4665-8324-514395d07563",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 1362,
              "instructor_notes": null
            },
            {
              "id": 1137663,
              "key": "688370c4-fba1-4e84-aafe-cd219125f36f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### 5. DB instance size \n\n* Select the burstable classes (includes t classes).\n* Include previous generation classes.\n* Choose `db.t2.small` from the dropdown menu.\n\n#### 6. Availability & durability \n* For production databases, use multiple AZs for reliability.  If one AZ fails, the other one will still be available. I will create an Aurora Replica or Reader node in a different AZ",
              "instructor_notes": ""
            },
            {
              "id": 1137662,
              "key": "4d90813d-77be-4c76-ab75-594f413148e7",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d1bd8_screenshot-2021-02-17-at-6.33.19-pm/screenshot-2021-02-17-at-6.33.19-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/4d90813d-77be-4c76-ab75-594f413148e7",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 1170,
              "instructor_notes": null
            },
            {
              "id": 1137664,
              "key": "bb98d41f-cd4e-453d-bc3b-eff8cc5ec957",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### 7. Connectivity\n* Use the following details:\n\n<center>\n\n|**Field**|**Value**|\n|---|---|\n|Virtual private cloud (VPC)|Choose the one available in your account|\n|Subnet group|Create a new subnet group (first-time)|\n|Public. access|No|\n|VPC security group|Choose existing default|\n<center>\n---",
              "instructor_notes": ""
            },
            {
              "id": 1137665,
              "key": "9df09d88-02cc-4482-807c-55a5c043dc6f",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d1b44_screenshot-2021-02-17-at-6.43.15-pm/screenshot-2021-02-17-at-6.43.15-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/9df09d88-02cc-4482-807c-55a5c043dc6f",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 1668,
              "instructor_notes": null
            },
            {
              "id": 1137666,
              "key": "e08e4747-83fd-4ad8-b071-bd1c97aaee36",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### 8. Additional configuration\n* Use the following details:\n\n<center>\n\n|**Subsection**|**Field**|**Value**|\n|---|---|---|\n||Database options | Default\n|Backup | Backup retention period | 1 day (default)|\n|Encryption|Enable encryption|No|\n|Backtrack|Enable Backtrack|No|\n|Monitoring|Enable Enhanced monitoring|Yes|\n|Log exports|None||\n|Maintenance|Enable auto minor version upgrade|Yes|\n||Maintenance window|No preference|\n|Deletion protection|Enable deletion protection|Yes|\n</center>\n---",
              "instructor_notes": ""
            },
            {
              "id": 1137667,
              "key": "78bd9cce-d3fa-4cd1-92ad-e2cf63f52cbd",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d1b93_screenshot-2021-02-17-at-6.46.11-pm/screenshot-2021-02-17-at-6.46.11-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/78bd9cce-d3fa-4cd1-92ad-e2cf63f52cbd",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 450,
              "instructor_notes": null
            },
            {
              "id": 1137668,
              "key": "93e505dd-4ffc-4558-b027-b7a361a96362",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d1b2c_screenshot-2021-02-17-at-6.44.58-pm/screenshot-2021-02-17-at-6.44.58-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/93e505dd-4ffc-4558-b027-b7a361a96362",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 504,
              "instructor_notes": null
            },
            {
              "id": 1137670,
              "key": "fd692d8e-d0bf-4a01-a0ae-06ac35f1ae9d",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d1b12_screenshot-2021-02-17-at-6.47.26-pm/screenshot-2021-02-17-at-6.47.26-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/fd692d8e-d0bf-4a01-a0ae-06ac35f1ae9d",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 814,
              "instructor_notes": null
            },
            {
              "id": 1137671,
              "key": "351b06bc-697e-4b40-9ab9-5d843e356cdb",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d1af2_screenshot-2021-02-17-at-6.47.48-pm/screenshot-2021-02-17-at-6.47.48-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/351b06bc-697e-4b40-9ab9-5d843e356cdb",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 548,
              "instructor_notes": null
            },
            {
              "id": 1137672,
              "key": "e132fa8f-ffd5-433b-9fb0-f62ee1fb5d9e",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d1b7f_screenshot-2021-02-17-at-6.48.31-pm/screenshot-2021-02-17-at-6.48.31-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/e132fa8f-ffd5-433b-9fb0-f62ee1fb5d9e",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 256,
              "instructor_notes": null
            },
            {
              "id": 1137675,
              "key": "ccf40bfc-15cf-4fcf-8013-ae017faaf189",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### 9. Success message\n* You will be taken back to the dashboard, where you can see the details of the newly created database. ",
              "instructor_notes": ""
            },
            {
              "id": 1137674,
              "key": "05058c94-2dd7-4f67-9cf5-1e3fa0469a90",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602d2bbb_screenshot-2021-02-17-at-8.14.00-pm/screenshot-2021-02-17-at-8.14.00-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/05058c94-2dd7-4f67-9cf5-1e3fa0469a90",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 1058,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 847342,
          "key": "c9d70060-7823-4e06-a7fb-575c5a7a80e8",
          "title": "RDS Database (Part Three)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c9d70060-7823-4e06-a7fb-575c5a7a80e8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 847343,
              "key": "b9f11599-7de4-4fc3-b46f-a8390c8383a7",
              "title": "ND9991 C02 L05 A02.3 RDS Databases",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "cVKSN9UEfK4",
                "china_cdn_id": "cVKSN9UEfK4.mp4"
              }
            },
            {
              "id": 847610,
              "key": "74f92a4e-bc70-4e4f-bb63-73e2ad93b388",
              "title": "Databases",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "74f92a4e-bc70-4e4f-bb63-73e2ad93b388",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "When should your database have a read replica?",
                "answers": [
                  {
                    "id": "a1557528821883",
                    "text": "When you want to allow more transactions per second",
                    "is_correct": false
                  },
                  {
                    "id": "a1557528826737",
                    "text": "When you want to accommodate statistical reporting and other read-only queries",
                    "is_correct": true
                  },
                  {
                    "id": "a1557528827485",
                    "text": "When you want to eliminate single points of failure",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 847291,
          "key": "54cfc803-0ccb-4ad0-9927-e98377534a8a",
          "title": "RDS Database (Part Four)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "54cfc803-0ccb-4ad0-9927-e98377534a8a",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 847292,
              "key": "0c1ffdd4-e1a7-4701-8cd7-7f07f0069317",
              "title": "ND9991 C02 L05 A03.1  S3",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "BkYGG3vMT9M",
                "china_cdn_id": "BkYGG3vMT9M.mp4"
              }
            },
            {
              "id": 850545,
              "key": "dedb50e3-468a-42d0-be73-60f652d362b3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Using CloudFormation\n* Note that since setting up a database is usually a one-time event, you can just use the console (point and click) to create the database server instead of writing CloudFormation code.  Using CloudFormation is still an option if you choose.\n\n#### CloudFormation retention policy\n* You'll want your data to persist even if your stack of resources is updated or deleted.\n* [Retention Policy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html): keeps a service even if the entire stack of infrastructure is marked for removal.  In CloudFormation, the syntax is `DeletionPolicy: retain`.  This is very useful to assign to your data storage (database, file storage), to make sure that your data is saved even when the stack is updated or deleted.\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 847344,
          "key": "2e08612a-07ba-4ef6-b1fb-a62d61c79b19",
          "title": "S3 (Part One)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2e08612a-07ba-4ef6-b1fb-a62d61c79b19",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 847349,
              "key": "3c594b9c-db31-4dde-b2e3-76fe3128dc74",
              "title": "ND9991 C02 L05 A03.2  S3",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "MOUEt0QOnJk",
                "china_cdn_id": "MOUEt0QOnJk.mp4"
              }
            },
            {
              "id": 850546,
              "key": "aa5398d1-f4a2-4e75-b9b5-b8b59f6d8472",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### When to use Filestores\n* Use filestores instead of databases for large files, such as videos and text documents.\n* Configuration files and sensitive encrypted data are best stored in specific filestores rather than inside the servers.   Autoscaling groups may create or destroy servers, so keep data that you want to persist in separate resources such as a filestore.",
              "instructor_notes": ""
            },
            {
              "id": 849754,
              "key": "72b7b2e3-d6a3-4fbf-bc93-1f623b886dd1",
              "title": "Best practices ",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "72b7b2e3-d6a3-4fbf-bc93-1f623b886dd1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Knowing that the server can be discarded by the auto-scaling group, which of these files can I safely place in it anyway? (Pick three below.)",
                "answers": [
                  {
                    "id": "a1558133582822",
                    "text": "Intermediate steps generated by a build process",
                    "is_correct": true
                  },
                  {
                    "id": "a1558133688409",
                    "text": "temporary calculations leading to a result",
                    "is_correct": true
                  },
                  {
                    "id": "a1558133729101",
                    "text": "Log files",
                    "is_correct": false
                  },
                  {
                    "id": "a1558133739119",
                    "text": "test files",
                    "is_correct": true
                  },
                  {
                    "id": "a1558133748447",
                    "text": "Audit files",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 847345,
          "key": "607f38c0-5279-42dc-9667-93ee3073f879",
          "title": "S3 (Part Two)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "607f38c0-5279-42dc-9667-93ee3073f879",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1141940,
              "key": "b6650557-2458-4b6e-9ea3-27580fe5eced",
              "title": "5624571664e64208870853c162ddbb77",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "g0ML3JvJ88c",
                "china_cdn_id": "g0ML3JvJ88c.mp4"
              }
            },
            {
              "id": 848870,
              "key": "478bbe50-e2d6-40ae-b63f-42bda68bec0c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### S3 bucket\n* Choose a DNS compliant name for the S3 bucket.\n\n#### Command line arguments\n```\naws s3 ls <link to S3 bucket>\n```\nThis line above lists files in the S3 bucket.\n\n```\naws s3 cp <file name> <link to S3 bucket>  \n```\nThis line above copies a file from your local machine to the S3 bucket.\n\n#### Versioning\n* You can keep past versions of your S3 bucket, which means that deleted files will still exist in prior versions of your S3 bucket.\n",
              "instructor_notes": ""
            },
            {
              "id": 847612,
              "key": "2066dd1d-0bca-48bc-8b45-27477cd064f4",
              "title": "S3 Storage",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2066dd1d-0bca-48bc-8b45-27477cd064f4",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "If it was possible to write data in realtime to S3, would it be a good practice to do so?",
                "answers": [
                  {
                    "id": "a1557529235013",
                    "text": "Yes",
                    "is_correct": false
                  },
                  {
                    "id": "a1557529273919",
                    "text": "No",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 847295,
          "key": "11a88973-37dc-43e3-aeae-ca514d804ccd",
          "title": "Key Points",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "11a88973-37dc-43e3-aeae-ca514d804ccd",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 847296,
              "key": "2c39e31f-0484-4068-9f53-adac499ca11b",
              "title": "ND9991 C02 L05 A04 Keypoints",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "bZY_HW0mrc0",
                "china_cdn_id": "bZY_HW0mrc0.mp4"
              }
            },
            {
              "id": 850548,
              "key": "d6a257e0-1939-482b-a6d6-b628ef6102a2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Key Points\n* S3 can be used to store your config files, media or log files.\n* Your servers don't need credentials to access S3 provided they have a role assigned.\n* We recommend you choose RDS as opposed to installing a database in your own servers that you have to manage and back up yourself.",
              "instructor_notes": ""
            },
            {
              "id": 849755,
              "key": "fe7861ed-63cb-47c7-8a7f-9b892b3c0cf0",
              "title": "AWS Services",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "fe7861ed-63cb-47c7-8a7f-9b892b3c0cf0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Can I replace most AWS Services with my own?",
                "answers": [
                  {
                    "id": "a1558133924851",
                    "text": "Yes",
                    "is_correct": true
                  },
                  {
                    "id": "a1558133952175",
                    "text": "No",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1137872,
          "key": "86f65b84-7b5f-497e-8ae5-e988d3268126",
          "title": "Exercises",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "86f65b84-7b5f-497e-8ae5-e988d3268126",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": {
            "files": [],
            "google_plus_link": null,
            "career_resource_center_link": null,
            "coaching_appointments_link": null,
            "office_hours_link": null,
            "aws_provisioning_link": null
          },
          "atoms": [
            {
              "id": 1137882,
              "key": "db7190c2-d8dd-43f1-b643-0d9ec5b39156",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Prerequisite\nUse the existing stack's resources, such as VPC, Subnets, and Security groups, that you have already created in your previous lessons. ",
              "instructor_notes": ""
            },
            {
              "id": 1137883,
              "key": "0b9cf596-8068-43c6-b748-e2eadb8f5d62",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602e2b28_screenshot-2021-02-18-at-2.23.43-pm/screenshot-2021-02-18-at-2.23.43-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/0b9cf596-8068-43c6-b748-e2eadb8f5d62",
              "caption": "Use the existing resources for the current exercises",
              "alt": "",
              "width": 600,
              "height": 370,
              "instructor_notes": null
            },
            {
              "id": 1137885,
              "key": "f6ffd18e-34b4-4517-bf1a-5fb760329828",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Exercise 1",
              "instructor_notes": ""
            },
            {
              "id": 1137873,
              "key": "d530429f-ae0f-4434-a44f-3e36efa5461e",
              "title": "Deploy a MySQL database",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d530429f-ae0f-4434-a44f-3e36efa5461e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "On the EC2 Console, create a security group that you'll associate with EC2 instances and RDS",
                "Using CloudFormation, create a script that uses your security group and creates an RDS MySQL DB"
              ],
              "positive_feedback": "Databases are key in today's infrastructure deployments. They are the cornerstone of most software applications, so knowing how to deploy and secure them in the cloud will set you apart from the crowd!",
              "video_feedback": null,
              "description": "Create a CloudFormation script that deploys a MySQL DB with an associated security group."
            },
            {
              "id": 1137879,
              "key": "3fba00a6-48a5-47ed-976c-73b1e9883bc3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Hint\n\n* Use the starter code as shown in the snapshot below, and refer to the AWS documentation, <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-vpcsecuritygroups\" target=\"_blank\">AWS::RDS::DBInstance</a> and <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnet-group.html\" target=\"_blank\">AWS::RDS::DBSubnetGroup</a>, for choosing the right set of properties.",
              "instructor_notes": ""
            },
            {
              "id": 1137880,
              "key": "a4a508eb-aeda-4408-b9c2-5068016272ed",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2021/February/602e2574_screenshot-2021-02-18-at-1.55.43-pm/screenshot-2021-02-18-at-1.55.43-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/a4a508eb-aeda-4408-b9c2-5068016272ed",
              "caption": "Template starter code",
              "alt": "",
              "width": 500,
              "height": 277,
              "instructor_notes": null
            },
            {
              "id": 1137881,
              "key": "d4b31179-4e06-4d9e-b16e-1e7308a51c09",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Bonus Steps\n * Export a few resources, such as private Subnet IDs, from your previous stack. Then only you can cross-reference the resources from another stack, such as using:\n```yml\nFn::ImportValue: <Exported_value>\n```\n * Use parameters from a separate file to make your template script reusable. In your new template file, use the substitution function, `!Sub \"${parameter}` to refer to any parameter variable. ",
              "instructor_notes": ""
            },
            {
              "id": 1137884,
              "key": "8764876f-08af-4b50-bd74-a9eb46a5a750",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Solution\n<div id=\"spoiler_1\" style=\"display:none\">\nWe strongly recommend you solve the exercise on your own. However, to create a database in CloudFormation, you'll need \n* A Subnet group created, a Security Group that will control access in and out of your database.\n* A user name and a password that will serve as the master for this db server. These should be the parameters in your script.\n* You'll also need subnets, ideally 2.\n\n#### Best Practice\n* Add DeletionPolicy and set it to Retain at the bottom of your DB Creation script. This way you don't lose your database if you accidentally delete your stack.\n*(Keep this in mind if you indeed intend to delete this DB when done practicing)*\n\n#### <font color=\"green\">Download the solution files, and run the command below:</font>\n```bash\naws cloudformation create-stack  --stack-name RDSstack --region us-west-2 --template-body file://RDSTemplate.yml --parameters file://RDSparameters.json --capabilities \"CAPABILITY_IAM\" \"CAPABILITY_NAMED_IAM\" \n```\nDon't forget to change the region, security groups, and subnet IDs as applicable to you. The solution files are available in this <a href=\"https://github.com/udacity/nd9991-c2-Infrastructure-as-Code-v1-Exercises_Solution\" target=\"_blank\">GitHub repository</a>. Refer to the following files:\n* RDSparameters.json\n* RDSTemplate.yml\n</div>\n<button type=\"button\" id=\"myButton1\" onclick=\"if(document.getElementById('spoiler_1') .style.display=='none') {document.getElementById('spoiler_1') .style.display=''}else{document.getElementById('spoiler_1') .style.display='none'}if (document.getElementById('myButton1').innerHTML=='Show Solution') {document.getElementById('myButton1').innerHTML='Hide Solution';}else{document.getElementById('myButton1').innerHTML = 'Show Solution';}\">Show Solution</button>",
              "instructor_notes": ""
            },
            {
              "id": 1137886,
              "key": "29809009-2dbb-4cbd-b9c2-d247aaa81923",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "---\n## Exercise 2",
              "instructor_notes": ""
            },
            {
              "id": 1137874,
              "key": "83ff3307-01c0-4d21-a520-28ff7fd43b54",
              "title": "Get familiar with Bucket policies",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "83ff3307-01c0-4d21-a520-28ff7fd43b54",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "In the S3 web console, create a bucket and enable static web hosting",
                "Create an index.html (or use any sample file) and upload it to your bucket",
                "Using the AWS CLI Tool and your text editor, create a bucket policy to enable public access to it (Hint: Use the AWS Documentation )",
                "Update the policy to restrict access only to your own IP address"
              ],
              "positive_feedback": "File Storage will help you manage config files, log files and other data related to your applications. \nGetting familiar with bucket policies will help you secure this data!",
              "video_feedback": null,
              "description": ""
            },
            {
              "id": 1137875,
              "key": "77cef622-1950-44a4-8a8b-5ae57ff024bf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Solution\n<div id=\"spoiler_2\" style=\"display:none\">\nAgain, we strongly recommend you solve the exercise using AWS Documentation. If stuck, you may see the solution available in this <a href=\"https://github.com/udacity/nd9991-c2-Infrastructure-as-Code-v1-Exercises_Solution\" target=\"_blank\">GitHub repository</a>\n* The **IP Restricted S3 Bucket Solution.txt** contains the description\n* The **ipbucket.json** is an example policy (JSON code)\n</div>\n<button type=\"button\" id=\"myButton1\" onclick=\"if(document.getElementById('spoiler_2') .style.display=='none') {document.getElementById('spoiler_2') .style.display=''}else{document.getElementById('spoiler_2') .style.display='none'}if (document.getElementById('myButton1').innerHTML=='Show Solution') {document.getElementById('myButton1').innerHTML='Hide Solution';}else{document.getElementById('myButton1').innerHTML = 'Show Solution';}\">Show Solution</button>\n\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 847297,
          "key": "350a5ef6-8c4f-4067-82ab-a1175b6da70c",
          "title": "Conclusion",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "350a5ef6-8c4f-4067-82ab-a1175b6da70c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 847298,
              "key": "1ef2d01d-7f8e-4eea-903f-84602e2463a3",
              "title": "ND9991 C02 L05 A05 Outro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "YFJFpw6Rcfc",
                "china_cdn_id": "YFJFpw6Rcfc.mp4"
              }
            },
            {
              "id": 971394,
              "key": "a45f7967-a8bf-45b8-9294-a55f155bbc7e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\nAs this last lesson comes to an end, now you must be able to employ the following storage options:\n* Relation Database Storage (RDS) service \n* Object storage service - Simple Storage Service (S3)\n\n### Recommended best practices for S3 Storage\n* Remember to keep S3 as private as possible, never “Open to the world”\n\n*  If you need to share files publicly, use expiring pre-signed URLs as recommended\n\n* If your web application captures incoming files, such as PDFs or Photos, capture those to local, temporary storage first, --which is really fast -- and then move the data to S3\n\n* Finally, when creating IAM Roles, be sure to limit access to a specific bucket and not all of them!.\n\n",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}