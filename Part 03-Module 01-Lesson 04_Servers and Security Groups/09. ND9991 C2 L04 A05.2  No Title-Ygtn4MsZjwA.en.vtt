WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.540
Since we're already talking about the load balancer,

00:00:03.540 --> 00:00:08.820
let's go ahead and add the necessary code to support a load balancer in our script.

00:00:08.820 --> 00:00:14.200
But before we do, let's take a look at the graphic one more time.

00:00:15.080 --> 00:00:20.295
This is the component that we're adding now, the load balancer.

00:00:20.295 --> 00:00:25.770
We have our web applications that are running in private subnets.

00:00:25.770 --> 00:00:30.110
Now, we're going to deploy the load balancer inside our BBC.

00:00:30.110 --> 00:00:34.730
So it doesn't matter that I have an application running in the private subnets,

00:00:34.730 --> 00:00:37.490
because everything in the BBC we already said that there's

00:00:37.490 --> 00:00:41.750
a route that permits traffic and all directions within the BBC.

00:00:41.750 --> 00:00:43.705
So as long as we do that, that's fine.

00:00:43.705 --> 00:00:47.539
However, the load balancer is going to be on the public side,

00:00:47.539 --> 00:00:50.900
meaning that the load balancer itself is going to be

00:00:50.900 --> 00:00:55.620
visible from the outside world which is what we want in this case.

00:01:03.170 --> 00:01:06.610
We'll go back to our reference.

00:01:09.350 --> 00:01:13.750
I need to remember to add the target group we removed from the scaling group.

00:01:13.750 --> 00:01:18.190
So it's probably going to update as soon as we take care of that.

00:01:18.190 --> 00:01:23.145
Now, we're going to add the necessary components for the load balancer,

00:01:23.145 --> 00:01:25.170
which include a target group,

00:01:25.170 --> 00:01:30.160
a listener and some other details which we're going to go over slowly in a second.

00:01:30.160 --> 00:01:34.610
Let me first copy this content to our file.

00:01:43.040 --> 00:01:48.720
I'll hit copy and I'll go to our document.

00:01:48.720 --> 00:01:51.220
I'll hit paste.

00:01:51.590 --> 00:01:56.010
Let's make sure the YAML is properly formatted.

00:02:00.010 --> 00:02:03.300
This looks good.

00:02:04.550 --> 00:02:08.360
I'll run an update first to make sure everything's fine.

00:02:08.360 --> 00:02:13.620
Then, we're going to explain each one of the concepts that we just introduced.

00:02:13.650 --> 00:02:17.420
Okay, it's running now, so let's go.

00:02:17.630 --> 00:02:20.325
Starting from the bottom here,

00:02:20.325 --> 00:02:23.240
you see we have something known as a targeted group which was

00:02:23.240 --> 00:02:26.420
a property of the auto-scaling group.

00:02:26.420 --> 00:02:29.540
Let me expand this window a little bit better.

00:02:34.670 --> 00:02:39.620
The main components that you see here is what I call a health check.

00:02:39.620 --> 00:02:42.860
What this is going to do is is going to go to

00:02:42.860 --> 00:02:46.870
port 8080 of the instances of the auto-scaling group.

00:02:46.870 --> 00:02:50.250
It's going to check for an HTTP response.

00:02:50.250 --> 00:02:54.285
Usually, HTTP code 200 means everything is okay,

00:02:54.285 --> 00:02:56.640
so this is the default behavior here.

00:02:56.640 --> 00:02:59.480
The path that it's going to check is

00:02:59.480 --> 00:03:04.400
the slash or whatever is on the main page of that web server.

00:03:04.400 --> 00:03:07.115
So what we're saying here is if we

00:03:07.115 --> 00:03:10.640
reach for this machine and we actually get a web page and everything is fine,

00:03:10.640 --> 00:03:15.500
so the load balancer will start passing user requests into this machine.

00:03:15.500 --> 00:03:18.165
If that's not the case, the load balancer,

00:03:18.165 --> 00:03:23.325
because of this criteria will declare that service unhealthy,

00:03:23.325 --> 00:03:25.100
and then the auto-scaling we'll take it from there,

00:03:25.100 --> 00:03:27.490
and eliminate it and respond a new one.

00:03:27.490 --> 00:03:29.790
Now, when and how does this happen?

00:03:29.790 --> 00:03:33.645
That's what all the numbers that you see on the screen, that's what they mean.

00:03:33.645 --> 00:03:37.920
For example, unhealthy count you see is set to five.

00:03:37.920 --> 00:03:42.770
What that means is if I retry or if the load balancer

00:03:42.770 --> 00:03:48.095
retries five times and then does not get an HTTP 200 code,

00:03:48.095 --> 00:03:50.225
saying that everything is okay,

00:03:50.225 --> 00:03:52.360
it will declare it unhealthy.

00:03:52.360 --> 00:03:57.210
That happens in an interval set to 10 seconds.

00:03:58.540 --> 00:04:01.880
Now, timeout is set to eight seconds.

00:04:01.880 --> 00:04:04.940
A timeout is when we send a request to

00:04:04.940 --> 00:04:10.280
a web server and we don't get a yes or no or are you there.

00:04:10.280 --> 00:04:16.220
So in that case, in eight seconds it will be consider an unhealthy response.

00:04:16.220 --> 00:04:20.255
Now, for healthy, we have a little smaller threshold.

00:04:20.255 --> 00:04:22.320
We just have two, that means that,

00:04:22.320 --> 00:04:26.230
if you get two valid responses from a server,

00:04:26.230 --> 00:04:29.585
each one separated by the interval which is ten seconds,

00:04:29.585 --> 00:04:32.240
then they will be declared healthy and will start receiving

00:04:32.240 --> 00:04:40.420
traffic and of course the BBC ID of where this resource is to be created.

00:04:42.680 --> 00:04:47.330
Now, this application load balancer requires obviously

00:04:47.330 --> 00:04:52.205
the listener that is going to send traffic to that target group that we talked about,

00:04:52.205 --> 00:04:55.500
and it needs a path to listen to.

00:04:55.500 --> 00:05:00.770
So if you have application one or slash application two in the same load balancer,

00:05:00.770 --> 00:05:03.260
you can do that and you can change that here.

00:05:03.260 --> 00:05:05.150
In this case, we only have one.

00:05:05.150 --> 00:05:08.740
So we just use the slash or main route.

00:05:08.740 --> 00:05:11.650
When you go to your business.com,

00:05:11.650 --> 00:05:15.520
your business.com slash and nothing after the slash,

00:05:15.520 --> 00:05:16.945
you don't need the slash,

00:05:16.945 --> 00:05:23.040
that would basically route to just this one target group of web servers.

00:05:24.800 --> 00:05:28.815
The service port in this case is port 80.

00:05:28.815 --> 00:05:30.815
It could be port 443,

00:05:30.815 --> 00:05:33.355
which would be secure HTTP.

00:05:33.355 --> 00:05:35.280
That's another option that you have.

00:05:35.280 --> 00:05:40.210
But for that, you need a security certificate, an SSL certificate.

00:05:42.980 --> 00:05:51.670
Finally, the load balancer resource itself which is going to ask for a specific subnets.

00:05:51.670 --> 00:05:54.610
In this case, we're providing subnet 1 and subnet

00:05:54.610 --> 00:05:58.690
2 as the subnets for this load balancer.

00:05:58.690 --> 00:06:00.580
Now, why is that?

00:06:00.580 --> 00:06:07.475
It is because the load balancer itself is not a single point of failure.

00:06:07.475 --> 00:06:12.410
The load balancer will have a single entry point into your web application.

00:06:12.410 --> 00:06:15.515
However, itself is not a single point of failure.

00:06:15.515 --> 00:06:18.530
It will have internally more than one copy.

00:06:18.530 --> 00:06:20.880
So that if one of them dies,

00:06:20.880 --> 00:06:23.310
you still provide your service.

