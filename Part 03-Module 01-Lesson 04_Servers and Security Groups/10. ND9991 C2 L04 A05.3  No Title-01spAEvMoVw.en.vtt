WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.985
In the time that we've been doing this explanation,

00:00:02.985 --> 00:00:05.505
the stack has been running.

00:00:05.505 --> 00:00:07.455
Let's see if something has happened.

00:00:07.455 --> 00:00:10.330
Let's go back to the console to verify.

00:00:12.470 --> 00:00:15.585
Let's see if we go to the load balancer,

00:00:15.585 --> 00:00:23.020
let's see if there's something there. Let's see.

00:00:23.150 --> 00:00:25.860
I believe we're looking at one right now.

00:00:25.860 --> 00:00:27.615
Let's make sure that we can open,

00:00:27.615 --> 00:00:29.370
expand this a little bit better.

00:00:29.370 --> 00:00:34.860
It says listener, which is HTTP port 80, so sure enough.

00:00:34.860 --> 00:00:37.665
Yes, we have our load balancer running here,

00:00:37.665 --> 00:00:41.250
and we have this URL here that is provided to us.

00:00:41.250 --> 00:00:44.130
Now, the question is, why do we have a URL?

00:00:44.130 --> 00:00:46.920
Shouldn't it be better if we have a IP address?

00:00:46.920 --> 00:00:53.330
The reason is Amazon will never provide you with IP addresses.

00:00:53.330 --> 00:00:57.375
They will give you an alias name, then you can change.

00:00:57.375 --> 00:01:00.740
They provide also a DNS service that you can use to change

00:01:00.740 --> 00:01:03.890
this horrible long DNS name and you

00:01:03.890 --> 00:01:07.250
can change it into your business.com. That's not a problem.

00:01:07.250 --> 00:01:09.425
But if they provided you with an IP address,

00:01:09.425 --> 00:01:11.960
that means that they can not ever take it down for

00:01:11.960 --> 00:01:15.455
maintenance because you're respecting traffic in that one IP address,

00:01:15.455 --> 00:01:17.335
and because they give you a name,

00:01:17.335 --> 00:01:20.040
they can change the IP addresses in the background whenever they

00:01:20.040 --> 00:01:23.710
want for maintenance reasons.

00:01:24.650 --> 00:01:31.200
So we would have to test with this name to see if our application is responding.

00:01:31.550 --> 00:01:34.690
I'm going to copy this name.

00:01:37.340 --> 00:01:40.070
Now, I'm trying to find the target group,

00:01:40.070 --> 00:01:42.515
so it will be under load balancers.

00:01:42.515 --> 00:01:45.275
There's a target group here.

00:01:45.275 --> 00:01:50.540
This is supposed to show if we have

00:01:50.540 --> 00:01:57.210
targets associated with our load balancer. So let's take a look.

00:01:57.770 --> 00:02:00.770
There are some other values that you can say let's show

00:02:00.770 --> 00:02:03.820
these registration delay and the slow start.

00:02:03.820 --> 00:02:06.785
Slow start is when you have an application that takes

00:02:06.785 --> 00:02:11.210
a significant amount of time to come online and you want the load balancer

00:02:11.210 --> 00:02:14.930
to wait before the clarinet on healthy because it could

00:02:14.930 --> 00:02:16.670
be find a check for

00:02:16.670 --> 00:02:20.640
a healthy status and the application is just loading right now, right?

00:02:21.680 --> 00:02:26.970
We haven't check if D flower stack is completed properly.

00:02:26.970 --> 00:02:31.380
Let's make sure. I see an update complete here.

00:02:31.450 --> 00:02:35.190
Let's see what the events are.

00:02:35.900 --> 00:02:39.290
It created an application load balancer with it's

00:02:39.290 --> 00:02:43.190
matching listener target groups and everything.

00:02:43.190 --> 00:02:45.780
It looks good from this point of view.

00:02:51.370 --> 00:02:55.460
We do have three servers here that are running and they're

00:02:55.460 --> 00:02:59.210
the correct size which are t3 mediums,

00:02:59.210 --> 00:03:03.630
and one that we created with our auto scaling group.

00:03:07.790 --> 00:03:13.280
Let's go back down here to load balancer

00:03:13.280 --> 00:03:20.340
and make sure everything is where it needs to be.

00:03:27.560 --> 00:03:31.675
On the load balancer, you have load bouncer and you have target groups.

00:03:31.675 --> 00:03:37.330
The target group is the association between auto-scaling and the load balancer.

00:03:37.330 --> 00:03:41.030
You would have this, which says,

00:03:41.030 --> 00:03:44.185
this is exactly what we just discussed in the script.

00:03:44.185 --> 00:03:46.150
Port 8080, HTTP.

00:03:46.150 --> 00:03:50.330
This is what's being checked on the running instances.

00:03:51.060 --> 00:03:58.255
This is the health check that we talked about and it's associated with HTTP.

00:03:58.255 --> 00:04:02.230
It will check the slash and those other values that we specified.

00:04:02.230 --> 00:04:05.160
We have the targets,

00:04:05.160 --> 00:04:09.220
which is basically the target group in our script.

00:04:12.920 --> 00:04:19.295
We're waiting on this three instances that are currently reporting a timeout.

00:04:19.295 --> 00:04:21.380
That usually means that the application is

00:04:21.380 --> 00:04:24.290
still performing its necessary tasks to come online.

00:04:24.290 --> 00:04:29.960
It's not responding in an unhealthy way nor in a healthy way,

00:04:29.960 --> 00:04:33.420
so we need to wait for them to load properly.

