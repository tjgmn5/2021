WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.725
So what is DevOps bring to the table?

00:00:04.725 --> 00:00:08.085
DevOps offers you a set of practices,

00:00:08.085 --> 00:00:10.200
best practices and tools that you're going to

00:00:10.200 --> 00:00:12.870
use to solve these problems that I just mentioned.

00:00:12.870 --> 00:00:15.300
I'll give you one example right now,

00:00:15.300 --> 00:00:19.800
Configuration Management tools such as Chef, Puppet,

00:00:19.800 --> 00:00:26.265
and Ansible are tools designed to deploy and manage configuration changes to servers,

00:00:26.265 --> 00:00:29.475
could be 1, 100 or 1000 at the same time.

00:00:29.475 --> 00:00:32.145
This changes are written as code.

00:00:32.145 --> 00:00:37.215
You write this code, you put it in a repository just like source code from developers,

00:00:37.215 --> 00:00:41.180
and this allowed the operational people to take this code and

00:00:41.180 --> 00:00:45.895
make a patch or unnecessary configuration change to servers.

00:00:45.895 --> 00:00:47.790
Once these tests are then working,

00:00:47.790 --> 00:00:50.360
you can apply this same change

00:00:50.360 --> 00:00:54.900
to the development environment avoiding configuration drift.

00:00:55.720 --> 00:00:59.945
Another benefit of DevOps is deployments.

00:00:59.945 --> 00:01:04.325
Deployments are done in a very automated and predictable fashion,

00:01:04.325 --> 00:01:09.050
what this means is you could have the development team along with operations,

00:01:09.050 --> 00:01:16.270
create a deployment automation task,

00:01:16.270 --> 00:01:18.830
and this task is going to deploy not

00:01:18.830 --> 00:01:21.620
only to test but it's going to be the same for production,

00:01:21.620 --> 00:01:24.335
is just going to be different credentials, different environment,

00:01:24.335 --> 00:01:28.115
variables, but the process essentially is going to be the same.

00:01:28.115 --> 00:01:33.140
The predictability of this deployment makes everything a world of difference,

00:01:33.140 --> 00:01:41.180
because now you have code that you know that you don't care which person deploys it,

00:01:41.180 --> 00:01:44.330
is going to work as it was originally designed to be deployed,

00:01:44.330 --> 00:01:47.300
not because of some configuration

00:01:47.300 --> 00:01:50.600
tasks list that you were handed and you had to do it that way.

00:01:50.600 --> 00:01:53.815
No, it's an automator script that handles deployment,

00:01:53.815 --> 00:01:56.490
doesn't matter if is to development,

00:01:56.490 --> 00:01:59.260
to a staging, or production.

